
# types_parser.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS ARROW COLON COMMA EOL EQUALS IDENTIFIER LABRACKET LBRACE LBRACKET LPAREN RABRACKET RBRACE RBRACKET RPAREN TABLE TEXT\n    start : definition\n    \n    primitive : TEXT\n              | TABLE\n    \n    list : LBRACKET type RBRACKET\n    \n    dict : LBRACE type RBRACE\n    \n    field : IDENTIFIER COLON type\n          | field COMMA IDENTIFIER COLON type\n    \n    record : LPAREN field RPAREN\n    \n    tuplefield : COMMA type\n               | COMMA type tuplefield\n    \n    tuple : LPAREN RPAREN\n          | LPAREN type tuplefield RPAREN\n    \n    type : primitive\n         | list\n         | dict\n         | tuple\n         | record\n         | definition\n         | typedefinition\n         | generic\n         | function\n         | LPAREN type RPAREN\n    \n    function : type ARROW type\n    \n    typedefinition : IDENTIFIER\n    \n    definition : ALIAS IDENTIFIER EQUALS type\n    definition : ALIAS IDENTIFIER EQUALS type EOL\n    \n    generic : LABRACKET IDENTIFIER RABRACKET\n    '
    
_lr_action_items = {'ALIAS':([0,5,17,20,21,24,35,38,47,],[3,3,3,3,3,3,3,3,3,]),'$end':([1,2,6,7,8,9,10,11,12,13,14,15,16,18,19,23,26,32,33,36,39,40,41,42,],[0,-1,-24,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-3,-26,-11,-23,-22,-8,-4,-5,-27,-12,]),'IDENTIFIER':([3,5,17,20,21,22,24,35,37,38,47,],[4,6,28,6,6,31,6,6,44,6,6,]),'EQUALS':([4,],[5,]),'LPAREN':([5,17,20,21,24,35,38,47,],[17,17,17,17,17,17,17,17,]),'TEXT':([5,17,20,21,24,35,38,47,],[18,18,18,18,18,18,18,18,]),'TABLE':([5,17,20,21,24,35,38,47,],[19,19,19,19,19,19,19,19,]),'LBRACKET':([5,17,20,21,24,35,38,47,],[20,20,20,20,20,20,20,20,]),'LBRACE':([5,17,20,21,24,35,38,47,],[21,21,21,21,21,21,21,21,]),'LABRACKET':([5,17,20,21,24,35,38,47,],[22,22,22,22,22,22,22,22,]),'EOL':([6,7,8,9,10,11,12,13,14,15,16,18,19,23,26,32,33,36,39,40,41,42,],[-24,23,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-3,-26,-11,-23,-22,-8,-4,-5,-27,-12,]),'ARROW':([6,7,8,9,10,11,12,13,14,15,16,18,19,23,25,26,28,29,30,32,33,36,39,40,41,42,43,45,48,],[-24,24,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-3,-26,24,-11,-24,24,24,24,-22,-8,-4,-5,-27,-12,24,24,24,]),'RPAREN':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,23,25,26,27,28,32,33,34,36,39,40,41,42,43,45,46,48,],[-24,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,26,-2,-3,-26,33,-11,36,-24,-23,-22,42,-8,-4,-5,-27,-12,-9,-6,-10,-7,]),'COMMA':([6,7,8,9,10,11,12,13,14,15,16,18,19,23,25,26,27,28,32,33,36,39,40,41,42,43,45,48,],[-24,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-3,-26,35,-11,37,-24,-23,-22,-8,-4,-5,-27,-12,35,-6,-7,]),'RBRACKET':([6,7,8,9,10,11,12,13,14,15,16,18,19,23,26,29,32,33,36,39,40,41,42,],[-24,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-3,-26,-11,39,-23,-22,-8,-4,-5,-27,-12,]),'RBRACE':([6,7,8,9,10,11,12,13,14,15,16,18,19,23,26,30,32,33,36,39,40,41,42,],[-24,-25,-13,-14,-15,-16,-17,-18,-19,-20,-21,-2,-3,-26,-11,40,-23,-22,-8,-4,-5,-27,-12,]),'COLON':([28,44,],[38,47,]),'RABRACKET':([31,],[41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'definition':([0,5,17,20,21,24,35,38,47,],[2,13,13,13,13,13,13,13,13,]),'type':([5,17,20,21,24,35,38,47,],[7,25,29,30,32,43,45,48,]),'primitive':([5,17,20,21,24,35,38,47,],[8,8,8,8,8,8,8,8,]),'list':([5,17,20,21,24,35,38,47,],[9,9,9,9,9,9,9,9,]),'dict':([5,17,20,21,24,35,38,47,],[10,10,10,10,10,10,10,10,]),'tuple':([5,17,20,21,24,35,38,47,],[11,11,11,11,11,11,11,11,]),'record':([5,17,20,21,24,35,38,47,],[12,12,12,12,12,12,12,12,]),'typedefinition':([5,17,20,21,24,35,38,47,],[14,14,14,14,14,14,14,14,]),'generic':([5,17,20,21,24,35,38,47,],[15,15,15,15,15,15,15,15,]),'function':([5,17,20,21,24,35,38,47,],[16,16,16,16,16,16,16,16,]),'field':([17,],[27,]),'tuplefield':([25,43,],[34,46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> definition','start',1,'p_start','types.py',788),
  ('primitive -> TEXT','primitive',1,'p_primitive','types.py',795),
  ('primitive -> TABLE','primitive',1,'p_primitive','types.py',796),
  ('list -> LBRACKET type RBRACKET','list',3,'p_list','types.py',806),
  ('dict -> LBRACE type RBRACE','dict',3,'p_dict','types.py',813),
  ('field -> IDENTIFIER COLON type','field',3,'p_field','types.py',820),
  ('field -> field COMMA IDENTIFIER COLON type','field',5,'p_field','types.py',821),
  ('record -> LPAREN field RPAREN','record',3,'p_record','types.py',834),
  ('tuplefield -> COMMA type','tuplefield',2,'p_tuplefield','types.py',841),
  ('tuplefield -> COMMA type tuplefield','tuplefield',3,'p_tuplefield','types.py',842),
  ('tuple -> LPAREN RPAREN','tuple',2,'p_tuple','types.py',854),
  ('tuple -> LPAREN type tuplefield RPAREN','tuple',4,'p_tuple','types.py',855),
  ('type -> primitive','type',1,'p_type','types.py',867),
  ('type -> list','type',1,'p_type','types.py',868),
  ('type -> dict','type',1,'p_type','types.py',869),
  ('type -> tuple','type',1,'p_type','types.py',870),
  ('type -> record','type',1,'p_type','types.py',871),
  ('type -> definition','type',1,'p_type','types.py',872),
  ('type -> typedefinition','type',1,'p_type','types.py',873),
  ('type -> generic','type',1,'p_type','types.py',874),
  ('type -> function','type',1,'p_type','types.py',875),
  ('type -> LPAREN type RPAREN','type',3,'p_type','types.py',876),
  ('function -> type ARROW type','function',3,'p_function','types.py',886),
  ('typedefinition -> IDENTIFIER','typedefinition',1,'p_typedefinition','types.py',893),
  ('definition -> ALIAS IDENTIFIER EQUALS type','definition',4,'p_definition','types.py',907),
  ('definition -> ALIAS IDENTIFIER EQUALS type EOL','definition',5,'p_definition','types.py',908),
  ('generic -> LABRACKET IDENTIFIER RABRACKET','generic',3,'p_generic','types.py',925),
]
