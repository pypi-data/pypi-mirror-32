Metadata-Version: 1.1
Name: Flask-MonitoringDashboard
Version: 1.13.1
Summary: Automatically monitor the evolving performance of Flask/Python web services.
Home-page: https://github.com/flask-dashboard/Flask-MonitoringDashboard
Author: Patrick Vogel, Thijs Klooster & Bogdan Petre
Author-email: patrickvogel@live.nl
License: UNKNOWN
Project-URL: Bug Reports, https://github.com/flask-dashboard/Flask-MonitoringDashboard/issues
Project-URL: PyPi, https://pypi.org/project/Flask-MonitoringDashboard/
Project-URL: Documentation, http://flask-monitoringdashboard.readthedocs.io/
Project-URL: Source, https://github.com/flask-dashboard/Flask-MonitoringDashboard/
Description: # Flask Monitoring Dashboard
        [![Build Status](https://travis-ci.org/flask-dashboard/Flask-MonitoringDashboard.svg?branch=master)](https://travis-ci.org/flask-dashboard/Flask-MonitoringDashboard)
        [![Documentation Status](https://readthedocs.org/projects/flask-monitoringdashboard/badge/?version=latest)](http://flask-monitoringdashboard.readthedocs.io/en/latest/?badge=latest)
        [![codecov](https://codecov.io/gh/flask-dashboard/Flask-MonitoringDashboard/branch/master/graph/badge.svg)](https://codecov.io/gh/flask-dashboard/Flask-MonitoringDashboard)
        [![PyPI version](https://badge.fury.io/py/Flask-MonitoringDashboard.svg)](https://badge.fury.io/py/Flask-MonitoringDashboard)
        [![Gitter chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Flask-MonitoringDashboard/Lobby)
        [![Py-version](https://img.shields.io/pypi/pyversions/flask_monitoringdashboard.svg)](https://img.shields.io/pypi/pyversions/flask_monitoringdashboard.svg)
        [![Downloads](http://pepy.tech/badge/flask-monitoringdashboard)](http://pepy.tech/count/flask-monitoringdashboard)
        
        Dashboard for automatic monitoring of Flask web-services.
        
        The Flask Monitoring Dashboard is an extension that offers four main functionalities with little effort from the Flask developer:
        - **Monitor the Flask application:**
        Our Dashboard allows you to see which endpoints process a lot of request and how fast. 
        Additionally, it provides information about the evolving performance of an endpoint throughout different versions if youâ€™re using git.
        - **Monitor your test coverage:**
        The dashboard allows you to find out which endpoints are covered by unit tests, allowing also for integration with Travis for automation purposes. 
        For more information, see [this file](http://flask-monitoringdashboard.readthedocs.io/en/latest/functionality.html#test-coverage-monitoring).
        - **Collect extra information about outliers:**
        Outliers are requests that take much longer to process than regular requests. 
        The dashboard automatically detects that a request is an outlier and stores extra information about it (stack trace, request values, Request headers, Request environment).
        - **Visualize the collected data in a number useful graphs:**
        The dashboard is automatically added to your existing Flask application.
        You can view the results by default using the default endpoint (this can be configured to another route):
        
            [/dashboard](http://localhost:5000/dashboard)
        
        For a more advanced documentation, take a look at the information on [this site](http://flask-monitoringdashboard.readthedocs.io/en/latest/functionality.html).
        
        ## Installation
        To install from source, download the source code, then run this:
        
            python setup.py install
        
        Or install with pip:
            
            pip install flask_monitoringdashboard
            
        ### Setup
        Adding the extension to your Flask app is simple:
        
            from flask import Flask
            import flask_monitoringdashboard as dashboard
        
            app = Flask(__name__)
            dashboard.bind(app)
         
        ## Documentation
        For a more advanced documentation, see [this site](http://flask-monitoringdashboard.readthedocs.io).
        
        ## Screenshots
        ![Screenshot 1](/docs/img/screenshot1.png)
        ![Screenshot 2](/docs/img/screenshot2.png)
        
        
        Change Log
        =========================================================================
        
        All notable changes to this project will be documented in this file.
        This project adheres to `Semantic Versioning <http://semver.org/>`_.
        Please note that the changes before version 1.10.0 have not been documented.
        
        Unreleased
        ----------
        Changed
        
        - Restructuring of Test-Monitoring page
        
        - Identify testRun by Travis build number
        
        
        v1.13.0
        ----------
        Changed
        
        - Added boxplot of CPU loads
        
        - Updated naming scheme of all graphs
        
        - Implemented two configuration options: the local timezone and the option to automatically monitor new endpoints
        
        - Updated the Test-Monitoring initialization
        
        - Updated Database support for MySQL
        
        v1.12.0
        -------
        Changed
        
        - Removed two graphs: hits per hour and execution time per hour
        
        - New template design
        
        - Refactored backhand of the code
        
        - Updated Bootstrap 3.0 to 4.0
        
        - Setup of Code coverage
        
        
        v1.11.0
        -------
        Changed
        
        - Added new graph: Version usage
        
        - Added column (Hits in past 7 days) in Measurements Overview
        
        - Fixed bug with configuration
        
        - Changed rows and column in outlier-table
        
        - Added TODO List
        
        - Updated functionality to retrieve the stacktrace of an Outlier
        
        - Fixed bug with white colors from the config option
        
        
        v1.10.0
        ----------
        Changed
        
        - Added security for automatic endpoint-data retrieval.
        
        - Added test for export_data-endpoints
        
        - Added MIT License.
        
        - Added documentation
        
Platform: Any
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Framework :: Flask
