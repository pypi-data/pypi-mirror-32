      subroutine DMRedundantSetSize(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscMPIInt b ! PetscMPIInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMRedundantGetSize(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscMPIInt b ! PetscMPIInt
       PetscInt c ! PetscInt
       integer z
       end subroutine
      subroutine DMGlobalToLocalBeginDefaultShell(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMGlobalToLocalEndDefaultShell(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMLocalToGlobalBeginDefaultShell(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMLocalToGlobalEndDefaultShell(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMLocalToLocalBeginDefaultShell(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMLocalToLocalEndDefaultShell(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMShellSetMatrix(a,b,z)
      use petscdmdef
       DM a ! DM
       Mat b ! Mat
       integer z
       end subroutine
      subroutine DMShellSetGlobalVector(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMShellSetLocalVector(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMShellSetGlobalToLocalVecScatter(a,b,z)
      use petscdmdef
       DM a ! DM
       VecScatter b ! VecScatter
       integer z
       end subroutine
      subroutine DMShellSetLocalToGlobalVecScatter(a,b,z)
      use petscdmdef
       DM a ! DM
       VecScatter b ! VecScatter
       integer z
       end subroutine
      subroutine DMShellSetLocalToLocalVecScatter(a,b,z)
      use petscdmdef
       DM a ! DM
       VecScatter b ! VecScatter
       integer z
       end subroutine
      subroutine DMShellCreate(a,b,z)
      use petscdmdef
       integer a ! MPI_Comm
       DM b ! DM
       integer z
       end subroutine
      subroutine DMGetLocalVector(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMRestoreLocalVector(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMGetGlobalVector(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMClearGlobalVectors(a,z)
      use petscdmdef
       DM a ! DM
       integer z
       end subroutine
      subroutine DMClearLocalVectors(a,z)
      use petscdmdef
       DM a ! DM
       integer z
       end subroutine
      subroutine DMRestoreGlobalVector(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMCreate(a,b,z)
      use petscdmdef
       integer a ! MPI_Comm
       DM b ! DM
       integer z
       end subroutine
      subroutine DMClone(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine VecGetDM(a,b,z)
      use petscdmdef
       Vec a ! Vec
       DM b ! DM
       integer z
       end subroutine
      subroutine VecSetDM(a,b,z)
      use petscdmdef
       Vec a ! Vec
       DM b ! DM
       integer z
       end subroutine
      subroutine MatGetDM(a,b,z)
      use petscdmdef
       Mat a ! Mat
       DM b ! DM
       integer z
       end subroutine
      subroutine MatSetDM(a,b,z)
      use petscdmdef
       Mat a ! Mat
       DM b ! DM
       integer z
       end subroutine
      subroutine DMDestroy(a,z)
      use petscdmdef
       DM a ! DM
       integer z
       end subroutine
      subroutine DMSetUp(a,z)
      use petscdmdef
       DM a ! DM
       integer z
       end subroutine
      subroutine DMSetFromOptions(a,z)
      use petscdmdef
       DM a ! DM
       integer z
       end subroutine
      subroutine DMCreateGlobalVector(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMCreateLocalVector(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMGetLocalToGlobalMapping(a,b,z)
      use petscdmdef
       DM a ! DM
       ISLocalToGlobalMapping b ! ISLocalToGlobalMapping
       integer z
       end subroutine
      subroutine DMGetBlockSize(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMCreateInterpolation(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       Mat c ! Mat
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMCreateRestriction(a,b,c,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       Mat c ! Mat
       integer z
       end subroutine
      subroutine DMCreateInjection(a,b,c,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       Mat c ! Mat
       integer z
       end subroutine
      subroutine DMCreateMassMatrix(a,b,c,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       Mat c ! Mat
       integer z
       end subroutine
      subroutine DMCreateColoring(a,b,c,z)
      use petscdmdef
       DM a ! DM
       ISColoringType b ! ISColoringType
       ISColoring c ! ISColoring
       integer z
       end subroutine
      subroutine DMCreateMatrix(a,b,z)
      use petscdmdef
       DM a ! DM
       Mat b ! Mat
       integer z
       end subroutine
      subroutine DMSetMatrixPreallocateOnly(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMSetMatrixStructureOnly(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMCreateSubDM(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c (*) ! PetscInt
       IS d ! IS
       DM e ! DM
       integer z
       end subroutine
      subroutine DMRefine(a,b,c,z)
      use petscdmdef
       DM a ! DM
       integer b ! MPI_Comm
       DM c ! DM
       integer z
       end subroutine
      subroutine DMInterpolate(a,b,c,z)
      use petscdmdef
       DM a ! DM
       Mat b ! Mat
       DM c ! DM
       integer z
       end subroutine
      subroutine DMGetRefineLevel(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMSetRefineLevel(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMGlobalToLocalBegin(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMGlobalToLocalEnd(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMLocalToGlobalBegin(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMLocalToGlobalEnd(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMLocalToLocalBegin(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMLocalToLocalEnd(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       InsertMode c ! InsertMode
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMCoarsen(a,b,c,z)
      use petscdmdef
       DM a ! DM
       integer b ! MPI_Comm
       DM c ! DM
       integer z
       end subroutine
      subroutine DMRestrict(a,b,c,d,e,z)
      use petscdmdef
       DM a ! DM
       Mat b ! Mat
       Vec c ! Vec
       Mat d ! Mat
       DM e ! DM
       integer z
       end subroutine
      subroutine DMSubDomainRestrict(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       VecScatter b ! VecScatter
       VecScatter c ! VecScatter
       DM d ! DM
       integer z
       end subroutine
      subroutine DMGetCoarsenLevel(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMCreateAggregates(a,b,c,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       Mat c ! Mat
       integer z
       end subroutine
      subroutine DMHasVariableBounds(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMHasColoring(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMHasCreateRestriction(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMHasCreateInjection(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMGetDefaultSection(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       integer z
       end subroutine
      subroutine DMSetDefaultSection(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       integer z
       end subroutine
      subroutine DMGetDefaultConstraints(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       Mat c ! Mat
       integer z
       end subroutine
      subroutine DMSetDefaultConstraints(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       Mat c ! Mat
       integer z
       end subroutine
      subroutine DMGetDefaultGlobalSection(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       integer z
       end subroutine
      subroutine DMSetDefaultGlobalSection(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       integer z
       end subroutine
      subroutine DMGetDefaultSF(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
       integer z
       end subroutine
      subroutine DMSetDefaultSF(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
       integer z
       end subroutine
      subroutine DMGetPointSF(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
       integer z
       end subroutine
      subroutine DMSetPointSF(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSF b ! PetscSF
       integer z
       end subroutine
      subroutine DMGetDS(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscDS b ! PetscDS
       integer z
       end subroutine
      subroutine DMSetDS(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscDS b ! PetscDS
       integer z
       end subroutine
      subroutine DMGetField(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscObject c ! PetscObject
       integer z
       end subroutine
      subroutine DMSetField(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscObject c ! PetscObject
       integer z
       end subroutine
      subroutine DMGetDimension(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMSetDimension(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMGetDimPoints(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscInt c ! PetscInt
       PetscInt d ! PetscInt
       integer z
       end subroutine
      subroutine DMSetCoordinates(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMSetCoordinatesLocal(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMGetCoordinates(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMGetCoordinatesLocal(a,b,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       integer z
       end subroutine
      subroutine DMGetCoordinateDM(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMSetCoordinateDM(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMGetCoordinateDim(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMSetCoordinateDim(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMGetCoordinateSection(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscSection b ! PetscSection
       integer z
       end subroutine
      subroutine DMSetCoordinateSection(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscSection c ! PetscSection
       integer z
       end subroutine
      subroutine DMLocalizeCoordinate(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       PetscScalar b (*) ! PetscScalar
       PetscBool c ! PetscBool
       PetscScalar d (*) ! PetscScalar
       integer z
       end subroutine
      subroutine DMGetCoordinatesLocalized(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMLocalizeCoordinates(a,z)
      use petscdmdef
       DM a ! DM
       integer z
       end subroutine
      subroutine DMLocatePoints(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       DMPointLocationType c ! DMPointLocationType
       PetscSF d ! PetscSF
       integer z
       end subroutine
      subroutine DMGetOutputDM(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMGetOutputSequenceNumber(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine DMSetOutputSequenceNumber(a,b,c,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       PetscReal c ! PetscReal
       integer z
       end subroutine
      subroutine DMGetUseNatural(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMSetUseNatural(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscBool b ! PetscBool
       integer z
       end subroutine
      subroutine DMGetNumLabels(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMCopyLabels(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMGetCoarseDM(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMSetCoarseDM(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMGetFineDM(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMSetFineDM(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMGetNumBoundary(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine MatFDColoringUseDM(a,b,z)
      use petscdmdef
       Mat a ! Mat
       MatFDColoring b ! MatFDColoring
       integer z
       end subroutine
      subroutine DMCompositeGetNumberDM(a,b,z)
      use petscdmdef
       DM a ! DM
       PetscInt b ! PetscInt
       integer z
       end subroutine
      subroutine DMCompositeScatterArray(a,b,c,z)
      use petscdmdef
       DM a ! DM
       Vec b ! Vec
       Vec c ! Vec
       integer z
       end subroutine
      subroutine DMCompositeGatherArray(a,b,c,d,z)
      use petscdmdef
       DM a ! DM
       InsertMode b ! InsertMode
       Vec c ! Vec
       Vec d ! Vec
       integer z
       end subroutine
      subroutine DMCompositeAddDM(a,b,z)
      use petscdmdef
       DM a ! DM
       DM b ! DM
       integer z
       end subroutine
      subroutine DMCompositeCreate(a,b,z)
      use petscdmdef
       integer a ! MPI_Comm
       DM b ! DM
       integer z
       end subroutine
