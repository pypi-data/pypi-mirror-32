{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///C:/dev/ipydatawidgets/node_modules/ndarray/ndarray.js","webpack:///external \"@jupyter-widgets/base\"","webpack:///../serializers/src/ndarray.ts","webpack:///../serializers/src/index.ts","webpack:///./src/version.ts","webpack:///./src/ndarray.ts","webpack:///./src/scaled.ts","webpack:///../serializers/src/union.ts","webpack:///../serializers/src/common.ts","webpack:///C:/dev/ipydatawidgets/node_modules/is-buffer/index.js","webpack:///C:/dev/ipydatawidgets/node_modules/iota-array/iota.js","webpack:///./src/base.ts","webpack:///./src/index.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","iota","isBuffer","hasTypedArrays","Float64Array","compare1st","a","b","order","stride","this","terms","Array","length","Math","abs","sort","result","compileConstructor","dtype","dimension","className","join","useGetters","code","Function","procedure","CACHED_CONSTRUCTORS","indices","args","map","index_str","shapeArg","strideArg","push","a_vars","c_vars","tShape","tStride","idx","float32","float64","int8","int16","int32","uint8","uint16","uint32","array","uint8_clamped","buffer","generic","data","shape","offset","undefined","ctor","sz","toString","isArray","arrayDType","ctor_list","__WEBPACK_EXTERNAL_MODULE__1__","ndarray","ensureSerializableDtype","Error","JSONToArray","obj","manager","typesToArray","arrayToJSON","widget","array_serialization","deserialize","serialize","Int8Array","Int16Array","Int32Array","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","Float32Array","__export","version","EXTENSION_SPEC_VERSION","base_1","jupyter_dataserializers_1","NDArrayModel","_super","__extends","defaults","__assign","_model_name","model_name","getNDArray","serializers","DataModel","ndarray_1","copyArray","slice","ScaledArrayModel","_this","apply","arguments","scaledData","scale","computeScaledData","getArray","changed","trigger","resized","arrayMismatch","scaledDtype","target","initialize","attributes","options","initPromise","Promise","resolve","then","setupListeners","on","onChange","listenToUnion","listenTo","model","JSON","stringify","data_union_serialization","unpack_models","JSONToUnion","JSONToUnionArray","unionToJSON","WidgetModel","toJSON","unionName","callback","allChanges","listenToWidgetChanges","union","onUnionChange","unionModel","subOptions","prev","previous","curr","stopListening","off","data_union_array_serialization","isDataSource","constructor","readFloatLE","isSlowBuffer","_isBuffer","version_1","_model_module","model_module","_model_module_version","model_module_version","_view_name","view_name","_view_module","view_module","_view_module_version","view_module_version","scaled_1"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n\r\nimport {\r\n  WidgetModel, ManagerBase\r\n} from '@jupyter-widgets/base';\r\n\r\nimport {\r\n  ISerializers\r\n} from './common';\r\n\r\nimport ndarray = require('ndarray');\r\n\r\n\r\nexport\r\ntype TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array;\r\nexport\r\ntype TypedArrayConstructor = Int8ArrayConstructor | Uint8ArrayConstructor | Int16ArrayConstructor | Uint16ArrayConstructor | Int32ArrayConstructor | Uint32ArrayConstructor | Uint8ClampedArrayConstructor | Float32ArrayConstructor | Float64ArrayConstructor;\r\n\r\nexport\r\ninterface IArrayLookup {\r\n    int8: Int8Array,\r\n    int16: Int16Array,\r\n    int32: Int32Array,\r\n    uint8: Uint8Array,\r\n    uint16: Uint16Array,\r\n    uint32: Uint32Array,\r\n    float32: Float32Array,\r\n    float64: Float64Array\r\n};\r\n\r\n/**\r\n * The serialized representation of a received array\r\n */\r\nexport\r\ninterface IReceivedSerializedArray {\r\n  shape: number[];\r\n  dtype: keyof IArrayLookup;\r\n  buffer: DataView;\r\n}\r\n\r\n/**\r\n * The serialized representation of an array for sending\r\n */\r\nexport\r\ninterface ISendSerializedArray {\r\n  shape: number[];\r\n  dtype: keyof IArrayLookup;\r\n  buffer: ArrayBuffer;\r\n}\r\n\r\n\r\nexport\r\nfunction ensureSerializableDtype(dtype: ndarray.DataType): keyof IArrayLookup {\r\n  if (dtype === 'array' || dtype === 'buffer' || dtype === 'generic') {\r\n    throw new Error(`Cannot serialize ndarray with dtype: ${dtype}.`);\r\n  } else if (dtype === 'uint8_clamped') {\r\n    dtype = 'uint8';\r\n  }\r\n  return dtype;\r\n}\r\n\r\n\r\nexport\r\nfunction JSONToArray(obj: IReceivedSerializedArray | null, manager?: ManagerBase<any>): ndarray | null {\r\n  if (obj === null) {\r\n    return null;\r\n  }\r\n  // obj is {shape: list, dtype: string, array: DataView}\r\n  // return an ndarray object\r\n  return ndarray(new typesToArray[obj.dtype](obj.buffer.buffer), obj.shape);\r\n}\r\n\r\nexport\r\nfunction arrayToJSON(obj: ndarray | null, widget?: WidgetModel): ISendSerializedArray | null {\r\n  if (obj === null) {\r\n    return null;\r\n  }\r\n  let dtype = ensureSerializableDtype(obj.dtype);\r\n  // serialize to {shape: list, dtype: string, array: buffer}\r\n  return { shape: obj.shape, dtype, buffer: obj.data as TypedArray };\r\n}\r\n\r\nexport\r\nconst array_serialization = { deserialize: JSONToArray, serialize: arrayToJSON };\r\n\r\nexport\r\nconst typesToArray = {\r\n    int8: Int8Array,\r\n    int16: Int16Array,\r\n    int32: Int32Array,\r\n    uint8: Uint8Array,\r\n    uint8_clamped: Uint8ClampedArray,\r\n    uint16: Uint16Array,\r\n    uint32: Uint32Array,\r\n    float32: Float32Array,\r\n    float64: Float64Array\r\n}\r\n","\r\nexport * from './ndarray';\r\n\r\nexport * from './common';\r\n\r\nexport * from './union';\r\n\r\n\r\n/**\r\n * The current package version.\r\n */\r\nexport\r\nconst version = (require('../package.json') as any).version;\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n\r\n/**\r\n * The version of the Jupyter data widgets attribute spec that this package\r\n * implements.\r\n */\r\nexport\r\nconst EXTENSION_SPEC_VERSION = '4.0.0';\r\n\r\n\r\n/**\r\n * The current package version.\r\n */\r\nexport\r\nconst version = (require('../package.json') as any).version;\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n\r\nimport {\r\n  WidgetModel, ManagerBase\r\n} from '@jupyter-widgets/base';\r\n\r\nimport {\r\n  DataModel\r\n} from './base';\r\n\r\nimport {\r\n  ISerializers, array_serialization\r\n} from 'jupyter-dataserializers';\r\n\r\nimport ndarray = require('ndarray');\r\n\r\n\r\nexport\r\nclass NDArrayModel extends DataModel {\r\n  defaults() {\r\n    return {...super.defaults(), ...{\r\n      array: ndarray([]),\r\n      _model_name: NDArrayModel.model_name,\r\n    }} as any;\r\n  }\r\n\r\n  getNDArray(key='array'): ndarray | null {\r\n    return this.get(key);\r\n  }\r\n\r\n  static serializers: ISerializers = {\r\n      ...DataModel.serializers,\r\n      array: array_serialization,\r\n    };\r\n\r\n  static model_name = 'NDArrayModel';\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n\r\nimport {\r\n  WidgetModel, ManagerBase, unpack_models\r\n} from '@jupyter-widgets/base';\r\n\r\nimport {\r\n  ObjectHash\r\n} from 'backbone';\r\n\r\nimport {\r\n  LinearScaleModel\r\n} from 'jupyter-scales';\r\n\r\nimport {\r\n  data_union_serialization, listenToUnion,\r\n  TypedArray, typesToArray, IArrayLookup, TypedArrayConstructor,\r\n  ISerializers, getArray, ensureSerializableDtype\r\n} from 'jupyter-dataserializers';\r\n\r\nimport {\r\n  NDArrayModel\r\n} from './ndarray';\r\n\r\n\r\nimport ndarray = require('ndarray');\r\n\r\n\r\n/**\r\n * Utility to create a copy of an ndarray\r\n *\r\n * @param {ndarray.NDArray} array\r\n * @returns {ndarray.NDArray}\r\n */\r\nexport\r\nfunction copyArray(array: ndarray, dtype?: ndarray.DataType): ndarray {\r\n  if (dtype === undefined) {\r\n    return ndarray((array.data as TypedArray).slice(),\r\n                   array.shape,\r\n                   array.stride,\r\n                   array.offset);\r\n  }\r\n  let ctor: TypedArrayConstructor;\r\n  if (dtype === 'buffer' || dtype === 'generic' || dtype === 'array') {\r\n    throw new Error(`Cannot copy ndarray of dtype \"${dtype}\".`);\r\n  }\r\n  return ndarray(new typesToArray[dtype](array.data as TypedArray),\r\n                 array.shape,\r\n                 array.stride,\r\n                 array.offset)\r\n}\r\n\r\n\r\n/**\r\n * Scaled array model.\r\n *\r\n * This model provides a scaled version of an array, that is\r\n * automatically recomputed when either the array or the scale\r\n * changes.\r\n *\r\n * It triggers an event 'change:scaledData' when the array is\r\n * recomputed. Note: 'scaledData' is a direct propetry, not a\r\n * model attribute. The event triggers with an argument\r\n * { resized: boolean}, which indicates whether the array changed\r\n * size. Note: When the 'resized' flag is false, the old array will\r\n * have been reused, otherwise a new array is allocated.\r\n *\r\n * @export\r\n * @class ScaledArrayModel\r\n * @extends {DataModel}\r\n */\r\nexport\r\nclass ScaledArrayModel extends NDArrayModel {\r\n  defaults() {\r\n    return {...super.defaults(), ...{\r\n      array: ndarray([]),\r\n      scale: null,\r\n      _model_name: ScaledArrayModel.model_name,\r\n    }} as any;\r\n  }\r\n\r\n  /**\r\n   * (Re-)compute the scaledData data.\r\n   *\r\n   * @returns {void}\r\n   * @memberof ScaledArrayModel\r\n   */\r\n  computeScaledData(): void {\r\n    let array = getArray(this.get('array'));\r\n    let scale = this.get('scale') as LinearScaleModel | null;\r\n    // Handle null case immediately:\r\n    if (array === null || scale === null) {\r\n      let changed = this.scaledData !== null;\r\n      this.scaledData = null;\r\n      if (changed) {\r\n        this.trigger('change:scaledData', {resized: true});\r\n      }\r\n      return;\r\n    }\r\n    let resized = this.arrayMismatch();\r\n    if (resized) {\r\n      // Allocate new array\r\n      this.scaledData = copyArray(array, this.scaledDtype());\r\n    }\r\n    let data = array.data as TypedArray;\r\n    let target = this.scaledData!.data as TypedArray;\r\n\r\n    // Set values:\r\n    for (let i = 0; i < data.length; ++i) {\r\n      target[i] = scale.obj(data[i])\r\n    }\r\n\r\n    this.trigger('change:scaledData', {resized});\r\n  }\r\n\r\n  /**\r\n   * Initialize the model\r\n   *\r\n   * @param {Backbone.ObjectHash} attributes\r\n   * @param {{model_id: string; comm?: any; widget_manager: any; }} options\r\n   * @memberof ScaledArrayModel\r\n   */\r\n  initialize(attributes: ObjectHash, options: {model_id: string; comm?: any; widget_manager: any; }): void {\r\n    super.initialize(attributes, options);\r\n    this.initPromise = Promise.resolve().then(() => {\r\n      this.computeScaledData();\r\n      this.setupListeners();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets up any relevant event listeners after the object has been initialized,\r\n   * but before the initPromise is resolved.\r\n   *\r\n   * @memberof ScaledArrayModel\r\n   */\r\n  setupListeners(): void {\r\n    // Listen to direct changes on our model:\r\n    this.on('change', this.onChange, this);\r\n\r\n    // Listen to changes within array and scale models:\r\n    listenToUnion(this, 'array', this.onChange.bind(this));\r\n    this.listenTo(this.get('scale'), 'change', this.onChange);\r\n  }\r\n\r\n  getNDArray(key='scaledData'): ndarray | null {\r\n    if (key === 'scaledData') {\r\n      if (this.scaledData === null) {\r\n        this.computeScaledData();\r\n      }\r\n      return this.scaledData;\r\n    } else {\r\n      return super.getNDArray(key);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Callback for when the source data changes.\r\n   *\r\n   * @param {WidgetModel} model\r\n   * @memberof ScaledArrayModel\r\n   */\r\n  protected onChange(model: WidgetModel): void {\r\n    this.computeScaledData();\r\n  }\r\n\r\n  /**\r\n   * Whether the array and scaledData have a mismatch in shape or type.\r\n   *\r\n   * @protected\r\n   * @returns {boolean}\r\n   * @memberof ScaledArrayModel\r\n   */\r\n  protected arrayMismatch(): boolean {\r\n    let array = getArray(this.get('array'));\r\n    if (array === null && this.scaledData === null) {\r\n      return false;\r\n    }\r\n    return array === null || this.scaledData === null ||\r\n      JSON.stringify(array.shape) !== JSON.stringify(this.scaledData.shape) ||\r\n      array.dtype !== this.scaledData.dtype;\r\n  }\r\n\r\n  protected scaledDtype(): ndarray.DataType | undefined {\r\n    let array = getArray(this.get('array'));\r\n    if (array === null) {\r\n      return undefined;\r\n    }\r\n    return array.dtype;\r\n  }\r\n\r\n  /**\r\n   * The scaled data array.\r\n   *\r\n   * @type {(ndarray.NDArray | null)}\r\n   * @memberof ScaledArrayModel\r\n   */\r\n  scaledData: ndarray<any> | null = null;\r\n\r\n  /**\r\n   * A promise that resolves once the model has finished its initialization.\r\n   *\r\n   * @type {Promise<void>}\r\n   * @memberof ScaledArrayModel\r\n   */\r\n  initPromise: Promise<void>;\r\n\r\n  static serializers: ISerializers = {\r\n      ...NDArrayModel.serializers,\r\n      array: data_union_serialization,\r\n      scale: { deserialize: unpack_models },\r\n    };\r\n\r\n  static model_name = 'ScaledArrayModel';\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n\r\nimport {\r\n  WidgetModel, ManagerBase, unpack_models\r\n} from '@jupyter-widgets/base';\r\n\r\nimport {\r\n  IReceivedSerializedArray, ISendSerializedArray, JSONToArray, arrayToJSON\r\n} from './ndarray';\r\n\r\n// This is OK, as long as we only use it for type declarations\r\nimport {\r\n  IDataSource\r\n} from './common';\r\n\r\nimport ndarray = require('ndarray');\r\n\r\n\r\n/**\r\n * Union type declaration of an NDArrayModel and a raw ndarray.\r\n */\r\nexport\r\ntype DataUnion = IDataSource | ndarray\r\n\r\n\r\n/**\r\n * Deserializes union JSON to an ndarray or a NDArrayModel, as appropriate.\r\n */\r\nexport\r\nfunction JSONToUnion(obj: IReceivedSerializedArray | string | null, manager?: ManagerBase<any>): Promise<ndarray | IDataSource | null> {\r\n  if (typeof obj === 'string') {\r\n    var modelPromise = unpack_models(obj, manager) as Promise<IDataSource>;\r\n    return modelPromise;\r\n  } else {\r\n    return Promise.resolve(JSONToArray(obj, manager));\r\n  }\r\n}\r\n\r\n/**\r\n * Deserializes union JSON to an ndarray, regardless of whether it is a widget reference or direct data.\r\n */\r\nexport\r\nfunction JSONToUnionArray(obj: IReceivedSerializedArray | string | null, manager?: ManagerBase<any>): Promise<ndarray | null> {\r\n  if (typeof obj === 'string') {\r\n    var modelPromise = unpack_models(obj, manager) as Promise<IDataSource>;\r\n    return modelPromise.then((model) => {\r\n      return model.getNDArray();\r\n    });\r\n  } else {\r\n    return Promise.resolve(JSONToArray(obj, manager));\r\n  }\r\n}\r\n\r\n/**\r\n * Serializes a union to JSON.\r\n */\r\nexport\r\nfunction unionToJSON(obj: DataUnion | null, widget?: WidgetModel): ISendSerializedArray | string | null {\r\n  if (obj instanceof WidgetModel) {\r\n    return obj.toJSON(undefined);\r\n  } else {\r\n    return arrayToJSON(obj as ndarray | null, widget);\r\n  }\r\n}\r\n\r\n/**\r\n * Sets up backbone events for listening to union changes.\r\n *\r\n * The callback will be called when:\r\n *  - The model is a widget, and its data changes\r\n *\r\n * Specify `allChanges` as truthy to also cover these cases:\r\n *  - The union changes from a widget to an array or vice-versa\r\n *  - The union is an array and its content changes\r\n *\r\n * To stop listening, call the return value.\r\n */\r\nexport\r\nfunction listenToUnion(model: Backbone.Model,\r\n                       unionName: string,\r\n                       callback: (model: Backbone.Model, options: any) => any,\r\n                       allChanges?: boolean\r\n                      ): () => void {\r\n\r\n  function listenToWidgetChanges(union: DataUnion) {\r\n    if (union instanceof WidgetModel) {\r\n      // listen to changes in current model\r\n      model.listenTo(union, 'change', callback);\r\n    }\r\n  }\r\n\r\n  function onUnionChange(unionModel: WidgetModel, value: any, subOptions: any) {\r\n    var prev = model.previous(unionName) || [];\r\n    var curr = value || [];\r\n\r\n    if (prev instanceof WidgetModel) {\r\n      model.stopListening(prev);\r\n    } else if (allChanges && !(curr instanceof WidgetModel)) {\r\n      // The union was an array, and has changed to a new array\r\n      callback(unionModel, subOptions);\r\n    }\r\n    if (allChanges && (prev instanceof WidgetModel) !== (curr instanceof WidgetModel)) {\r\n      // Union type has changed, call out\r\n      callback(unionModel, subOptions);\r\n    }\r\n    listenToWidgetChanges(curr);\r\n  }\r\n\r\n  listenToWidgetChanges(model.get(unionName));\r\n\r\n  // make sure to (un)hook listeners when property changes\r\n  model.on('change:' + unionName, onUnionChange);\r\n\r\n  function stopListening() {\r\n    let curr = model.get(unionName);\r\n    if (curr instanceof WidgetModel) {\r\n      model.stopListening(curr);\r\n    }\r\n    model.off('change:' + unionName, onUnionChange);\r\n  }\r\n  return stopListening;\r\n}\r\n\r\nexport\r\nconst data_union_array_serialization = { deserialize: JSONToUnionArray, serialize: unionToJSON };\r\n\r\nexport\r\nconst data_union_serialization = { deserialize: JSONToUnion, serialize: unionToJSON };\r\n","\r\n\r\nimport {\r\n  WidgetModel, ManagerBase\r\n} from '@jupyter-widgets/base';\r\n\r\nimport {\r\n  DataUnion\r\n} from './union';\r\n\r\nimport ndarray = require('ndarray');\r\n\r\n\r\n/**\r\n * An interface for a datasource.\r\n */\r\nexport\r\ninterface IDataSource {\r\n  getNDArray(key?: string): ndarray | null;\r\n}\r\n\r\n\r\n/**\r\n * Type declaration for general widget serializers.\r\n *\r\n * Declared in lieu of proper interface in jupyter-widgets.\r\n */\r\nexport\r\ninterface ISerializers {\r\n  [key: string]: {\r\n    deserialize?: (value?: any, manager?: ManagerBase<any>) => any;\r\n    serialize?: (value?: any, widget?: WidgetModel) => any;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Whether an object implements the data source interface.\r\n */\r\nexport\r\nfunction isDataSource(data: any): data is IDataSource {\r\n  return data && typeof data.getNDArray === 'function';\r\n}\r\n\r\n\r\n/**\r\n * Gets the array of any array source.\r\n */\r\nexport\r\nfunction getArray(data: DataUnion | IDataSource | null): ndarray | null {\r\n  if (isDataSource(data)) {\r\n    return data.getNDArray();\r\n  }\r\n  return data;\r\n}\r\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n\r\nimport {\r\n  ObjectHash\r\n} from 'backbone';\r\n\r\nimport {\r\n  WidgetModel\r\n} from '@jupyter-widgets/base';\r\n\r\nimport {\r\n  ISerializers, IDataSource\r\n} from 'jupyter-dataserializers';\r\n\r\nimport {\r\n  EXTENSION_SPEC_VERSION\r\n} from './version';\r\n\r\nimport ndarray = require('ndarray');\r\n\r\n\r\n\r\nexport\r\nabstract class DataModel extends WidgetModel implements IDataSource {\r\n  defaults(): any {\r\n    return {...super.defaults(), ...{\r\n      _model_module: DataModel.model_module,\r\n      _model_module_version: DataModel.model_module_version,\r\n      _view_name: DataModel.view_name,\r\n      _view_module: DataModel.view_module!,\r\n      _view_module_version: DataModel.view_module_version,\r\n    }};\r\n  }\r\n\r\n  abstract getNDArray(key?: string): ndarray | null;\r\n\r\n  static serializers: ISerializers = {\r\n    ...WidgetModel.serializers,\r\n  }\r\n\r\n  static model_module = 'jupyter-datawidgets';\r\n  static model_module_version = EXTENSION_SPEC_VERSION;\r\n  static view_name = null;\r\n  static view_module = null;\r\n  static view_module_version = '';\r\n}\r\n","\r\nexport {\r\n  NDArrayModel\r\n} from './ndarray';\r\n\r\nexport {\r\n  ScaledArrayModel\r\n} from './scaled';\r\n\r\nexport {\r\n  version, EXTENSION_SPEC_VERSION\r\n} from './version';\r\n"],"sourceRoot":""}