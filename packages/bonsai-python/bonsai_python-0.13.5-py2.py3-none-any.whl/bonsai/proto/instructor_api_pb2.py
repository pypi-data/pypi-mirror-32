# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: instructor_api.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from bonsai.proto import generator_simulator_api_pb2 as bonsai_dot_proto_dot_generator__simulator__api__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='instructor_api.proto',
  package='bonsai.proto.instructor',
  syntax='proto3',
  serialized_pb=_b('\n\x14instructor_api.proto\x12\x17\x62onsai.proto.instructor\x1a*bonsai/proto/generator_simulator_api.proto2\x89\x01\n\nInstructor\x12{\n\x07\x61\x64vance\x12\x37.bonsai.proto.generator_simulator_api.SimulatorToServer\x1a\x37.bonsai.proto.generator_simulator_api.ServerToSimulatorb\x06proto3')
  ,
  dependencies=[bonsai_dot_proto_dot_generator__simulator__api__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_INSTRUCTOR = _descriptor.ServiceDescriptor(
  name='Instructor',
  full_name='bonsai.proto.instructor.Instructor',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=94,
  serialized_end=231,
  methods=[
  _descriptor.MethodDescriptor(
    name='advance',
    full_name='bonsai.proto.instructor.Instructor.advance',
    index=0,
    containing_service=None,
    input_type=bonsai_dot_proto_dot_generator__simulator__api__pb2._SIMULATORTOSERVER,
    output_type=bonsai_dot_proto_dot_generator__simulator__api__pb2._SERVERTOSIMULATOR,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INSTRUCTOR)

DESCRIPTOR.services_by_name['Instructor'] = _INSTRUCTOR

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class InstructorStub(object):
    """This is the interface for the instructor.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.advance = channel.unary_unary(
          '/bonsai.proto.instructor.Instructor/advance',
          request_serializer=bonsai_dot_proto_dot_generator__simulator__api__pb2.SimulatorToServer.SerializeToString,
          response_deserializer=bonsai_dot_proto_dot_generator__simulator__api__pb2.ServerToSimulator.FromString,
          )


  class InstructorServicer(object):
    """This is the interface for the instructor.
    """

    def advance(self, request, context):
      """This basically emulates the old request-reply of the old ZMQ protocol,
      except that events are truly multithreaded.
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_InstructorServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'advance': grpc.unary_unary_rpc_method_handler(
            servicer.advance,
            request_deserializer=bonsai_dot_proto_dot_generator__simulator__api__pb2.SimulatorToServer.FromString,
            response_serializer=bonsai_dot_proto_dot_generator__simulator__api__pb2.ServerToSimulator.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'bonsai.proto.instructor.Instructor', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaInstructorServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """This is the interface for the instructor.
    """
    def advance(self, request, context):
      """This basically emulates the old request-reply of the old ZMQ protocol,
      except that events are truly multithreaded.
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaInstructorStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """This is the interface for the instructor.
    """
    def advance(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """This basically emulates the old request-reply of the old ZMQ protocol,
      except that events are truly multithreaded.
      """
      raise NotImplementedError()
    advance.future = None


  def beta_create_Instructor_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('bonsai.proto.instructor.Instructor', 'advance'): bonsai_dot_proto_dot_generator__simulator__api__pb2.SimulatorToServer.FromString,
    }
    response_serializers = {
      ('bonsai.proto.instructor.Instructor', 'advance'): bonsai_dot_proto_dot_generator__simulator__api__pb2.ServerToSimulator.SerializeToString,
    }
    method_implementations = {
      ('bonsai.proto.instructor.Instructor', 'advance'): face_utilities.unary_unary_inline(servicer.advance),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Instructor_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('bonsai.proto.instructor.Instructor', 'advance'): bonsai_dot_proto_dot_generator__simulator__api__pb2.SimulatorToServer.SerializeToString,
    }
    response_deserializers = {
      ('bonsai.proto.instructor.Instructor', 'advance'): bonsai_dot_proto_dot_generator__simulator__api__pb2.ServerToSimulator.FromString,
    }
    cardinalities = {
      'advance': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'bonsai.proto.instructor.Instructor', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
