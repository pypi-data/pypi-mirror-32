---
- name: Create the configuration directory
  file:
    path: /etc/qpid-generator
    state: directory

- name: Generate the configuration files
  template:
    src: qdrouterd.conf.jinja2
    dest: "/etc/qpid-generator/{{ item.router_id }}.conf"
  with_items: "{{ bus_conf }}"
  when: item.machine == inventory_hostname

# collectd configuration
- name: Generate collectd specific configuration
  template:
    src: collectd-qdrouterd.conf.jinja2
    dest: "/etc/qpid-generator/collectd-qdrouterd-{{ item.router_id }}.conf"
  with_items: "{{ bus_conf }}"
  when: item.machine == inventory_hostname

- name: Generate collectd specific configuration
  template:
    src: collectd-influxdb.conf.jinja2
    dest: "/etc/qpid-generator/collectd-influxdb.conf"

- name: Generate collectd general configuration
  template:
    src: collectd.conf.jinja2
    dest: "/etc/qpid-generator/collectd-{{ item.router_id }}.conf"
  with_items: "{{ bus_conf }}"
  when: item.machine == inventory_hostname

#
# Start all qdrouterds
#
- name: Start qdrouterd(s)
  docker_container:
    image: "{{ qdr_image }}:{{ qdr_version }}"
    name: "{{ item.router_id }}"
    volumes:
      - "/etc/qpid-generator/{{ item.router_id }}.conf:/etc/qpid-dispatch/qdrouterd.conf"
      - "/etc/qpid-generator/collectd-qdrouterd-{{ item.router_id }}.conf:/etc/collectd/collectd.conf.d/collectd-qdrouterd.conf"
      - "/etc/qpid-generator/collectd-{{ item.router_id }}.conf:/etc/collectd/collectd.conf"
      - "/etc/qpid-generator/collectd-influxdb.conf:/etc/collectd/collectd.conf.d/collectd-influxdb.conf"
      - "oo-qdr-{{ item.router_id }}-logs:/var/log"
    network_mode: host
    hostname: "{{ item.router_id }}"
    state: started
  with_items: "{{ bus_conf }}"
  when: item.machine == inventory_hostname

- name: Modify etc/hosts in container
  shell:
    cmd: "docker exec {{ item.router_id  }} bash -c 'echo \"\n {{ hostvars[item.machine]['ansible_' + control_network]['ipv4']['address'] }} {{ item.router_id }}\" >> /etc/hosts'"
  with_items: "{{ bus_conf }}"
  when: item.machine == inventory_hostname

#
# Start the gui
#
- name: Start the web gui
  docker_container:
    image: "msimonin/qdrouterd-gui:{{ qdr_version }}"
    name: qdrouterd-gui
    network_mode: host
    state: started
  when: inventory_hostname == groups['bus'][0]

#
# Websockify AMQP listener
#
- name: Websockify AMQP listener
  docker_container:
    image: msimonin/websockify
    command: "0.0.0.0:4999 {{ hostvars[inventory_hostname]['ansible_' + control_network]['ipv4']['address'] }}:5000"
    name: websockify
    network_mode: host
    state: started
  when: inventory_hostname == groups['bus'][0]
