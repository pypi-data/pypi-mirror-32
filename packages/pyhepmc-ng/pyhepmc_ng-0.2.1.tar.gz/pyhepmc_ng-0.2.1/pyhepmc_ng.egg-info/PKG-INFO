Metadata-Version: 2.1
Name: pyhepmc-ng
Version: 0.2.1
Summary: Next-generation Python interface to the HepMC high-energy physics event record API
Home-page: https://github.com/hdembinski/pyhepmc
Author: Hans Dembinski
Author-email: hans.dembinski@gmail.com
License: UNKNOWN
Description: 
        pyhepmc-ng is an alternative wrapper of the HepMC-v3 C++ library.
        
        The official wrapper is [pyhepmc](https://pypi.org/project/pyhepmc/).
        Why should you use this one?
        
        **pyhepmc-ng is easy to install**
        
        The command `pip install pyhepmc-ng` just works! You only need a compiler that
        supports C++14, everything else is handled by pip.
        
        Under the hood, the bindings are build with the excellent
        [pybind11](http://pybind11.readthedocs.io/en/stable/) library.
        pybind11 is automatically installed as a requirement by pip. You don't need an
        external installation of the HepMC library, either. A copy of this
        light-weight library is included.
        
        The original pyhepmc package is not easy to install. It uses SWIG to create
        the bindings, which has to be installed separately. It also requires you to
        install the C++ library HepMC separately. When you try a pip-install, it will
        in general not work out-of-the-box. Instead you will get intimidating error
        messages, which are difficult to decipher.
        
        **pyhepmc-ng is actively developed and maintained**
        
        The last release of pyhepmc was May 2013.
        
        **pyhepmc-ng is unit tested**
        
        Everything in pyhepmc-ng is unit tested. A few bugs were already found in
        HepMC3 in this way, notably in the `HEPEVT_Wrapper` class.
        
        **pyhepmc-ng supports Pythonic code**
        
        pyhepmc-ng is not a blind mapping of C++ code to Python. It uses Python idioms
        where it is appropriate.
        
        - C++ methods which act like properties are represented as properties,
          e.g. GenParticle::set_status and GenParticle::status are mapped to a single
          GenParticle.status field in Python
        - Tuples and lists are implicitly convertible to FourVectors
        - ReaderAscii and WriterAscii support the context manager protocol
        
        License: pyhepmc-ng is covered by the BSD license, but the license only
        applies to the binding code. The HepMC code is covered by the GPL-v3 license.
        
Keywords: generator montecarlo simulation data hep physics particle
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Description-Content-Type: text/markdown
