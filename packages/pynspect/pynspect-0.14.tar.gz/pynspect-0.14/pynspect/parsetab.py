
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA CONSTANT DATETIME FLOAT FUNCTION INTEGER IPV4 IPV6 LBRACK LPAREN OP_AND OP_AND_P OP_DIVIDE OP_EQ OP_EXISTS OP_GE OP_GT OP_IN OP_IS OP_LE OP_LIKE OP_LT OP_MINUS OP_MODULO OP_NE OP_NOT OP_OR OP_OR_P OP_PLUS OP_TIMES OP_XOR OP_XOR_P RBRACK RPAREN TIMEDELTA VARIABLEexpression : xor_expression OP_OR expression\n                      | xor_expressionxor_expression : and_expression OP_XOR xor_expression\n                          | and_expressionand_expression : or_p_expression OP_AND and_expression\n                          | or_p_expressionor_p_expression : xor_p_expression OP_OR_P or_p_expression\n                      | xor_p_expressionxor_p_expression : and_p_expression OP_XOR_P xor_p_expression\n                          | and_p_expressionand_p_expression : not_expression OP_AND_P and_p_expression\n                          | not_expressionnot_expression : OP_NOT ex_expression\n                          | ex_expressionex_expression : OP_EXISTS cmp_expression\n                         | cmp_expressioncmp_expression : term OP_LIKE cmp_expression\n                          | term OP_IN cmp_expression\n                          | term OP_IS cmp_expression\n                          | term OP_EQ cmp_expression\n                          | term OP_NE cmp_expression\n                          | term OP_GT cmp_expression\n                          | term OP_GE cmp_expression\n                          | term OP_LT cmp_expression\n                          | term OP_LE cmp_expression\n                          | termterm : factor OP_PLUS term\n                | factor OP_MINUS term\n                | factor OP_TIMES term\n                | factor OP_DIVIDE term\n                | factor OP_MODULO term\n                | factorfactor : IPV4\n                  | IPV6\n                  | DATETIME\n                  | TIMEDELTA\n                  | INTEGER\n                  | FLOAT\n                  | VARIABLE\n                  | CONSTANT\n                  | FUNCTION RPAREN\n                  | FUNCTION expression RPAREN\n                  | LBRACK list RBRACK\n                  | LPAREN expression RPARENlist : IPV4\n                | IPV6\n                | DATETIME\n                | TIMEDELTA\n                | INTEGER\n                | FLOAT\n                | VARIABLE\n                | CONSTANT\n                | IPV4 COMMA list\n                | IPV6 COMMA list\n                | DATETIME COMMA list\n                | TIMEDELTA COMMA list\n                | INTEGER COMMA list\n                | FLOAT COMMA list\n                | VARIABLE COMMA list\n                | CONSTANT COMMA list'
    
_lr_action_items = {'$end':([1,2,3,5,6,7,8,9,11,12,13,14,16,17,18,20,22,23,24,25,38,56,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,84,85,86,87,88,89,],[-39,-34,-16,0,-6,-26,-36,-35,-14,-2,-38,-37,-12,-4,-8,-32,-33,-40,-10,-13,-15,-41,-5,-17,-21,-25,-18,-24,-22,-20,-19,-23,-44,-1,-11,-3,-7,-43,-27,-31,-28,-30,-29,-42,-9,]),'OP_XOR':([1,2,3,6,7,8,9,11,13,14,16,17,18,20,22,23,24,25,38,56,59,60,61,62,63,64,65,66,67,68,69,71,73,78,83,84,85,86,87,88,89,],[-39,-34,-16,-6,-26,-36,-35,-14,-38,-37,-12,40,-8,-32,-33,-40,-10,-13,-15,-41,-5,-17,-21,-25,-18,-24,-22,-20,-19,-23,-44,-11,-7,-43,-27,-31,-28,-30,-29,-42,-9,]),'VARIABLE':([0,4,10,15,19,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,74,75,76,77,79,80,81,82,],[1,1,1,1,42,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,42,42,42,42,42,42,42,42,]),'LPAREN':([0,4,10,15,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'OP_EQ':([1,2,7,8,9,13,14,20,22,23,56,69,78,83,84,85,86,87,88,],[-39,-34,33,-36,-35,-38,-37,-32,-33,-40,-41,-44,-43,-27,-31,-28,-30,-29,-42,]),'COMMA':([42,43,44,45,47,48,49,50,],[74,75,76,77,79,80,81,82,]),'FLOAT':([0,4,10,15,19,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,74,75,76,77,79,80,81,82,],[13,13,13,13,43,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,43,43,43,43,43,43,43,43,]),'OP_IS':([1,2,7,8,9,13,14,20,22,23,56,69,78,83,84,85,86,87,88,],[-39,-34,34,-36,-35,-38,-37,-32,-33,-40,-41,-44,-43,-27,-31,-28,-30,-29,-42,]),'INTEGER':([0,4,10,15,19,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,74,75,76,77,79,80,81,82,],[14,14,14,14,45,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,45,45,45,45,45,45,45,45,]),'OP_NE':([1,2,7,8,9,13,14,20,22,23,56,69,78,83,84,85,86,87,88,],[-39,-34,28,-36,-35,-38,-37,-32,-33,-40,-41,-44,-43,-27,-31,-28,-30,-29,-42,]),'CONSTANT':([0,4,10,15,19,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,74,75,76,77,79,80,81,82,],[23,23,23,23,47,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,47,47,47,47,47,47,47,47,]),'OP_DIVIDE':([1,2,8,9,13,14,20,22,23,56,69,78,88,],[-39,-34,-36,-35,-38,-37,54,-33,-40,-41,-44,-43,-42,]),'RPAREN':([1,2,3,6,7,8,9,11,12,13,14,16,17,18,20,21,22,23,24,25,36,38,56,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,83,84,85,86,87,88,89,],[-39,-34,-16,-6,-26,-36,-35,-14,-2,-38,-37,-12,-4,-8,-32,56,-33,-40,-10,-13,69,-15,-41,88,-5,-17,-21,-25,-18,-24,-22,-20,-19,-23,-44,-1,-11,-3,-7,-43,-27,-31,-28,-30,-29,-42,-9,]),'RBRACK':([42,43,44,45,46,47,48,49,50,90,91,92,93,94,95,96,97,],[-51,-50,-46,-49,78,-52,-45,-48,-47,-59,-58,-54,-57,-60,-53,-56,-55,]),'OP_MINUS':([1,2,8,9,13,14,20,22,23,56,69,78,88,],[-39,-34,-36,-35,-38,-37,53,-33,-40,-41,-44,-43,-42,]),'LBRACK':([0,4,10,15,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'OP_LT':([1,2,7,8,9,13,14,20,22,23,56,69,78,83,84,85,86,87,88,],[-39,-34,31,-36,-35,-38,-37,-32,-33,-40,-41,-44,-43,-27,-31,-28,-30,-29,-42,]),'OP_GE':([1,2,7,8,9,13,14,20,22,23,56,69,78,83,84,85,86,87,88,],[-39,-34,35,-36,-35,-38,-37,-32,-33,-40,-41,-44,-43,-27,-31,-28,-30,-29,-42,]),'OP_MODULO':([1,2,8,9,13,14,20,22,23,56,69,78,88,],[-39,-34,-36,-35,-38,-37,52,-33,-40,-41,-44,-43,-42,]),'OP_NOT':([0,10,21,26,37,39,40,41,58,],[4,4,4,4,4,4,4,4,4,]),'OP_EXISTS':([0,4,10,21,26,37,39,40,41,58,],[15,15,15,15,15,15,15,15,15,15,]),'OP_XOR_P':([1,2,3,7,8,9,11,13,14,16,20,22,23,24,25,38,56,60,61,62,63,64,65,66,67,68,69,71,78,83,84,85,86,87,88,],[-39,-34,-16,-26,-36,-35,-14,-38,-37,-12,-32,-33,-40,58,-13,-15,-41,-17,-21,-25,-18,-24,-22,-20,-19,-23,-44,-11,-43,-27,-31,-28,-30,-29,-42,]),'OP_LE':([1,2,7,8,9,13,14,20,22,23,56,69,78,83,84,85,86,87,88,],[-39,-34,29,-36,-35,-38,-37,-32,-33,-40,-41,-44,-43,-27,-31,-28,-30,-29,-42,]),'OP_LIKE':([1,2,7,8,9,13,14,20,22,23,56,69,78,83,84,85,86,87,88,],[-39,-34,27,-36,-35,-38,-37,-32,-33,-40,-41,-44,-43,-27,-31,-28,-30,-29,-42,]),'OP_OR_P':([1,2,3,7,8,9,11,13,14,16,18,20,22,23,24,25,38,56,60,61,62,63,64,65,66,67,68,69,71,78,83,84,85,86,87,88,89,],[-39,-34,-16,-26,-36,-35,-14,-38,-37,-12,41,-32,-33,-40,-10,-13,-15,-41,-17,-21,-25,-18,-24,-22,-20,-19,-23,-44,-11,-43,-27,-31,-28,-30,-29,-42,-9,]),'IPV6':([0,4,10,15,19,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,74,75,76,77,79,80,81,82,],[2,2,2,2,44,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,44,44,44,44,44,44,44,44,]),'OP_TIMES':([1,2,8,9,13,14,20,22,23,56,69,78,88,],[-39,-34,-36,-35,-38,-37,55,-33,-40,-41,-44,-43,-42,]),'OP_AND':([1,2,3,6,7,8,9,11,13,14,16,18,20,22,23,24,25,38,56,60,61,62,63,64,65,66,67,68,69,71,73,78,83,84,85,86,87,88,89,],[-39,-34,-16,26,-26,-36,-35,-14,-38,-37,-12,-8,-32,-33,-40,-10,-13,-15,-41,-17,-21,-25,-18,-24,-22,-20,-19,-23,-44,-11,-7,-43,-27,-31,-28,-30,-29,-42,-9,]),'OP_OR':([1,2,3,6,7,8,9,11,12,13,14,16,17,18,20,22,23,24,25,38,56,59,60,61,62,63,64,65,66,67,68,69,71,72,73,78,83,84,85,86,87,88,89,],[-39,-34,-16,-6,-26,-36,-35,-14,37,-38,-37,-12,-4,-8,-32,-33,-40,-10,-13,-15,-41,-5,-17,-21,-25,-18,-24,-22,-20,-19,-23,-44,-11,-3,-7,-43,-27,-31,-28,-30,-29,-42,-9,]),'OP_PLUS':([1,2,8,9,13,14,20,22,23,56,69,78,88,],[-39,-34,-36,-35,-38,-37,51,-33,-40,-41,-44,-43,-42,]),'FUNCTION':([0,4,10,15,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'IPV4':([0,4,10,15,19,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,74,75,76,77,79,80,81,82,],[22,22,22,22,48,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,48,48,48,48,48,48,48,48,]),'OP_IN':([1,2,7,8,9,13,14,20,22,23,56,69,78,83,84,85,86,87,88,],[-39,-34,30,-36,-35,-38,-37,-32,-33,-40,-41,-44,-43,-27,-31,-28,-30,-29,-42,]),'OP_AND_P':([1,2,3,7,8,9,11,13,14,16,20,22,23,25,38,56,60,61,62,63,64,65,66,67,68,69,78,83,84,85,86,87,88,],[-39,-34,-16,-26,-36,-35,-14,-38,-37,39,-32,-33,-40,-13,-15,-41,-17,-21,-25,-18,-24,-22,-20,-19,-23,-44,-43,-27,-31,-28,-30,-29,-42,]),'OP_GT':([1,2,7,8,9,13,14,20,22,23,56,69,78,83,84,85,86,87,88,],[-39,-34,32,-36,-35,-38,-37,-32,-33,-40,-41,-44,-43,-27,-31,-28,-30,-29,-42,]),'TIMEDELTA':([0,4,10,15,19,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,74,75,76,77,79,80,81,82,],[8,8,8,8,49,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,49,49,49,49,49,49,49,49,]),'DATETIME':([0,4,10,15,19,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,74,75,76,77,79,80,81,82,],[9,9,9,9,50,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,50,50,50,50,50,50,50,50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ex_expression':([0,4,10,21,26,37,39,40,41,58,],[11,25,11,11,11,11,11,11,11,11,]),'expression':([0,10,21,37,],[5,36,57,70,]),'xor_expression':([0,10,21,37,40,],[12,12,12,12,72,]),'or_p_expression':([0,10,21,26,37,40,41,],[6,6,6,6,6,6,73,]),'term':([0,4,10,15,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,83,84,85,86,87,7,]),'list':([19,74,75,76,77,79,80,81,82,],[46,90,91,92,93,94,95,96,97,]),'cmp_expression':([0,4,10,15,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,58,],[3,3,3,38,3,3,60,61,62,63,64,65,66,67,68,3,3,3,3,3,]),'not_expression':([0,10,21,26,37,39,40,41,58,],[16,16,16,16,16,16,16,16,16,]),'and_expression':([0,10,21,26,37,40,],[17,17,17,59,17,17,]),'and_p_expression':([0,10,21,26,37,39,40,41,58,],[24,24,24,24,24,71,24,24,24,]),'xor_p_expression':([0,10,21,26,37,40,41,58,],[18,18,18,18,18,18,18,89,]),'factor':([0,4,10,15,21,26,27,28,29,30,31,32,33,34,35,37,39,40,41,51,52,53,54,55,58,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> xor_expression OP_OR expression','expression',3,'p_expression','gparser.py',269),
  ('expression -> xor_expression','expression',1,'p_expression','gparser.py',270),
  ('xor_expression -> and_expression OP_XOR xor_expression','xor_expression',3,'p_xor_expression','gparser.py',278),
  ('xor_expression -> and_expression','xor_expression',1,'p_xor_expression','gparser.py',279),
  ('and_expression -> or_p_expression OP_AND and_expression','and_expression',3,'p_and_expression','gparser.py',287),
  ('and_expression -> or_p_expression','and_expression',1,'p_and_expression','gparser.py',288),
  ('or_p_expression -> xor_p_expression OP_OR_P or_p_expression','or_p_expression',3,'p_or_p_expression','gparser.py',296),
  ('or_p_expression -> xor_p_expression','or_p_expression',1,'p_or_p_expression','gparser.py',297),
  ('xor_p_expression -> and_p_expression OP_XOR_P xor_p_expression','xor_p_expression',3,'p_xor_p_expression','gparser.py',305),
  ('xor_p_expression -> and_p_expression','xor_p_expression',1,'p_xor_p_expression','gparser.py',306),
  ('and_p_expression -> not_expression OP_AND_P and_p_expression','and_p_expression',3,'p_and_p_expression','gparser.py',315),
  ('and_p_expression -> not_expression','and_p_expression',1,'p_and_p_expression','gparser.py',316),
  ('not_expression -> OP_NOT ex_expression','not_expression',2,'p_not_expression','gparser.py',324),
  ('not_expression -> ex_expression','not_expression',1,'p_not_expression','gparser.py',325),
  ('ex_expression -> OP_EXISTS cmp_expression','ex_expression',2,'p_ex_expression','gparser.py',333),
  ('ex_expression -> cmp_expression','ex_expression',1,'p_ex_expression','gparser.py',334),
  ('cmp_expression -> term OP_LIKE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',343),
  ('cmp_expression -> term OP_IN cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',344),
  ('cmp_expression -> term OP_IS cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',345),
  ('cmp_expression -> term OP_EQ cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',346),
  ('cmp_expression -> term OP_NE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',347),
  ('cmp_expression -> term OP_GT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',348),
  ('cmp_expression -> term OP_GE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',349),
  ('cmp_expression -> term OP_LT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',350),
  ('cmp_expression -> term OP_LE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',351),
  ('cmp_expression -> term','cmp_expression',1,'p_cmp_expression','gparser.py',352),
  ('term -> factor OP_PLUS term','term',3,'p_term','gparser.py',360),
  ('term -> factor OP_MINUS term','term',3,'p_term','gparser.py',361),
  ('term -> factor OP_TIMES term','term',3,'p_term','gparser.py',362),
  ('term -> factor OP_DIVIDE term','term',3,'p_term','gparser.py',363),
  ('term -> factor OP_MODULO term','term',3,'p_term','gparser.py',364),
  ('term -> factor','term',1,'p_term','gparser.py',365),
  ('factor -> IPV4','factor',1,'p_factor','gparser.py',373),
  ('factor -> IPV6','factor',1,'p_factor','gparser.py',374),
  ('factor -> DATETIME','factor',1,'p_factor','gparser.py',375),
  ('factor -> TIMEDELTA','factor',1,'p_factor','gparser.py',376),
  ('factor -> INTEGER','factor',1,'p_factor','gparser.py',377),
  ('factor -> FLOAT','factor',1,'p_factor','gparser.py',378),
  ('factor -> VARIABLE','factor',1,'p_factor','gparser.py',379),
  ('factor -> CONSTANT','factor',1,'p_factor','gparser.py',380),
  ('factor -> FUNCTION RPAREN','factor',2,'p_factor','gparser.py',381),
  ('factor -> FUNCTION expression RPAREN','factor',3,'p_factor','gparser.py',382),
  ('factor -> LBRACK list RBRACK','factor',3,'p_factor','gparser.py',383),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','gparser.py',384),
  ('list -> IPV4','list',1,'p_list','gparser.py',395),
  ('list -> IPV6','list',1,'p_list','gparser.py',396),
  ('list -> DATETIME','list',1,'p_list','gparser.py',397),
  ('list -> TIMEDELTA','list',1,'p_list','gparser.py',398),
  ('list -> INTEGER','list',1,'p_list','gparser.py',399),
  ('list -> FLOAT','list',1,'p_list','gparser.py',400),
  ('list -> VARIABLE','list',1,'p_list','gparser.py',401),
  ('list -> CONSTANT','list',1,'p_list','gparser.py',402),
  ('list -> IPV4 COMMA list','list',3,'p_list','gparser.py',403),
  ('list -> IPV6 COMMA list','list',3,'p_list','gparser.py',404),
  ('list -> DATETIME COMMA list','list',3,'p_list','gparser.py',405),
  ('list -> TIMEDELTA COMMA list','list',3,'p_list','gparser.py',406),
  ('list -> INTEGER COMMA list','list',3,'p_list','gparser.py',407),
  ('list -> FLOAT COMMA list','list',3,'p_list','gparser.py',408),
  ('list -> VARIABLE COMMA list','list',3,'p_list','gparser.py',409),
  ('list -> CONSTANT COMMA list','list',3,'p_list','gparser.py',410),
]
