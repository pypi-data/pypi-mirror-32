// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scanner/source_args.proto

#ifndef PROTOBUF_scanner_2fsource_5fargs_2eproto__INCLUDED
#define PROTOBUF_scanner_2fsource_5fargs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_scanner_2fsource_5fargs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLoadSampleImpl();
void InitDefaultsLoadSample();
void InitDefaultsColumnEnumeratorArgsImpl();
void InitDefaultsColumnEnumeratorArgs();
void InitDefaultsColumnSourceArgsImpl();
void InitDefaultsColumnSourceArgs();
void InitDefaultsColumnElementArgsImpl();
void InitDefaultsColumnElementArgs();
inline void InitDefaults() {
  InitDefaultsLoadSample();
  InitDefaultsColumnEnumeratorArgs();
  InitDefaultsColumnSourceArgs();
  InitDefaultsColumnElementArgs();
}
}  // namespace protobuf_scanner_2fsource_5fargs_2eproto
namespace scanner {
namespace proto {
class ColumnElementArgs;
class ColumnElementArgsDefaultTypeInternal;
extern ColumnElementArgsDefaultTypeInternal _ColumnElementArgs_default_instance_;
class ColumnEnumeratorArgs;
class ColumnEnumeratorArgsDefaultTypeInternal;
extern ColumnEnumeratorArgsDefaultTypeInternal _ColumnEnumeratorArgs_default_instance_;
class ColumnSourceArgs;
class ColumnSourceArgsDefaultTypeInternal;
extern ColumnSourceArgsDefaultTypeInternal _ColumnSourceArgs_default_instance_;
class LoadSample;
class LoadSampleDefaultTypeInternal;
extern LoadSampleDefaultTypeInternal _LoadSample_default_instance_;
}  // namespace proto
}  // namespace scanner
namespace scanner {
namespace proto {

// ===================================================================

class LoadSample : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scanner.proto.LoadSample) */ {
 public:
  LoadSample();
  virtual ~LoadSample();

  LoadSample(const LoadSample& from);

  inline LoadSample& operator=(const LoadSample& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoadSample(LoadSample&& from) noexcept
    : LoadSample() {
    *this = ::std::move(from);
  }

  inline LoadSample& operator=(LoadSample&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoadSample& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadSample* internal_default_instance() {
    return reinterpret_cast<const LoadSample*>(
               &_LoadSample_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LoadSample* other);
  friend void swap(LoadSample& a, LoadSample& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoadSample* New() const PROTOBUF_FINAL { return New(NULL); }

  LoadSample* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoadSample& from);
  void MergeFrom(const LoadSample& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoadSample* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 input_row_ids = 3 [packed = true];
  int input_row_ids_size() const;
  void clear_input_row_ids();
  static const int kInputRowIdsFieldNumber = 3;
  ::google::protobuf::int64 input_row_ids(int index) const;
  void set_input_row_ids(int index, ::google::protobuf::int64 value);
  void add_input_row_ids(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      input_row_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_input_row_ids();

  // int32 table_id = 1;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // int32 column_id = 2;
  void clear_column_id();
  static const int kColumnIdFieldNumber = 2;
  ::google::protobuf::int32 column_id() const;
  void set_column_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:scanner.proto.LoadSample)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > input_row_ids_;
  mutable int _input_row_ids_cached_byte_size_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 column_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_scanner_2fsource_5fargs_2eproto::TableStruct;
  friend void ::protobuf_scanner_2fsource_5fargs_2eproto::InitDefaultsLoadSampleImpl();
};
// -------------------------------------------------------------------

class ColumnEnumeratorArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scanner.proto.ColumnEnumeratorArgs) */ {
 public:
  ColumnEnumeratorArgs();
  virtual ~ColumnEnumeratorArgs();

  ColumnEnumeratorArgs(const ColumnEnumeratorArgs& from);

  inline ColumnEnumeratorArgs& operator=(const ColumnEnumeratorArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ColumnEnumeratorArgs(ColumnEnumeratorArgs&& from) noexcept
    : ColumnEnumeratorArgs() {
    *this = ::std::move(from);
  }

  inline ColumnEnumeratorArgs& operator=(ColumnEnumeratorArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ColumnEnumeratorArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ColumnEnumeratorArgs* internal_default_instance() {
    return reinterpret_cast<const ColumnEnumeratorArgs*>(
               &_ColumnEnumeratorArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ColumnEnumeratorArgs* other);
  friend void swap(ColumnEnumeratorArgs& a, ColumnEnumeratorArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ColumnEnumeratorArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  ColumnEnumeratorArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ColumnEnumeratorArgs& from);
  void MergeFrom(const ColumnEnumeratorArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ColumnEnumeratorArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string table_name = 1;
  void clear_table_name();
  static const int kTableNameFieldNumber = 1;
  const ::std::string& table_name() const;
  void set_table_name(const ::std::string& value);
  #if LANG_CXX11
  void set_table_name(::std::string&& value);
  #endif
  void set_table_name(const char* value);
  void set_table_name(const char* value, size_t size);
  ::std::string* mutable_table_name();
  ::std::string* release_table_name();
  void set_allocated_table_name(::std::string* table_name);

  // string column_name = 2;
  void clear_column_name();
  static const int kColumnNameFieldNumber = 2;
  const ::std::string& column_name() const;
  void set_column_name(const ::std::string& value);
  #if LANG_CXX11
  void set_column_name(::std::string&& value);
  #endif
  void set_column_name(const char* value);
  void set_column_name(const char* value, size_t size);
  ::std::string* mutable_column_name();
  ::std::string* release_column_name();
  void set_allocated_column_name(::std::string* column_name);

  // @@protoc_insertion_point(class_scope:scanner.proto.ColumnEnumeratorArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr table_name_;
  ::google::protobuf::internal::ArenaStringPtr column_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_scanner_2fsource_5fargs_2eproto::TableStruct;
  friend void ::protobuf_scanner_2fsource_5fargs_2eproto::InitDefaultsColumnEnumeratorArgsImpl();
};
// -------------------------------------------------------------------

class ColumnSourceArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scanner.proto.ColumnSourceArgs) */ {
 public:
  ColumnSourceArgs();
  virtual ~ColumnSourceArgs();

  ColumnSourceArgs(const ColumnSourceArgs& from);

  inline ColumnSourceArgs& operator=(const ColumnSourceArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ColumnSourceArgs(ColumnSourceArgs&& from) noexcept
    : ColumnSourceArgs() {
    *this = ::std::move(from);
  }

  inline ColumnSourceArgs& operator=(ColumnSourceArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ColumnSourceArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ColumnSourceArgs* internal_default_instance() {
    return reinterpret_cast<const ColumnSourceArgs*>(
               &_ColumnSourceArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ColumnSourceArgs* other);
  friend void swap(ColumnSourceArgs& a, ColumnSourceArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ColumnSourceArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  ColumnSourceArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ColumnSourceArgs& from);
  void MergeFrom(const ColumnSourceArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ColumnSourceArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string storage_type = 1;
  void clear_storage_type();
  static const int kStorageTypeFieldNumber = 1;
  const ::std::string& storage_type() const;
  void set_storage_type(const ::std::string& value);
  #if LANG_CXX11
  void set_storage_type(::std::string&& value);
  #endif
  void set_storage_type(const char* value);
  void set_storage_type(const char* value, size_t size);
  ::std::string* mutable_storage_type();
  ::std::string* release_storage_type();
  void set_allocated_storage_type(::std::string* storage_type);

  // string bucket = 2;
  void clear_bucket();
  static const int kBucketFieldNumber = 2;
  const ::std::string& bucket() const;
  void set_bucket(const ::std::string& value);
  #if LANG_CXX11
  void set_bucket(::std::string&& value);
  #endif
  void set_bucket(const char* value);
  void set_bucket(const char* value, size_t size);
  ::std::string* mutable_bucket();
  ::std::string* release_bucket();
  void set_allocated_bucket(::std::string* bucket);

  // string region = 3;
  void clear_region();
  static const int kRegionFieldNumber = 3;
  const ::std::string& region() const;
  void set_region(const ::std::string& value);
  #if LANG_CXX11
  void set_region(::std::string&& value);
  #endif
  void set_region(const char* value);
  void set_region(const char* value, size_t size);
  ::std::string* mutable_region();
  ::std::string* release_region();
  void set_allocated_region(::std::string* region);

  // string endpoint = 4;
  void clear_endpoint();
  static const int kEndpointFieldNumber = 4;
  const ::std::string& endpoint() const;
  void set_endpoint(const ::std::string& value);
  #if LANG_CXX11
  void set_endpoint(::std::string&& value);
  #endif
  void set_endpoint(const char* value);
  void set_endpoint(const char* value, size_t size);
  ::std::string* mutable_endpoint();
  ::std::string* release_endpoint();
  void set_allocated_endpoint(::std::string* endpoint);

  // int32 load_sparsity_threshold = 5;
  void clear_load_sparsity_threshold();
  static const int kLoadSparsityThresholdFieldNumber = 5;
  ::google::protobuf::int32 load_sparsity_threshold() const;
  void set_load_sparsity_threshold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:scanner.proto.ColumnSourceArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr storage_type_;
  ::google::protobuf::internal::ArenaStringPtr bucket_;
  ::google::protobuf::internal::ArenaStringPtr region_;
  ::google::protobuf::internal::ArenaStringPtr endpoint_;
  ::google::protobuf::int32 load_sparsity_threshold_;
  mutable int _cached_size_;
  friend struct ::protobuf_scanner_2fsource_5fargs_2eproto::TableStruct;
  friend void ::protobuf_scanner_2fsource_5fargs_2eproto::InitDefaultsColumnSourceArgsImpl();
};
// -------------------------------------------------------------------

class ColumnElementArgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:scanner.proto.ColumnElementArgs) */ {
 public:
  ColumnElementArgs();
  virtual ~ColumnElementArgs();

  ColumnElementArgs(const ColumnElementArgs& from);

  inline ColumnElementArgs& operator=(const ColumnElementArgs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ColumnElementArgs(ColumnElementArgs&& from) noexcept
    : ColumnElementArgs() {
    *this = ::std::move(from);
  }

  inline ColumnElementArgs& operator=(ColumnElementArgs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ColumnElementArgs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ColumnElementArgs* internal_default_instance() {
    return reinterpret_cast<const ColumnElementArgs*>(
               &_ColumnElementArgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ColumnElementArgs* other);
  friend void swap(ColumnElementArgs& a, ColumnElementArgs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ColumnElementArgs* New() const PROTOBUF_FINAL { return New(NULL); }

  ColumnElementArgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ColumnElementArgs& from);
  void MergeFrom(const ColumnElementArgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ColumnElementArgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 table_id = 1;
  void clear_table_id();
  static const int kTableIdFieldNumber = 1;
  ::google::protobuf::int32 table_id() const;
  void set_table_id(::google::protobuf::int32 value);

  // int32 column_id = 2;
  void clear_column_id();
  static const int kColumnIdFieldNumber = 2;
  ::google::protobuf::int32 column_id() const;
  void set_column_id(::google::protobuf::int32 value);

  // int64 row_id = 3;
  void clear_row_id();
  static const int kRowIdFieldNumber = 3;
  ::google::protobuf::int64 row_id() const;
  void set_row_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:scanner.proto.ColumnElementArgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 table_id_;
  ::google::protobuf::int32 column_id_;
  ::google::protobuf::int64 row_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_scanner_2fsource_5fargs_2eproto::TableStruct;
  friend void ::protobuf_scanner_2fsource_5fargs_2eproto::InitDefaultsColumnElementArgsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoadSample

// int32 table_id = 1;
inline void LoadSample::clear_table_id() {
  table_id_ = 0;
}
inline ::google::protobuf::int32 LoadSample::table_id() const {
  // @@protoc_insertion_point(field_get:scanner.proto.LoadSample.table_id)
  return table_id_;
}
inline void LoadSample::set_table_id(::google::protobuf::int32 value) {
  
  table_id_ = value;
  // @@protoc_insertion_point(field_set:scanner.proto.LoadSample.table_id)
}

// int32 column_id = 2;
inline void LoadSample::clear_column_id() {
  column_id_ = 0;
}
inline ::google::protobuf::int32 LoadSample::column_id() const {
  // @@protoc_insertion_point(field_get:scanner.proto.LoadSample.column_id)
  return column_id_;
}
inline void LoadSample::set_column_id(::google::protobuf::int32 value) {
  
  column_id_ = value;
  // @@protoc_insertion_point(field_set:scanner.proto.LoadSample.column_id)
}

// repeated int64 input_row_ids = 3 [packed = true];
inline int LoadSample::input_row_ids_size() const {
  return input_row_ids_.size();
}
inline void LoadSample::clear_input_row_ids() {
  input_row_ids_.Clear();
}
inline ::google::protobuf::int64 LoadSample::input_row_ids(int index) const {
  // @@protoc_insertion_point(field_get:scanner.proto.LoadSample.input_row_ids)
  return input_row_ids_.Get(index);
}
inline void LoadSample::set_input_row_ids(int index, ::google::protobuf::int64 value) {
  input_row_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:scanner.proto.LoadSample.input_row_ids)
}
inline void LoadSample::add_input_row_ids(::google::protobuf::int64 value) {
  input_row_ids_.Add(value);
  // @@protoc_insertion_point(field_add:scanner.proto.LoadSample.input_row_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
LoadSample::input_row_ids() const {
  // @@protoc_insertion_point(field_list:scanner.proto.LoadSample.input_row_ids)
  return input_row_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
LoadSample::mutable_input_row_ids() {
  // @@protoc_insertion_point(field_mutable_list:scanner.proto.LoadSample.input_row_ids)
  return &input_row_ids_;
}

// -------------------------------------------------------------------

// ColumnEnumeratorArgs

// string table_name = 1;
inline void ColumnEnumeratorArgs::clear_table_name() {
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ColumnEnumeratorArgs::table_name() const {
  // @@protoc_insertion_point(field_get:scanner.proto.ColumnEnumeratorArgs.table_name)
  return table_name_.GetNoArena();
}
inline void ColumnEnumeratorArgs::set_table_name(const ::std::string& value) {
  
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scanner.proto.ColumnEnumeratorArgs.table_name)
}
#if LANG_CXX11
inline void ColumnEnumeratorArgs::set_table_name(::std::string&& value) {
  
  table_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scanner.proto.ColumnEnumeratorArgs.table_name)
}
#endif
inline void ColumnEnumeratorArgs::set_table_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scanner.proto.ColumnEnumeratorArgs.table_name)
}
inline void ColumnEnumeratorArgs::set_table_name(const char* value, size_t size) {
  
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scanner.proto.ColumnEnumeratorArgs.table_name)
}
inline ::std::string* ColumnEnumeratorArgs::mutable_table_name() {
  
  // @@protoc_insertion_point(field_mutable:scanner.proto.ColumnEnumeratorArgs.table_name)
  return table_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ColumnEnumeratorArgs::release_table_name() {
  // @@protoc_insertion_point(field_release:scanner.proto.ColumnEnumeratorArgs.table_name)
  
  return table_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ColumnEnumeratorArgs::set_allocated_table_name(::std::string* table_name) {
  if (table_name != NULL) {
    
  } else {
    
  }
  table_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_name);
  // @@protoc_insertion_point(field_set_allocated:scanner.proto.ColumnEnumeratorArgs.table_name)
}

// string column_name = 2;
inline void ColumnEnumeratorArgs::clear_column_name() {
  column_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ColumnEnumeratorArgs::column_name() const {
  // @@protoc_insertion_point(field_get:scanner.proto.ColumnEnumeratorArgs.column_name)
  return column_name_.GetNoArena();
}
inline void ColumnEnumeratorArgs::set_column_name(const ::std::string& value) {
  
  column_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scanner.proto.ColumnEnumeratorArgs.column_name)
}
#if LANG_CXX11
inline void ColumnEnumeratorArgs::set_column_name(::std::string&& value) {
  
  column_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scanner.proto.ColumnEnumeratorArgs.column_name)
}
#endif
inline void ColumnEnumeratorArgs::set_column_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  column_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scanner.proto.ColumnEnumeratorArgs.column_name)
}
inline void ColumnEnumeratorArgs::set_column_name(const char* value, size_t size) {
  
  column_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scanner.proto.ColumnEnumeratorArgs.column_name)
}
inline ::std::string* ColumnEnumeratorArgs::mutable_column_name() {
  
  // @@protoc_insertion_point(field_mutable:scanner.proto.ColumnEnumeratorArgs.column_name)
  return column_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ColumnEnumeratorArgs::release_column_name() {
  // @@protoc_insertion_point(field_release:scanner.proto.ColumnEnumeratorArgs.column_name)
  
  return column_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ColumnEnumeratorArgs::set_allocated_column_name(::std::string* column_name) {
  if (column_name != NULL) {
    
  } else {
    
  }
  column_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), column_name);
  // @@protoc_insertion_point(field_set_allocated:scanner.proto.ColumnEnumeratorArgs.column_name)
}

// -------------------------------------------------------------------

// ColumnSourceArgs

// string storage_type = 1;
inline void ColumnSourceArgs::clear_storage_type() {
  storage_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ColumnSourceArgs::storage_type() const {
  // @@protoc_insertion_point(field_get:scanner.proto.ColumnSourceArgs.storage_type)
  return storage_type_.GetNoArena();
}
inline void ColumnSourceArgs::set_storage_type(const ::std::string& value) {
  
  storage_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scanner.proto.ColumnSourceArgs.storage_type)
}
#if LANG_CXX11
inline void ColumnSourceArgs::set_storage_type(::std::string&& value) {
  
  storage_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scanner.proto.ColumnSourceArgs.storage_type)
}
#endif
inline void ColumnSourceArgs::set_storage_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  storage_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scanner.proto.ColumnSourceArgs.storage_type)
}
inline void ColumnSourceArgs::set_storage_type(const char* value, size_t size) {
  
  storage_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scanner.proto.ColumnSourceArgs.storage_type)
}
inline ::std::string* ColumnSourceArgs::mutable_storage_type() {
  
  // @@protoc_insertion_point(field_mutable:scanner.proto.ColumnSourceArgs.storage_type)
  return storage_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ColumnSourceArgs::release_storage_type() {
  // @@protoc_insertion_point(field_release:scanner.proto.ColumnSourceArgs.storage_type)
  
  return storage_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ColumnSourceArgs::set_allocated_storage_type(::std::string* storage_type) {
  if (storage_type != NULL) {
    
  } else {
    
  }
  storage_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storage_type);
  // @@protoc_insertion_point(field_set_allocated:scanner.proto.ColumnSourceArgs.storage_type)
}

// string bucket = 2;
inline void ColumnSourceArgs::clear_bucket() {
  bucket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ColumnSourceArgs::bucket() const {
  // @@protoc_insertion_point(field_get:scanner.proto.ColumnSourceArgs.bucket)
  return bucket_.GetNoArena();
}
inline void ColumnSourceArgs::set_bucket(const ::std::string& value) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scanner.proto.ColumnSourceArgs.bucket)
}
#if LANG_CXX11
inline void ColumnSourceArgs::set_bucket(::std::string&& value) {
  
  bucket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scanner.proto.ColumnSourceArgs.bucket)
}
#endif
inline void ColumnSourceArgs::set_bucket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scanner.proto.ColumnSourceArgs.bucket)
}
inline void ColumnSourceArgs::set_bucket(const char* value, size_t size) {
  
  bucket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scanner.proto.ColumnSourceArgs.bucket)
}
inline ::std::string* ColumnSourceArgs::mutable_bucket() {
  
  // @@protoc_insertion_point(field_mutable:scanner.proto.ColumnSourceArgs.bucket)
  return bucket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ColumnSourceArgs::release_bucket() {
  // @@protoc_insertion_point(field_release:scanner.proto.ColumnSourceArgs.bucket)
  
  return bucket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ColumnSourceArgs::set_allocated_bucket(::std::string* bucket) {
  if (bucket != NULL) {
    
  } else {
    
  }
  bucket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bucket);
  // @@protoc_insertion_point(field_set_allocated:scanner.proto.ColumnSourceArgs.bucket)
}

// string region = 3;
inline void ColumnSourceArgs::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ColumnSourceArgs::region() const {
  // @@protoc_insertion_point(field_get:scanner.proto.ColumnSourceArgs.region)
  return region_.GetNoArena();
}
inline void ColumnSourceArgs::set_region(const ::std::string& value) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scanner.proto.ColumnSourceArgs.region)
}
#if LANG_CXX11
inline void ColumnSourceArgs::set_region(::std::string&& value) {
  
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scanner.proto.ColumnSourceArgs.region)
}
#endif
inline void ColumnSourceArgs::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scanner.proto.ColumnSourceArgs.region)
}
inline void ColumnSourceArgs::set_region(const char* value, size_t size) {
  
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scanner.proto.ColumnSourceArgs.region)
}
inline ::std::string* ColumnSourceArgs::mutable_region() {
  
  // @@protoc_insertion_point(field_mutable:scanner.proto.ColumnSourceArgs.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ColumnSourceArgs::release_region() {
  // @@protoc_insertion_point(field_release:scanner.proto.ColumnSourceArgs.region)
  
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ColumnSourceArgs::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    
  } else {
    
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:scanner.proto.ColumnSourceArgs.region)
}

// string endpoint = 4;
inline void ColumnSourceArgs::clear_endpoint() {
  endpoint_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ColumnSourceArgs::endpoint() const {
  // @@protoc_insertion_point(field_get:scanner.proto.ColumnSourceArgs.endpoint)
  return endpoint_.GetNoArena();
}
inline void ColumnSourceArgs::set_endpoint(const ::std::string& value) {
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:scanner.proto.ColumnSourceArgs.endpoint)
}
#if LANG_CXX11
inline void ColumnSourceArgs::set_endpoint(::std::string&& value) {
  
  endpoint_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:scanner.proto.ColumnSourceArgs.endpoint)
}
#endif
inline void ColumnSourceArgs::set_endpoint(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:scanner.proto.ColumnSourceArgs.endpoint)
}
inline void ColumnSourceArgs::set_endpoint(const char* value, size_t size) {
  
  endpoint_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:scanner.proto.ColumnSourceArgs.endpoint)
}
inline ::std::string* ColumnSourceArgs::mutable_endpoint() {
  
  // @@protoc_insertion_point(field_mutable:scanner.proto.ColumnSourceArgs.endpoint)
  return endpoint_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ColumnSourceArgs::release_endpoint() {
  // @@protoc_insertion_point(field_release:scanner.proto.ColumnSourceArgs.endpoint)
  
  return endpoint_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ColumnSourceArgs::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint != NULL) {
    
  } else {
    
  }
  endpoint_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), endpoint);
  // @@protoc_insertion_point(field_set_allocated:scanner.proto.ColumnSourceArgs.endpoint)
}

// int32 load_sparsity_threshold = 5;
inline void ColumnSourceArgs::clear_load_sparsity_threshold() {
  load_sparsity_threshold_ = 0;
}
inline ::google::protobuf::int32 ColumnSourceArgs::load_sparsity_threshold() const {
  // @@protoc_insertion_point(field_get:scanner.proto.ColumnSourceArgs.load_sparsity_threshold)
  return load_sparsity_threshold_;
}
inline void ColumnSourceArgs::set_load_sparsity_threshold(::google::protobuf::int32 value) {
  
  load_sparsity_threshold_ = value;
  // @@protoc_insertion_point(field_set:scanner.proto.ColumnSourceArgs.load_sparsity_threshold)
}

// -------------------------------------------------------------------

// ColumnElementArgs

// int32 table_id = 1;
inline void ColumnElementArgs::clear_table_id() {
  table_id_ = 0;
}
inline ::google::protobuf::int32 ColumnElementArgs::table_id() const {
  // @@protoc_insertion_point(field_get:scanner.proto.ColumnElementArgs.table_id)
  return table_id_;
}
inline void ColumnElementArgs::set_table_id(::google::protobuf::int32 value) {
  
  table_id_ = value;
  // @@protoc_insertion_point(field_set:scanner.proto.ColumnElementArgs.table_id)
}

// int32 column_id = 2;
inline void ColumnElementArgs::clear_column_id() {
  column_id_ = 0;
}
inline ::google::protobuf::int32 ColumnElementArgs::column_id() const {
  // @@protoc_insertion_point(field_get:scanner.proto.ColumnElementArgs.column_id)
  return column_id_;
}
inline void ColumnElementArgs::set_column_id(::google::protobuf::int32 value) {
  
  column_id_ = value;
  // @@protoc_insertion_point(field_set:scanner.proto.ColumnElementArgs.column_id)
}

// int64 row_id = 3;
inline void ColumnElementArgs::clear_row_id() {
  row_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ColumnElementArgs::row_id() const {
  // @@protoc_insertion_point(field_get:scanner.proto.ColumnElementArgs.row_id)
  return row_id_;
}
inline void ColumnElementArgs::set_row_id(::google::protobuf::int64 value) {
  
  row_id_ = value;
  // @@protoc_insertion_point(field_set:scanner.proto.ColumnElementArgs.row_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace scanner

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scanner_2fsource_5fargs_2eproto__INCLUDED
