data:
    load:
        frame: >
            frame (`Frame`, optional): The `Frame` to attach the resulting
            `Dataset`. If `None`, the currently active `Frame` is used and the
            zones are appended by default.
    dataset:
        addzone: >
            .. warning::

                When connected to a running instance of Tecplot 360 using the
                TecUtil Server, care must be taken to ensure that the GUI does
                not try to render the data between the creation of the zone and
                the setting of the connectivity, through the `Facemap` or
                `Nodemap` objects. This can be achieved by setting the plot
                type of the frame(s) holding on to the dataset to
                `PlotType.Sketch` before creating the zone and only going to
                `PlotType.Cartesian3D` after the connectivity is set. Tecplot
                360 may get into a bad state, corrupting loaded data, if it
                attempts to render (especially polytope) data without
                connectivity.
        suspend: >
            .. note::

                When performing many data-manipulation operations including
                adding zones, adding variables, modifying field data or
                connectivity, and especially in connected mode, it is
                recommended to do this all with the
                `tecplot.session.suspend()`. This will prevent the Tecplot
                engine from trying to "keep up" with the changes. Tecplot will
                be notified of all changes made upon exit of this context. This
                may result in significant performance gains for long
                operations. See the documentation for
                `tecplot.session.suspend()` for more information.
        numpy: >
            .. note:: *Data operations can make use of Numpy when installed.*

                When doing large data transfers into and out of Tecplot using
                PyTecplot, it is recommended to install the Python
                array-processing module `Numpy <https://scipy.org>`_. PyTecplot
                will automatically use this to optimize data transfers which
                may result in significant performance gains.

solution_time:
    update_by_gui: >
        .. note:: **Possible side-effect when connected to Tecplot 360.**

            Changing the solution times in the dataset or modifying the active
            fieldmaps in a frame may trigger a change in the active plot's
            solution time by the Tecplot 360 interface. This is done to keep
            the GUI controls consistent. In batch mode, no such side-effect
            will take place and the user must take care to set the plot's
            solution time with the `plot.solution_time
            <Cartesian3DFieldPlot.solution_time>` or `plot.solution_timestep
            <Cartesian3DFieldPlot.solution_timestep>` properties.
cwdnote: >
    .. note:: **Absolute and relative paths with PyTecplot**

        Unless file paths are absolute, saving and loading files will be
        relative to the current working directory of the parent process. This
        is different when running the PyTecplot script in batch mode and when
        running in connected mode with `tecplot.session.connect()`. In batch
        mode, paths will be relative to Python's current working directory as
        obtained by :func:`os.getcwd()`. When connected to an instance of Tecplot
        360, paths will be relative to Tecplot 360's' start-up folder which is
        typically the Tecplot 360 installation "bin" folder.
