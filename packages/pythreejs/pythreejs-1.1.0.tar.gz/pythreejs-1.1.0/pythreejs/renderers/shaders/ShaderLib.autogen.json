{
    "basic": {
        "uniforms": {
            "diffuse": {
                "value": 15658734
            },
            "opacity": {
                "value": 1
            },
            "map": {
                "value": null
            },
            "uvTransform": {
                "value": {
                    "elements": [
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]
                }
            },
            "alphaMap": {
                "value": null
            },
            "specularMap": {
                "value": null
            },
            "envMap": {
                "value": null
            },
            "flipEnvMap": {
                "value": -1
            },
            "reflectivity": {
                "value": 1
            },
            "refractionRatio": {
                "value": 0.98
            },
            "aoMap": {
                "value": null
            },
            "aoMapIntensity": {
                "value": 1
            },
            "lightMap": {
                "value": null
            },
            "lightMapIntensity": {
                "value": 1
            },
            "fogDensity": {
                "value": 0.00025
            },
            "fogNear": {
                "value": 1
            },
            "fogFar": {
                "value": 2000
            },
            "fogColor": {
                "value": 16777215
            }
        },
        "vertexShader": "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}\n",
        "fragmentShader": "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n"
    },
    "lambert": {
        "uniforms": {
            "diffuse": {
                "value": 15658734
            },
            "opacity": {
                "value": 1
            },
            "map": {
                "value": null
            },
            "uvTransform": {
                "value": {
                    "elements": [
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]
                }
            },
            "alphaMap": {
                "value": null
            },
            "specularMap": {
                "value": null
            },
            "envMap": {
                "value": null
            },
            "flipEnvMap": {
                "value": -1
            },
            "reflectivity": {
                "value": 1
            },
            "refractionRatio": {
                "value": 0.98
            },
            "aoMap": {
                "value": null
            },
            "aoMapIntensity": {
                "value": 1
            },
            "lightMap": {
                "value": null
            },
            "lightMapIntensity": {
                "value": 1
            },
            "emissiveMap": {
                "value": null
            },
            "fogDensity": {
                "value": 0.00025
            },
            "fogNear": {
                "value": 1
            },
            "fogFar": {
                "value": 2000
            },
            "fogColor": {
                "value": 16777215
            },
            "ambientLightColor": {
                "value": []
            },
            "directionalLights": {
                "value": [],
                "properties": {
                    "direction": {},
                    "color": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {}
                }
            },
            "directionalShadowMap": {
                "value": []
            },
            "directionalShadowMatrix": {
                "value": []
            },
            "spotLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "direction": {},
                    "distance": {},
                    "coneCos": {},
                    "penumbraCos": {},
                    "decay": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {}
                }
            },
            "spotShadowMap": {
                "value": []
            },
            "spotShadowMatrix": {
                "value": []
            },
            "pointLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "decay": {},
                    "distance": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {},
                    "shadowCameraNear": {},
                    "shadowCameraFar": {}
                }
            },
            "pointShadowMap": {
                "value": []
            },
            "pointShadowMatrix": {
                "value": []
            },
            "hemisphereLights": {
                "value": [],
                "properties": {
                    "direction": {},
                    "skyColor": {},
                    "groundColor": {}
                }
            },
            "rectAreaLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "width": {},
                    "height": {}
                }
            },
            "emissive": {
                "value": 0
            }
        },
        "vertexShader": "#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        "fragmentShader": "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n"
    },
    "phong": {
        "uniforms": {
            "diffuse": {
                "value": 15658734
            },
            "opacity": {
                "value": 1
            },
            "map": {
                "value": null
            },
            "uvTransform": {
                "value": {
                    "elements": [
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]
                }
            },
            "alphaMap": {
                "value": null
            },
            "specularMap": {
                "value": null
            },
            "envMap": {
                "value": null
            },
            "flipEnvMap": {
                "value": -1
            },
            "reflectivity": {
                "value": 1
            },
            "refractionRatio": {
                "value": 0.98
            },
            "aoMap": {
                "value": null
            },
            "aoMapIntensity": {
                "value": 1
            },
            "lightMap": {
                "value": null
            },
            "lightMapIntensity": {
                "value": 1
            },
            "emissiveMap": {
                "value": null
            },
            "bumpMap": {
                "value": null
            },
            "bumpScale": {
                "value": 1
            },
            "normalMap": {
                "value": null
            },
            "normalScale": {
                "value": {
                    "x": 1,
                    "y": 1
                }
            },
            "displacementMap": {
                "value": null
            },
            "displacementScale": {
                "value": 1
            },
            "displacementBias": {
                "value": 0
            },
            "gradientMap": {
                "value": null
            },
            "fogDensity": {
                "value": 0.00025
            },
            "fogNear": {
                "value": 1
            },
            "fogFar": {
                "value": 2000
            },
            "fogColor": {
                "value": 16777215
            },
            "ambientLightColor": {
                "value": []
            },
            "directionalLights": {
                "value": [],
                "properties": {
                    "direction": {},
                    "color": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {}
                }
            },
            "directionalShadowMap": {
                "value": []
            },
            "directionalShadowMatrix": {
                "value": []
            },
            "spotLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "direction": {},
                    "distance": {},
                    "coneCos": {},
                    "penumbraCos": {},
                    "decay": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {}
                }
            },
            "spotShadowMap": {
                "value": []
            },
            "spotShadowMatrix": {
                "value": []
            },
            "pointLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "decay": {},
                    "distance": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {},
                    "shadowCameraNear": {},
                    "shadowCameraFar": {}
                }
            },
            "pointShadowMap": {
                "value": []
            },
            "pointShadowMatrix": {
                "value": []
            },
            "hemisphereLights": {
                "value": [],
                "properties": {
                    "direction": {},
                    "skyColor": {},
                    "groundColor": {}
                }
            },
            "rectAreaLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "width": {},
                    "height": {}
                }
            },
            "emissive": {
                "value": 0
            },
            "specular": {
                "value": 1118481
            },
            "shininess": {
                "value": 30
            }
        },
        "vertexShader": "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        "fragmentShader": "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n"
    },
    "standard": {
        "uniforms": {
            "diffuse": {
                "value": 15658734
            },
            "opacity": {
                "value": 1
            },
            "map": {
                "value": null
            },
            "uvTransform": {
                "value": {
                    "elements": [
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]
                }
            },
            "alphaMap": {
                "value": null
            },
            "envMap": {
                "value": null
            },
            "flipEnvMap": {
                "value": -1
            },
            "reflectivity": {
                "value": 1
            },
            "refractionRatio": {
                "value": 0.98
            },
            "aoMap": {
                "value": null
            },
            "aoMapIntensity": {
                "value": 1
            },
            "lightMap": {
                "value": null
            },
            "lightMapIntensity": {
                "value": 1
            },
            "emissiveMap": {
                "value": null
            },
            "bumpMap": {
                "value": null
            },
            "bumpScale": {
                "value": 1
            },
            "normalMap": {
                "value": null
            },
            "normalScale": {
                "value": {
                    "x": 1,
                    "y": 1
                }
            },
            "displacementMap": {
                "value": null
            },
            "displacementScale": {
                "value": 1
            },
            "displacementBias": {
                "value": 0
            },
            "roughnessMap": {
                "value": null
            },
            "metalnessMap": {
                "value": null
            },
            "fogDensity": {
                "value": 0.00025
            },
            "fogNear": {
                "value": 1
            },
            "fogFar": {
                "value": 2000
            },
            "fogColor": {
                "value": 16777215
            },
            "ambientLightColor": {
                "value": []
            },
            "directionalLights": {
                "value": [],
                "properties": {
                    "direction": {},
                    "color": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {}
                }
            },
            "directionalShadowMap": {
                "value": []
            },
            "directionalShadowMatrix": {
                "value": []
            },
            "spotLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "direction": {},
                    "distance": {},
                    "coneCos": {},
                    "penumbraCos": {},
                    "decay": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {}
                }
            },
            "spotShadowMap": {
                "value": []
            },
            "spotShadowMatrix": {
                "value": []
            },
            "pointLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "decay": {},
                    "distance": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {},
                    "shadowCameraNear": {},
                    "shadowCameraFar": {}
                }
            },
            "pointShadowMap": {
                "value": []
            },
            "pointShadowMatrix": {
                "value": []
            },
            "hemisphereLights": {
                "value": [],
                "properties": {
                    "direction": {},
                    "skyColor": {},
                    "groundColor": {}
                }
            },
            "rectAreaLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "width": {},
                    "height": {}
                }
            },
            "emissive": {
                "value": 0
            },
            "roughness": {
                "value": 0.5
            },
            "metalness": {
                "value": 0.5
            },
            "envMapIntensity": {
                "value": 1
            }
        },
        "vertexShader": "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        "fragmentShader": "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n"
    },
    "points": {
        "uniforms": {
            "diffuse": {
                "value": 15658734
            },
            "opacity": {
                "value": 1
            },
            "size": {
                "value": 1
            },
            "scale": {
                "value": 1
            },
            "map": {
                "value": null
            },
            "uvTransform": {
                "value": {
                    "elements": [
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]
                }
            },
            "fogDensity": {
                "value": 0.00025
            },
            "fogNear": {
                "value": 1
            },
            "fogFar": {
                "value": 2000
            },
            "fogColor": {
                "value": 16777215
            }
        },
        "vertexShader": "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#ifdef USE_SIZEATTENUATION\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\n\t#else\n\t\tgl_PointSize = size;\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        "fragmentShader": "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n"
    },
    "dashed": {
        "uniforms": {
            "diffuse": {
                "value": 15658734
            },
            "opacity": {
                "value": 1
            },
            "map": {
                "value": null
            },
            "uvTransform": {
                "value": {
                    "elements": [
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]
                }
            },
            "alphaMap": {
                "value": null
            },
            "fogDensity": {
                "value": 0.00025
            },
            "fogNear": {
                "value": 1
            },
            "fogFar": {
                "value": 2000
            },
            "fogColor": {
                "value": 16777215
            },
            "scale": {
                "value": 1
            },
            "dashSize": {
                "value": 1
            },
            "totalSize": {
                "value": 2
            }
        },
        "vertexShader": "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}\n",
        "fragmentShader": "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}\n"
    },
    "depth": {
        "uniforms": {
            "diffuse": {
                "value": 15658734
            },
            "opacity": {
                "value": 1
            },
            "map": {
                "value": null
            },
            "uvTransform": {
                "value": {
                    "elements": [
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]
                }
            },
            "alphaMap": {
                "value": null
            },
            "displacementMap": {
                "value": null
            },
            "displacementScale": {
                "value": 1
            },
            "displacementBias": {
                "value": 0
            }
        },
        "vertexShader": "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}\n",
        "fragmentShader": "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}\n"
    },
    "normal": {
        "uniforms": {
            "diffuse": {
                "value": 15658734
            },
            "opacity": {
                "value": 1
            },
            "map": {
                "value": null
            },
            "uvTransform": {
                "value": {
                    "elements": [
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]
                }
            },
            "alphaMap": {
                "value": null
            },
            "bumpMap": {
                "value": null
            },
            "bumpScale": {
                "value": 1
            },
            "normalMap": {
                "value": null
            },
            "normalScale": {
                "value": {
                    "x": 1,
                    "y": 1
                }
            },
            "displacementMap": {
                "value": null
            },
            "displacementScale": {
                "value": 1
            },
            "displacementBias": {
                "value": 0
            }
        },
        "vertexShader": "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}\n",
        "fragmentShader": "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}\n"
    },
    "cube": {
        "uniforms": {
            "tCube": {
                "value": null
            },
            "tFlip": {
                "value": -1
            },
            "opacity": {
                "value": 1
            }
        },
        "vertexShader": "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}\n",
        "fragmentShader": "uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\nvoid main() {\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n\tgl_FragColor.a *= opacity;\n}\n"
    },
    "equirect": {
        "uniforms": {
            "tEquirect": {
                "value": null
            }
        },
        "vertexShader": "varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvWorldPosition = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}\n",
        "fragmentShader": "uniform sampler2D tEquirect;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldPosition );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n}\n"
    },
    "distanceRGBA": {
        "uniforms": {
            "diffuse": {
                "value": 15658734
            },
            "opacity": {
                "value": 1
            },
            "map": {
                "value": null
            },
            "uvTransform": {
                "value": {
                    "elements": [
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]
                }
            },
            "alphaMap": {
                "value": null
            },
            "displacementMap": {
                "value": null
            },
            "displacementScale": {
                "value": 1
            },
            "displacementBias": {
                "value": 0
            },
            "referencePosition": {
                "value": {
                    "x": 0,
                    "y": 0,
                    "z": 0
                }
            },
            "nearDistance": {
                "value": 1
            },
            "farDistance": {
                "value": 1000
            }
        },
        "vertexShader": "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}\n",
        "fragmentShader": "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}\n"
    },
    "shadow": {
        "uniforms": {
            "ambientLightColor": {
                "value": []
            },
            "directionalLights": {
                "value": [],
                "properties": {
                    "direction": {},
                    "color": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {}
                }
            },
            "directionalShadowMap": {
                "value": []
            },
            "directionalShadowMatrix": {
                "value": []
            },
            "spotLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "direction": {},
                    "distance": {},
                    "coneCos": {},
                    "penumbraCos": {},
                    "decay": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {}
                }
            },
            "spotShadowMap": {
                "value": []
            },
            "spotShadowMatrix": {
                "value": []
            },
            "pointLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "decay": {},
                    "distance": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {},
                    "shadowCameraNear": {},
                    "shadowCameraFar": {}
                }
            },
            "pointShadowMap": {
                "value": []
            },
            "pointShadowMatrix": {
                "value": []
            },
            "hemisphereLights": {
                "value": [],
                "properties": {
                    "direction": {},
                    "skyColor": {},
                    "groundColor": {}
                }
            },
            "rectAreaLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "width": {},
                    "height": {}
                }
            },
            "fogDensity": {
                "value": 0.00025
            },
            "fogNear": {
                "value": 1
            },
            "fogFar": {
                "value": 2000
            },
            "fogColor": {
                "value": 16777215
            },
            "color": {
                "value": 0
            },
            "opacity": {
                "value": 1
            }
        },
        "vertexShader": "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        "fragmentShader": "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}\n"
    },
    "physical": {
        "uniforms": {
            "diffuse": {
                "value": 15658734
            },
            "opacity": {
                "value": 1
            },
            "map": {
                "value": null
            },
            "uvTransform": {
                "value": {
                    "elements": [
                        1,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        1
                    ]
                }
            },
            "alphaMap": {
                "value": null
            },
            "envMap": {
                "value": null
            },
            "flipEnvMap": {
                "value": -1
            },
            "reflectivity": {
                "value": 1
            },
            "refractionRatio": {
                "value": 0.98
            },
            "aoMap": {
                "value": null
            },
            "aoMapIntensity": {
                "value": 1
            },
            "lightMap": {
                "value": null
            },
            "lightMapIntensity": {
                "value": 1
            },
            "emissiveMap": {
                "value": null
            },
            "bumpMap": {
                "value": null
            },
            "bumpScale": {
                "value": 1
            },
            "normalMap": {
                "value": null
            },
            "normalScale": {
                "value": {
                    "x": 1,
                    "y": 1
                }
            },
            "displacementMap": {
                "value": null
            },
            "displacementScale": {
                "value": 1
            },
            "displacementBias": {
                "value": 0
            },
            "roughnessMap": {
                "value": null
            },
            "metalnessMap": {
                "value": null
            },
            "fogDensity": {
                "value": 0.00025
            },
            "fogNear": {
                "value": 1
            },
            "fogFar": {
                "value": 2000
            },
            "fogColor": {
                "value": 16777215
            },
            "ambientLightColor": {
                "value": []
            },
            "directionalLights": {
                "value": [],
                "properties": {
                    "direction": {},
                    "color": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {}
                }
            },
            "directionalShadowMap": {
                "value": []
            },
            "directionalShadowMatrix": {
                "value": []
            },
            "spotLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "direction": {},
                    "distance": {},
                    "coneCos": {},
                    "penumbraCos": {},
                    "decay": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {}
                }
            },
            "spotShadowMap": {
                "value": []
            },
            "spotShadowMatrix": {
                "value": []
            },
            "pointLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "decay": {},
                    "distance": {},
                    "shadow": {},
                    "shadowBias": {},
                    "shadowRadius": {},
                    "shadowMapSize": {},
                    "shadowCameraNear": {},
                    "shadowCameraFar": {}
                }
            },
            "pointShadowMap": {
                "value": []
            },
            "pointShadowMatrix": {
                "value": []
            },
            "hemisphereLights": {
                "value": [],
                "properties": {
                    "direction": {},
                    "skyColor": {},
                    "groundColor": {}
                }
            },
            "rectAreaLights": {
                "value": [],
                "properties": {
                    "color": {},
                    "position": {},
                    "width": {},
                    "height": {}
                }
            },
            "emissive": {
                "value": 0
            },
            "roughness": {
                "value": 0.5
            },
            "metalness": {
                "value": 0.5
            },
            "envMapIntensity": {
                "value": 1
            },
            "clearCoat": {
                "value": 0
            },
            "clearCoatRoughness": {
                "value": 0
            }
        },
        "vertexShader": "#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}\n",
        "fragmentShader": "#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n\tuniform float clearCoat;\n\tuniform float clearCoatRoughness;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_template>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}\n"
    }
}