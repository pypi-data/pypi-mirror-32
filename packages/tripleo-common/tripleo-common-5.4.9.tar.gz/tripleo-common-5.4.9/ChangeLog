CHANGES
=======

5.4.9
-----

* Add logging to capabilities filter
* Build images with a 4k block size filesystem

5.4.8
-----

* Fix overcloud node delete after an upgrade
* Zuul: Remove project name
* Remove RH1 OVB jobs from configuration

5.4.7
-----

* Migrate tripleo-common to zuul v3 jobs

5.4.6
-----

* Fix using old Swift rings when creating a new stack

5.4.5
-----

* Adding env variable OS\_TENANT\_NAME back in overcloudrc

5.4.4
-----

* Remove machine-id from image

5.4.3
-----

* Add skip\_deploy\_identifier
* Add element to regenerate dracut on the agent
* Ensure Swift Rings backup container and URLs
* Add MigrationSshKey to generated passwords

5.4.2
-----

* Updated from global requirements
* Handle re-created resources in StackUpdateManager
* Update to a newer hacking library
* Use Mistral to create Swift temporary URLs
* Remove remaining vendor plugins from default image YAML
* Move the overcloudrc generation from tripleoclient to a Mistral action
* Fix build-image script output

5.4.1
-----

* Update container images to point to newton
* Fix parameter update for custom roles
* Add port registration to IPMI power driver
* Revert changes to CephClusterFSID generation
* Revert "Add CephClusterFSID to generated passwords"
* Generate CephClusterFSID for new stacks
* Pass the plan name when tagging nodes
* Replace ucs\_hostname with ucs\_address
* Only use parameter\_defaults for scaling down

5.4.0
-----

* Fix the validation ssh keys workflow
* Power off new nodes when making them available, not right after enrolling
* Add CephClusterFSID to generated passwords
* Do not try "manage" actions on nodes that are not in "enroll" state
* Use parameters from existing Heat stack if it already exists
* Configure run-validation to use the custom output
* Fetch the snmpd\_readonly\_user\_password from the Mistral environment
* Updated from global requirements
* Refresh DeployIdentifier as well on update
* Port Scale Down Functionality into Workflow

5.3.0
-----

* Centos images no longer require epel element
* Default the J2 excludes files to safe values
* Make UpdateManager use a passed-in stack setup
* Add the KeystoneCredential0 and KeystoneCredential1 parameters
* Add the J2 exclude file exception (When file not found)
* Support node untagging
* Add support to create role main template file based in role.role.j2.yaml
* Remove references to overcloud-without-mergepy
* Modify j2 templating to allow role files generation
* Don't set node state during node registration
* Update .gitreview for stable/newton

5.2.0
-----

* Fix upload-swift-artifacts for old OSclient
* Retry sending messages to Zaqar if it fails
* Port password generation from tripleoclient to tripleo-common
* Remove the unused service\_host arg from node registration
* Remove the old, deprecated Mistral action names
* Updated from global requirements
* Return the result of create\_plan in create\_deployment\_plan workflow
* Fix the default plan creation
* Add template processing to the update plan workflow
* Revert "Upgrades: Add StackUpgradeManager"
* Revert "Upgrades: Add post-upgrade stack update"
* Revert "Upgrades: Add initialization to StackUpgradeManager"
* Provide: return task result in case of failure

5.1.0
-----

* Add node tagging workflow
* Revert "Add template processing to the update plan workflow."
* Check the result of the parent action when subclassing
* Add FS\_TYPE xfs to RHEL and CentOS images
* Replace agent elements with package python-heat-agent-puppet
* Add template processing to the update plan workflow
* Clearer error when the Mistral env already exists
* Set Deployment Parameters
* Updated from global requirements
* Add an action and workflow to update a plan
* Wire in jinja templating for custom roles
* Run copy\_ssh\_keys after overcloud finishes
* Remove "type: direct" from workflows as it is the default
* Fix an autoclass reference and add missing pages to the toctree
* Allow the validations to run openstack commands
* Handle missing mistral environment
* Clean up messages in the 'configure' workflow
* Fix the validation action name in the workbook
* Ironic Client: Bump the max\_retries and retry\_interval
* Test baremetal: Correctly stop the mocks
* Preserve the shell environment for run-validation
* Fix error when identity file is missing
* Change default deploy artifacts container name
* Fix pep8 errors when running with python3
* Include environments in capabilities output
* Revert "Set Deployment Parameters"
* Add List Roles Action
* Allow for building specific images
* Fix upload-swift-artifacts work new OSclient

5.0.0
-----

* Use Openstack cli instead in order to get the instance status
* Allow running validation against different plans
* Disable retry files for ansible validations
* Workflows to run validations
* Workflows to load validations
* Don't expect input to be in every workflow in doc generation
* Better namespace the list of TripleO actions
* Set Deployment Parameters
* M/N upgrade: Fix ACTIVE node detection
* Generate reference documentation for Workbooks
* Add Mistral action & workflow for root device configuration
* Add Mistral action for boot configuration
* Add boot option argument to the Node Registration Mistral workflow
* Workflow to setup validations
* Updated from global requirements
* Fixes missing action entry point
* Exclude more unneeded files from default plan
* Change output for GetCapabilitiesAction
* Add Plan Deletion
* Verify that neither the Swift container or Mistral environment exist
* Adds Deployment Action & Workflow
* Add backwards compatibility for openstackclient
* Adds parameters actions
* Adds action for template processing
* Add support to image build yaml input to handle env vars
* Fix typo in Introspection workflow message
* Prevent replacement of Port, Net and Subnet
* Change image names to match what the rest of the system expects
* Remove epel element from base yaml ramdisk agent image
* Remove the delorean-repo element from CentOS images
* Ignore changes to images in nova servers
* Adds Plan List Action
* Change input for UpdateCapabilitiesAction
* Install the upload-\* scripts with tripleo-common
* Fix formatting in doc files
* Updated from global requirements
* Extract \`etc\` files from openstack packages
* Build heat-docker-agents for specific versions
* Remove unnecessary packages
* Remove configure\_container.sh script
* Don't clean after \`yum update\` in script
* Fix code highlighting in the README and the title in the toctree
* Minor update to the upgrade-non-controller.sh
* Move Workflow comments into the workflow description property
* Remove unused LOG to keep code clean
* Remove execution\_id from the workflows

5.0.0.0b2
---------

* Updated from global requirements
* Remove sysctl element from overcloud image
* Deployment workflows for remote execution, etc
* Mistral action to drive Heat software deployments
* Updated from global requirements
* Add upload-puppet-modules script
* Updated from global requirements
* Add messaging to workflows
* Allow setting capabilities as a dict in addition to a string
* Add baremetal workflows
* Add RegisterNodesAction action
* Fix exception within deployment plan actions
* overcloud-odl : add new image file definition
* Fix interactive update race condition
* Add --json-output option to tripleo-build-images
* Support setting node UUID when registering nodes
* Add Heat Capabilities Actions
* Add a compatability shim to transition tripleoclient

5.0.0.0b1
---------

* Allow updating of nodes in baremetal import
* Removes unused code
* Add TripleO Mistral documentation
* Remove unnecessary package dhcp-client
* Initial Integration of Mistral into TripleO
* Updated from global requirements
* Import initial\_state logic from tripleoclient
* Log diskimage-builder output to a file
* Remove the TODO from the README.rst
* Updated from global requirements
* Example yaml for building images
* StackAction parameter to distinguish top-level create vs. update
* Expose documented --seconds option
* Fix setting deploy kernel and image when updating nodes
* Fix upload-swift-artifacts with keystone v3
* Fix no-replace-server to accurately preview update

2.0.0
-----

* Return list of new nodes from register\_all\_nodes
* Import code working with Ironic nodes from os\_cloud\_config
* Upload docker image files from yaml config file
* Use a common constant for the Heat timeout value
* Build image files from definitions in yaml
* Remove ping test template from tripleo-common
* Upgrades: Add initialization to StackUpgradeManager
* Upgrades: Add post-upgrade stack update
* Remove tripleo.sh (now in tripleo-ci repo)
* Fix typos in code
* Use m1.small for ping test
* Replace deprecated LOG.warn with LOG.warning
* Install the upgrade-non-controller.sh script with tripleo-common
* Collect constants in one file
* Change the private subnet of the overcloud tenant network
* Missing python-ipaddr in heat-agents image
* Add capabilities filter for Nova
* Prevent any property change from replacing OS::Nova::Server
* Expose TENANT\_STACK\_DEPLOY\_ARGS
* Adds override for the overcloud node user in upgrade-non-controller
* Upgrades: Add StackUpgradeManager
* Adds a bash script that operators will use during upgrades
* Updated from global requirements
* Use PyYAML's safe\_dump to avoid outputting Python specific values
* Return current-tripleo symlink
* Override OS::Nova::Server for user\_data updates
* Move delorean pin
* Reuse puppet modules already downloaded
* Allow updating images via \`tripleo.sh --overcloud-images\`
* Add requirement for gcc to delorean setup
* Convenience methods in base model class
* Pin puppet-nova
* Extend ping test create timeout
* Retry delorean package builds on known network errors
* Pin puppet-concat
* Detect when we need the alternate heat command
* Use Fedora image for ping test

1.0.0
-----

* Output some debug info when pingtest fails
* Revert "Pin puppet heat"
* Revert "Pin puppetlabs-mysql to get CI going"
* Pin puppet heat
* Catch NotFound when listing events during updates
* Update pingtest for newer heatclient
* Use git.openstack.org where possible
* Revert "Pin the puppetlabs mongodb puppet module"
* Pin the puppetlabs mongodb puppet module
* Adds a simple overcloud tenant vm ping test to tripleo.sh
* Add openstack packages to heat-agents container
* Update tripleo.sh to enable repo path override
* Remove stable/liberty pin
* Heat Docker agent built with Dockerfile
* Pin stable/liberty repo
* tripleo.sh support updating and checking deployed overcloud
* Update the container flag
* tripleo.sh add option to delete overcloud
* Add scripts/upload-swift-artifacts
* Add OVERCLOUD\_IMAGES\_ARGS environment variable
* Improve docs for template utils
* Rename stack\_update to \_stack\_update
* Switch to Mega progress reports
* Fixes heat exceptions
* Add the missing plan name to the PlanAlreadyExistsError
* Drop py33 support
* Pin puppetlabs-mysql to get CI going
* Adds file deletion to plan manager
* Ensures plan exists
* Initial workflow implementation of tripleo-common
* Set a default timeout for 240 minutes for Heat Updates

0.1.0
-----

* Set origin/stable/liberty to the REF we want to build
* Remove Python 2.6
* Make coverage tests work
* Remove flavor creation
* tripleo.sh set priorities for stable repos
* Updated from global requirements
* Set DIB\_INSTALLTYPE\_puppet\_modules for master/stable
* Show which breakpoint will be cleared by pressing Enter
* Change breakpoint removal log to info
* Deploy Docker compute role with tripleo.sh
* Don't install git-hg
* tripleo.sh initial support for stable branches
* Updated from global requirements
* Fix node group name when deleting a node
* Remove puppet-heat pin
* Update the repo whitelist to reflect what we CI
* Pin puppet-heat
* Fix cherry-pick comments
* tripleo.sh Add option to locally build delorean package
* tripleo.sh Add option to create a local Delorean environment
* Fix bashate errors
* Remove empty test file
* Explicitly unset package update hooks when deleting a node
* Fix CentOS detection
* Fix wrong node count when deleting specific nodes
* Remove support for Tuskar
* Add tripleo.sh
* Don't send default environment file on pkg update or scale
* Change ignore-errors to ignore\_errors
* Catch and log all exceptions when removing a breakpoint
* Minimize walking through stack when removing a breakpoint
* Check if regexp is valid when updating packages
* Don't set UpdateIdentifier in tuskar plan
* Allow passing extra environment files when scaling nodes
* Make tuskar optional when scaling down
* Allow passing extra environment files to package update
* Make tuskar optional when running package update
* Add package update support
* Add a step-through heat stack update module
* Scale down heat stack
* Scale out heat stack
* Initial Cookiecutter Commit
* Added .gitreview
