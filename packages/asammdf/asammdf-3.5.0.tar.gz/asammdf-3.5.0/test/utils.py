# -*- coding: utf-8 -*-
import os

import numpy as np

from asammdf import MDF, SUPPORTED_VERSIONS, Signal
import asammdf.v4_constants as v4c
import asammdf.v4_blocks as v4b
import asammdf.v2_v3_constants as v3c
import asammdf.v2_v3_blocks as v3b

SUPPORTED_VERSIONS = SUPPORTED_VERSIONS[1:]

MEMORY = ('minimum', 'low', 'full')

cycles = 500
channels_count = 20
array_channels_count = 20


CHANNELS_DEMO = {

'$ActiveCalibrationPage': np.array([1, 0, 1, 1], dtype=np.uint8),
'$CalibrationLog': np.array([b'', b'Switch to reference page', b'Switch to working page',
       b'Switch to working page'],
      dtype='|S24'),
'ASAM.M.SCALAR.UBYTE.TAB_NOINTP_DEFAULT_VALUE': np.array([ 111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        104.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  108.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  102.        ,
        110.66666412,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ], dtype=np.float32),
'ASAM_[0].M.MATRIX_DIM_16_1_1.UBYTE.IDENTICAL': np.array([ 88,  98, 108, 118, 128, 138, 148, 158, 168, 178, 188, 198, 208,
       218, 228, 238, 248,   2,  12,  22,  32,  42,  52,  62,  72,  82,
        92, 102, 112, 122, 132, 142, 152, 162, 172, 182, 192, 202, 212,
       222,   0,  10,  20,  30,  40,  50,  60,  70,  80,  90, 100, 110,
       120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240,
       250,   4,  14,  24,  34,  44,  54,  64,  74,  84,  94, 104, 114,
       124, 134, 144, 154, 164, 174, 184, 194, 204, 214, 224, 234], dtype=np.uint8),
'ASAM.M.SCALAR.SWORD.IDENTICAL': np.array([900, 910, 920, 930, 940, 950, 960, 970, 980, 990,   0,  10,  20,
        30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130, 140, 150,
       160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260, 270, 280,
       290, 300, 310, 320, 330, 340, 350, 360, 370, 380, 390, 400, 410,
       420, 430, 440, 450, 460, 470, 480, 490, 500, 510, 520, 530, 540,
       550, 560, 570, 580, 590, 600, 610, 620, 630, 640, 650, 660, 670,
       680, 690, 700, 710, 720, 730, 740, 750, 760, 770, 780, 790], dtype=np.int16),
'ASAM.M.SCALAR.UBYTE.TAB_INTP_DEFAULT_VALUE': np.array([ 111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,
        111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,
        111.,  111.,  100.,  110.,  111.,  111.,  111.,  111.,  111.,
        111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,
        111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,
        111.,  104.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,
        111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,
        111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,
        108.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,
        111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.,  111.], dtype=np.float32),
'ASAM.M.SCALAR.UBYTE.FORM_X_PLUS_4': np.array([   4.,   14.,   24.,   34.,   44.,   54.,   64.,   74.,   84.,
         94.,  104.,  114.,  124.,  134.,  144.,  154.,  164.,  174.,
        184.,  194.,  204.,  214.,  224.,  234.,  244.,  254.,    8.,
         18.,   28.,   38.,   48.,   58.,   68.,   78.,   88.,   98.,
        108.,  118.,  128.,  138.,  148.,  158.,  168.,  178.,  188.,
        198.,  208.,  218.,  228.,  238.,  248.,  258.,   12.,   22.,
         32.,   42.,   52.,   62.,   72.,   82.,   92.,  102.,  112.,
        122.,  132.,  142.,  152.,  162.,  172.,  182.,  192.,  202.,
        212.,  222.,  232.,  242.,  252.,    6.,   16.,   26.,   36.,
         46.,   56.,   66.,   76.,   86.,   96.,  106.,  116.,  126.], dtype=np.float32),
'ASAM.M.SCALAR.SLONG.IDENTICAL': np.array([200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310, 320,
       330, 340, 350, 360, 370, 380, 390, 400, 410, 420, 430, 440, 450,
       460, 470, 480, 490, 500, 510, 520, 530, 540, 550, 560, 570, 580,
       590, 600, 610, 620, 630, 640, 650, 660, 670, 680, 690, 700, 710,
       720, 730, 740, 750, 760, 770, 780, 790, 800, 810, 820, 830, 840,
       850, 860, 870, 880, 890, 900, 910, 920, 930, 940, 950, 960, 970,
       980, 990,   0,  10,  20,  30,  40,  50,  60,  70,  80,  90]),
'ASAM.M.SCALAR.UBYTE.IDENTICAL': np.array([188, 198, 208, 218, 228, 238, 248,   2,  12,  22,  32,  42,  52,
        62,  72,  82,  92, 102, 112, 122, 132, 142, 152, 162, 172, 182,
       192, 202, 212, 222,   0,  10,  20,  30,  40,  50,  60,  70,  80,
        90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210,
       220, 230, 240, 250,   4,  14,  24,  34,  44,  54,  64,  74,  84,
        94, 104, 114, 124, 134, 144, 154, 164, 174, 184, 194, 204, 214,
       224, 234, 244, 254,   8,  18,  28,  38,  48,  58,  68,  78], dtype=np.uint8),
'ASAM.M.SCALAR.UBYTE.TAB_INTP_NO_DEFAULT_VALUE': np.array([ 111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        108.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  102.        ,  110.66666412,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        100.        ,  110.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  104.        ,  111.        ,
        111.        ,  111.        ], dtype=np.float32),
'ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2': np.array([-136., -116.,  -96.,  -76.,  -56.,  -36.,  -16.,    4.,   24.,
         44.,   64.,   84.,  104.,  124.,  144.,  164.,  184.,  204.,
        224.,  244., -248., -228., -208., -188., -168., -148., -128.,
       -108.,  -88.,  -68.,    0.,   20.,   40.,   60.,   80.,  100.,
        120.,  140.,  160.,  180.,  200.,  220.,  240., -252., -232.,
       -212., -192., -172., -152., -132., -112.,  -92.,  -72.,  -52.,
        -32.,  -12.,    8.,   28.,   48.,   68.,   88.,  108.,  128.,
        148.,  168.,  188.,  208.,  228.,  248., -244., -224., -204.,
       -184., -164., -144., -124., -104.,  -84.,  -64.,  -44.,  -24.,
         -4.,   16.,   36.,   56.,   76.,   96.,  116.,  136.,  156.], dtype=np.float32),
'ASAM_[0].M.ARRAY_SIZE_16.UBYTE.IDENTICAL': np.array([ 44,  54,  64,  74,  84,  94, 104, 114, 124, 134, 144, 154, 164,
       174, 184, 194, 204, 214, 224, 234, 244, 254,   8,  18,  28,  38,
        48,  58,  68,  78,  88,  98, 108, 118, 128, 138, 148, 158, 168,
       178, 188, 198, 208, 218, 228, 238, 248,   2,  12,  22,  32,  42,
        52,  62,  72,  82,  92, 102, 112, 122, 132, 142, 152, 162, 172,
       182, 192, 202, 212, 222,   0,  10,  20,  30,  40,  50,  60,  70,
        80,  90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190], dtype=np.uint8),
'ASAM_[0][0].M.MATRIX_DIM_8_2_1.UBYTE.IDENTICAL': np.array([244, 254,   8,  18,  28,  38,  48,  58,  68,  78,  88,  98, 108,
       118, 128, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 238,
       248,   2,  12,  22,  32,  42,  52,  62,  72,  82,  92, 102, 112,
       122, 132, 142, 152, 162, 172, 182, 192, 202, 212, 222,   0,  10,
        20,  30,  40,  50,  60,  70,  80,  90, 100, 110, 120, 130, 140,
       150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250,   4,  14,
        24,  34,  44,  54,  64,  74,  84,  94, 104, 114, 124, 134], dtype=np.uint8),
'ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0': np.array([61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 62, 62, 62,
       62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
       62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
       62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
       62, 62, 62, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
       61, 61, 61, 61, 61, 61, 61, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
       60, 60, 60, 60, 60, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
       58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 57, 57, 57, 57, 57, 57, 57,
       57, 57, 56, 56, 56, 56, 56, 56, 56, 56, 56, 55, 55, 55, 55, 55, 55,
       55, 55, 54, 54, 54, 54, 54, 54, 54, 54, 53, 53, 53, 53, 53, 53, 53,
       52, 52, 52, 52, 52, 52, 52, 51, 51, 51, 51, 51, 51, 51, 50, 50, 50,
       50, 50, 50, 49, 49, 49, 49, 49, 49, 48, 48, 48, 48, 48, 48, 47, 47,
       47, 47, 47, 47, 46, 46, 46, 46, 46, 46, 45, 45, 45, 45, 45, 45, 44,
       44, 44, 44, 44, 44, 43, 43, 43, 43, 43, 42, 42, 42, 42, 42, 42, 41,
       41, 41, 41, 41, 40, 40, 40, 40, 40, 39, 39, 39, 39, 39, 39, 38, 38,
       38, 38, 38, 37, 37, 37, 37, 37, 36, 36, 36, 36, 36, 35, 35, 35, 35,
       35, 34, 34, 34, 34, 34, 33, 33, 33, 33, 33, 33, 32, 32, 32, 32, 32,
       31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29, 29, 29, 29, 29, 28, 28,
       28, 28, 28, 27, 27, 27, 27, 27, 26, 26, 26, 26, 26, 25, 25, 25, 25,
       25, 25, 24, 24, 24, 24, 24, 23, 23, 23, 23, 23, 22, 22, 22, 22, 22,
       21, 21, 21, 21, 21, 21, 20, 20, 20, 20, 20, 19, 19, 19, 19, 19, 19,
       18, 18, 18, 18, 18, 17, 17, 17, 17, 17, 17, 16, 16, 16, 16, 16, 16,
       15, 15, 15, 15, 15, 15, 14, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13,
       13, 12, 12, 12, 12, 12, 12, 11, 11, 11, 11, 11, 11, 11, 10, 10, 10,
       10, 10, 10, 10,  9,  9,  9,  9,  9,  9,  9,  8,  8,  8,  8,  8,  8,
        8,  7,  7,  7,  7,  7,  7,  7,  7,  6,  6,  6,  6,  6,  6,  6,  6,
        5,  5,  5,  5,  5,  5,  5,  5,  5,  4,  4,  4,  4,  4,  4,  4,  4,
        4,  4,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  2,  2,  2,  2,
        2,  2,  2,  2,  2,  2,  2,  2,  2,  1,  1,  1,  1,  1,  1,  1,  1,
        1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
        0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,
        1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
        2,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,
        4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  5,  5,  5,  5,  6,  6,  6,
        6,  6,  6,  6,  6,  7,  7,  7,  7,  7,  7,  7,  7,  8,  8,  8,  8,
        8,  8,  8,  9,  9,  9,  9,  9,  9,  9, 10, 10, 10, 10, 10, 10, 10,
       11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13,
       13, 13, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 16, 16, 16,
       16, 16, 16, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 19, 19,
       19, 19, 19, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 22, 22, 22,
       22, 22, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25,
       25, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 29,
       29, 29, 29, 29, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 32, 32, 32,
       32, 32, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 35, 35, 35, 35,
       35, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 39,
       39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 41, 41, 41, 41, 41, 42, 42,
       42, 42, 42, 42, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 45, 45,
       45, 45, 45, 45, 46, 46, 46, 46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
       48, 48, 48, 48, 48, 49, 49, 49, 49, 49, 49, 50], dtype=np.uint16),
'ASAM.M.SCALAR.UBYTE.VTAB_RANGE_DEFAULT_VALUE': np.array([ 13,  16,  19,  22,  25,  28,  31,  35,  38,  41,  44,  47,  50,
        53,  56,  60,  63,  66,  69,  72,  75,  78,  81,  84,  87,  90,
        94,  97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 127, 130,
       133, 136, 139, 142, 145, 148, 151, 154, 157, 160, 163, 166, 169,
       172, 174, 177, 180, 183, 186, 189, 192, 195, 198, 200, 203, 206,
       209, 212, 214, 217, 220, 223, 226, 228, 231, 234, 237, 239, 242,
       245, 247, 250, 253, 255,   2,   5,   7,  10,  13,  15,  18,  20,
        23,  25,  28,  30,  33,  35,  38,  40,  43,  45,  48,  50,  53,
        55,  57,  60,  62,  65,  67,  69,  71,  74,  76,  78,  81,  83,
        85,  87,  89,  92,  94,  96,  98, 100, 102, 104, 107, 109, 111,
       113, 115, 117, 119, 121, 123, 125, 127, 128, 130, 132, 134, 136,
       138, 140, 141, 143, 145, 147, 149, 150, 152, 154, 155, 157, 159,
       160, 162, 163, 165, 167, 168, 170, 171, 173, 174, 176, 177, 178,
       180, 181, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195,
       196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
       210, 211, 212, 213, 213, 214, 215, 216, 217, 217, 218, 219, 219,
       220, 221, 221, 222, 223, 223, 224, 224, 225, 225, 226, 226, 227,
       227, 228, 228, 228, 229, 229, 229, 230, 230, 230, 230, 231, 231,
       231, 231, 231, 231, 231, 231, 231, 231, 232, 231, 231, 231, 231,
       231, 231, 231, 231, 231, 231, 230, 230, 230, 230, 229, 229, 229,
       228, 228, 228, 227, 227, 226, 226, 225, 225, 224, 224, 223, 223,
       222, 221, 221, 220, 219, 219, 218, 217, 217, 216, 215, 214, 213,
       213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202, 201,
       200, 199, 198, 196, 195, 194, 193, 192, 190, 189, 188, 187, 185,
       184, 183, 181, 180, 178, 177, 176, 174, 173, 171, 170, 168, 167,
       165, 163, 162, 160, 159, 157, 155, 154, 152, 150, 149, 147, 145,
       143, 141, 140, 138, 136, 134, 132, 130, 128, 127, 125, 123, 121,
       119, 117, 115, 113, 111, 109, 107, 104, 102, 100,  98,  96,  94,
        92,  89,  87,  85,  83,  81,  78,  76,  74,  71,  69,  67,  65,
        62,  60,  57,  55,  53,  50,  48,  45,  43,  40,  38,  35,  33,
        30,  28,  25,  23,  20,  18,  15,  13,  10,   7,   5,   2, 255,
       253, 250, 247, 245, 242, 239, 237, 234, 231, 228, 226, 223, 220,
       217, 214, 212, 209, 206, 203, 200, 198, 195, 192, 189, 186, 183,
       180, 177, 174, 172, 169, 166, 163, 160, 157, 154, 151, 148, 145,
       142, 139, 136, 133, 130, 127, 124, 121, 118, 115, 112, 109, 106,
       103, 100,  97,  94,  90,  87,  84,  81,  78,  75,  72,  69,  66,
        63,  60,  56,  53,  50,  47,  44,  41,  38,  35,  31,  28,  25,
        22,  19,  16,  13,   9,   6,   3,   0, 253, 250, 247, 243, 240,
       237, 234, 231, 228, 225, 222, 218, 215, 212, 209, 206, 203, 200,
       196, 193, 190, 187, 184, 181, 178, 175, 171, 168, 165, 162, 159,
       156, 153, 150, 147, 144, 141, 137, 134, 131, 128, 125, 122, 119,
       116, 113, 110, 107, 104, 101,  98,  95,  92,  89,  86,  83,  80,
        77,  74,  71,  68,  65,  62,  59,  57,  54,  51,  48,  45,  42,
        39,  36,  33,  31,  28,  25,  22,  19,  17,  14,  11,   8,   5,
         3,   0, 253, 250, 248, 245, 242, 240, 237, 234, 232, 229, 226,
       224, 221, 218, 216, 213, 211, 208, 206, 203, 201, 198, 196, 193,
       191, 188, 186, 183, 181, 178, 176, 174, 171, 169, 166, 164, 162,
       160, 157, 155, 153, 150, 148, 146, 144, 142, 139, 137, 135, 133,
       131, 129, 127, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106,
       104, 103, 101,  99,  97,  95,  93,  91,  90,  88,  86,  84,  82,
        81,  79,  77,  76,  74,  72,  71,  69,  68,  66,  64,  63,  61,
        60,  58,  57,  55,  54,  53,  51,  50,  48,  47,  46,  44,  43,
        42,  41,  39,  38,  37,  36,  35,  33,  32,  31,  30,  29,  28,
        27,  26,  25,  24,  23,  22,  21,  20,  19,  18,  18,  17,  16,
        15,  14,  14,  13,  12,  12,  11,  10,  10,   9,   8,   8,   7,
         7,   6,   6,   5,   5,   4,   4,   3,   3,   3,   2,   2,   2,
         1,   1,   1,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,
         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,
         1,   1,   1,   2,   2,   2,   3,   3,   3,   4,   4,   5,   5,
         6,   6,   7,   7,   8,   8,   9,  10,  10,  11,  12,  12,  13,
        14,  14,  15,  16,  17,  18,  18,  19,  20,  21,  22,  23,  24,
        25,  26,  27,  28,  29,  30,  31,  32,  33,  35,  36,  37,  38,
        39,  41,  42,  43,  44,  46,  47,  48,  50,  51,  53,  54,  55,
        57,  58,  60,  61,  63,  64,  66,  68,  69,  71,  72,  74,  76,
        77,  79,  81,  82,  84,  86,  88,  90,  91,  93,  95,  97,  99,
       101, 103, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124,
       127, 129, 131, 133, 135, 137, 139, 142, 144, 146, 148, 150, 153,
       155, 157, 160, 162, 164, 166, 169, 171, 174, 176, 178, 181, 183,
       186, 188, 191, 193, 196, 198, 201, 203, 206, 208, 211, 213], dtype=np.uint8),
'ASAM.M.SCALAR.FLOAT32.IDENTICAL': np.array([  8.13845703e+02,   8.16285095e+02,   8.18711975e+02,
         8.21126343e+02,   8.23527954e+02,   8.25916870e+02,
         8.28292908e+02,   8.30655945e+02,   8.33005920e+02,
         8.35342773e+02,   8.37666382e+02,   8.39976685e+02,
         8.42273560e+02,   8.44556885e+02,   8.46826660e+02,
         8.49082703e+02,   8.51325012e+02,   8.53553406e+02,
         8.55767822e+02,   8.57968262e+02,   8.60154541e+02,
         8.62326538e+02,   8.64484314e+02,   8.66627686e+02,
         8.68756531e+02,   8.70870911e+02,   8.72970581e+02,
         8.75055542e+02,   8.77125671e+02,   8.79180969e+02,
         8.81221252e+02,   8.83246521e+02,   8.85256592e+02,
         8.87251526e+02,   8.89231140e+02,   8.91195435e+02,
         8.93144226e+02,   8.95077515e+02,   8.96995178e+02,
         8.98897217e+02,   9.00783508e+02,   9.02653931e+02,
         9.04508484e+02,   9.06347107e+02,   9.08169617e+02,
         9.09976074e+02,   9.11766296e+02,   9.13540283e+02,
         9.15297974e+02,   9.17039246e+02,   9.18764038e+02,
         9.20472290e+02,   9.22163940e+02,   9.23838989e+02,
         9.25497253e+02,   9.27138733e+02,   9.28763306e+02,
         9.30371033e+02,   9.31961731e+02,   9.33535339e+02,
         9.35091858e+02,   9.36631226e+02,   9.38153320e+02,
         9.39658142e+02,   9.41145630e+02,   9.42615662e+02,
         9.44068237e+02,   9.45503235e+02,   9.46920715e+02,
         9.48320496e+02,   9.49702637e+02,   9.51066956e+02,
         9.52413513e+02,   9.53742188e+02,   9.55052979e+02,
         9.56345764e+02,   9.57620605e+02,   9.58877319e+02,
         9.60115906e+02,   9.61336365e+02,   9.62538574e+02,
         9.63722595e+02,   9.64888245e+02,   9.66035583e+02,
         9.67164490e+02,   9.68274963e+02,   9.69366943e+02,
         9.70440369e+02,   9.71495239e+02,   9.72531555e+02,
         9.73549133e+02,   9.74548096e+02,   9.75528259e+02,
         9.76489685e+02,   9.77432251e+02,   9.78356018e+02,
         9.79260864e+02,   9.80146851e+02,   9.81013855e+02,
         9.81861816e+02,   9.82690796e+02,   9.83500732e+02,
         9.84291565e+02,   9.85063293e+02,   9.85815857e+02,
         9.86549255e+02,   9.87263428e+02,   9.87958374e+02,
         9.88634033e+02,   9.89290466e+02,   9.89927551e+02,
         9.90545288e+02,   9.91143616e+02,   9.91722595e+02,
         9.92282166e+02,   9.92822327e+02,   9.93342957e+02,
         9.93844177e+02,   9.94325867e+02,   9.94788086e+02,
         9.95230713e+02,   9.95653809e+02,   9.96057373e+02,
         9.96441284e+02,   9.96805664e+02,   9.97150391e+02,
         9.97475525e+02,   9.97781006e+02,   9.98066833e+02,
         9.98332947e+02,   9.98579468e+02,   9.98806274e+02,
         9.99013367e+02,   9.99200745e+02,   9.99368469e+02,
         9.99516479e+02,   9.99644714e+02,   9.99753296e+02,
         9.99842102e+02,   9.99911194e+02,   9.99960510e+02,
         9.99990112e+02,   1.00000000e+03,   9.99990112e+02,
         9.99960510e+02,   9.99911194e+02,   9.99842102e+02,
         9.99753296e+02,   9.99644714e+02,   9.99516479e+02,
         9.99368469e+02,   9.99200745e+02,   9.99013367e+02,
         9.98806274e+02,   9.98579468e+02,   9.98332947e+02,
         9.98066833e+02,   9.97781006e+02,   9.97475525e+02,
         9.97150391e+02,   9.96805664e+02,   9.96441284e+02,
         9.96057373e+02,   9.95653809e+02,   9.95230713e+02,
         9.94788086e+02,   9.94325867e+02,   9.93844177e+02,
         9.93342957e+02,   9.92822327e+02,   9.92282166e+02,
         9.91722595e+02,   9.91143616e+02,   9.90545288e+02,
         9.89927551e+02,   9.89290466e+02,   9.88634033e+02,
         9.87958374e+02,   9.87263428e+02,   9.86549255e+02,
         9.85815857e+02,   9.85063293e+02,   9.84291565e+02,
         9.83500732e+02,   9.82690796e+02,   9.81861816e+02,
         9.81013855e+02,   9.80146851e+02,   9.79260864e+02,
         9.78356018e+02,   9.77432251e+02,   9.76489685e+02,
         9.75528259e+02,   9.74548096e+02,   9.73549133e+02,
         9.72531555e+02,   9.71495239e+02,   9.70440369e+02,
         9.69366943e+02,   9.68274963e+02,   9.67164490e+02,
         9.66035583e+02,   9.64888245e+02,   9.63722595e+02,
         9.62538574e+02,   9.61336365e+02,   9.60115906e+02,
         9.58877319e+02,   9.57620605e+02,   9.56345764e+02,
         9.55052979e+02,   9.53742188e+02,   9.52413513e+02,
         9.51066956e+02,   9.49702637e+02,   9.48320496e+02,
         9.46920715e+02,   9.45503235e+02,   9.44068237e+02,
         9.42615662e+02,   9.41145630e+02,   9.39658142e+02,
         9.38153320e+02,   9.36631226e+02,   9.35091858e+02,
         9.33535339e+02,   9.31961731e+02,   9.30371033e+02,
         9.28763306e+02,   9.27138733e+02,   9.25497253e+02,
         9.23838989e+02,   9.22163940e+02,   9.20472290e+02,
         9.18764038e+02,   9.17039246e+02,   9.15297974e+02,
         9.13540283e+02,   9.11766296e+02,   9.09976074e+02,
         9.08169617e+02,   9.06347107e+02,   9.04508484e+02,
         9.02653931e+02,   9.00783508e+02,   8.98897217e+02,
         8.96995178e+02,   8.95077515e+02,   8.93144226e+02,
         8.91195435e+02,   8.89231140e+02,   8.87251526e+02,
         8.85256592e+02,   8.83246521e+02,   8.81221252e+02,
         8.79180969e+02,   8.77125671e+02,   8.75055542e+02,
         8.72970581e+02,   8.70870911e+02,   8.68756531e+02,
         8.66627686e+02,   8.64484314e+02,   8.62326538e+02,
         8.60154541e+02,   8.57968262e+02,   8.55767822e+02,
         8.53553406e+02,   8.51325012e+02,   8.49082703e+02,
         8.46826660e+02,   8.44556885e+02,   8.42273560e+02,
         8.39976685e+02,   8.37666382e+02,   8.35342773e+02,
         8.33005920e+02,   8.30655945e+02,   8.28292908e+02,
         8.25916870e+02,   8.23527954e+02,   8.21126343e+02,
         8.18711975e+02,   8.16285095e+02,   8.13845703e+02,
         8.11393860e+02,   8.08929810e+02,   8.06453552e+02,
         8.03965149e+02,   8.01464783e+02,   7.98952515e+02,
         7.96428406e+02,   7.93892639e+02,   7.91345215e+02,
         7.88786377e+02,   7.86216064e+02,   7.83634460e+02,
         7.81041687e+02,   7.78437805e+02,   7.75822937e+02,
         7.73197144e+02,   7.70560608e+02,   7.67913391e+02,
         7.65255615e+02,   7.62587341e+02,   7.59908691e+02,
         7.57219788e+02,   7.54520691e+02,   7.51811584e+02,
         7.49092529e+02,   7.46363647e+02,   7.43625061e+02,
         7.40876831e+02,   7.38119080e+02,   7.35351990e+02,
         7.32575562e+02,   7.29789917e+02,   7.26995239e+02,
         7.24191589e+02,   7.21379089e+02,   7.18557861e+02,
         7.15728027e+02,   7.12889648e+02,   7.10042847e+02,
         7.07187805e+02,   7.04324524e+02,   7.01453247e+02,
         6.98573975e+02,   6.95686829e+02,   6.92791992e+02,
         6.89889526e+02,   6.86979614e+02,   6.84062256e+02,
         6.81137695e+02,   6.78205933e+02,   6.75267151e+02,
         6.72321472e+02,   6.69368958e+02,   6.66409790e+02,
         6.63444031e+02,   6.60471802e+02,   6.57493286e+02,
         6.54508484e+02,   6.51517639e+02,   6.48520813e+02,
         6.45518066e+02,   6.42509644e+02,   6.39495544e+02,
         6.36475952e+02,   6.33450989e+02,   6.30420776e+02,
         6.27385376e+02,   6.24344971e+02,   6.21299622e+02,
         6.18249512e+02,   6.15194702e+02,   6.12135376e+02,
         6.09071594e+02,   6.06003540e+02,   6.02931274e+02,
         5.99854980e+02,   5.96774719e+02,   5.93690674e+02,
         5.90602905e+02,   5.87511536e+02,   5.84416748e+02,
         5.81318604e+02,   5.78217224e+02,   5.75112793e+02,
         5.72005371e+02,   5.68895142e+02,   5.65782166e+02,
         5.62666626e+02,   5.59548584e+02,   5.56428223e+02,
         5.53305603e+02,   5.50180847e+02,   5.47054138e+02,
         5.43925598e+02,   5.40795288e+02,   5.37663391e+02,
         5.34530029e+02,   5.31395264e+02,   5.28259277e+02,
         5.25122131e+02,   5.21984070e+02,   5.18845093e+02,
         5.15705383e+02,   5.12565063e+02,   5.09424225e+02,
         5.06283020e+02,   5.03141571e+02,   5.00000000e+02,
         4.96858429e+02,   4.93716980e+02,   4.90575775e+02,
         4.87434967e+02,   4.84294617e+02,   4.81154907e+02,
         4.78015930e+02,   4.74877838e+02,   4.71740723e+02,
         4.68604736e+02,   4.65470001e+02,   4.62336609e+02,
         4.59204681e+02,   4.56074402e+02,   4.52945831e+02,
         4.49819153e+02,   4.46694427e+02,   4.43571808e+02,
         4.40451416e+02,   4.37333374e+02,   4.34217834e+02,
         4.31104858e+02,   4.27994598e+02,   4.24887207e+02,
         4.21782776e+02,   4.18681427e+02,   4.15583282e+02,
         4.12488464e+02,   4.09397125e+02,   4.06309357e+02,
         4.03225281e+02,   4.00145020e+02,   3.97068695e+02,
         3.93996460e+02,   3.90928375e+02,   3.87864624e+02,
         3.84805298e+02,   3.81750488e+02,   3.78700378e+02,
         3.75655060e+02,   3.72614624e+02,   3.69579254e+02,
         3.66549011e+02,   3.63524017e+02,   3.60504456e+02,
         3.57490356e+02,   3.54481903e+02,   3.51479218e+02,
         3.48482361e+02,   3.45491516e+02,   3.42506744e+02,
         3.39528198e+02,   3.36556000e+02,   3.33590240e+02,
         3.30631042e+02,   3.27678528e+02,   3.24732849e+02,
         3.21794067e+02,   3.18862305e+02,   3.15937714e+02,
         3.13020386e+02,   3.10110443e+02,   3.07208008e+02,
         3.04313171e+02,   3.01426056e+02,   2.98546783e+02,
         2.95675476e+02,   2.92812195e+02,   2.89957123e+02,
         2.87110352e+02,   2.84271973e+02,   2.81442108e+02,
         2.78620880e+02,   2.75808380e+02,   2.73004761e+02,
         2.70210083e+02,   2.67424469e+02,   2.64648041e+02,
         2.61880890e+02,   2.59123169e+02,   2.56374939e+02,
         2.53636322e+02,   2.50907440e+02,   2.48188400e+02,
         2.45479294e+02,   2.42780228e+02,   2.40091324e+02,
         2.37412689e+02,   2.34744415e+02,   2.32086609e+02,
         2.29439377e+02,   2.26802826e+02,   2.24177063e+02,
         2.21562195e+02,   2.18958313e+02,   2.16365524e+02,
         2.13783936e+02,   2.11213654e+02,   2.08654755e+02,
         2.06107376e+02,   2.03571594e+02,   2.01047516e+02,
         1.98535233e+02,   1.96034851e+02,   1.93546478e+02,
         1.91070190e+02,   1.88606110e+02,   1.86154312e+02,
         1.83714920e+02,   1.81288010e+02,   1.78873672e+02,
         1.76472015e+02,   1.74083130e+02,   1.71707123e+02,
         1.69344070e+02,   1.66994064e+02,   1.64657211e+02,
         1.62333603e+02,   1.60023315e+02,   1.57726440e+02,
         1.55443100e+02,   1.53173340e+02,   1.50917297e+02,
         1.48675018e+02,   1.46446609e+02,   1.44232162e+02,
         1.42031754e+02,   1.39845490e+02,   1.37673431e+02,
         1.35515686e+02,   1.33372330e+02,   1.31243439e+02,
         1.29129120e+02,   1.27029427e+02,   1.24944466e+02,
         1.22874313e+02,   1.20819046e+02,   1.18778748e+02,
         1.16753494e+02,   1.14743378e+02,   1.12748466e+02,
         1.10768852e+02,   1.08804596e+02,   1.06855782e+02,
         1.04922493e+02,   1.03004799e+02,   1.01102783e+02,
         9.92165070e+01,   9.73460541e+01,   9.54915009e+01,
         9.36529160e+01,   9.18303757e+01,   9.00239487e+01,
         8.82337036e+01,   8.64597092e+01,   8.47020493e+01,
         8.29607849e+01,   8.12359772e+01,   7.95277100e+01,
         7.78360367e+01,   7.61610336e+01,   7.45027618e+01,
         7.28612823e+01,   7.12366714e+01,   6.96289902e+01,
         6.80382919e+01,   6.64646530e+01,   6.49081192e+01,
         6.33687744e+01,   6.18466606e+01,   6.03418465e+01,
         5.88543854e+01,   5.73843460e+01,   5.59317741e+01,
         5.44967384e+01,   5.30792885e+01,   5.16794815e+01,
         5.02973747e+01,   4.89330215e+01,   4.75864754e+01,
         4.62577858e+01,   4.49470139e+01,   4.36542053e+01,
         4.23794136e+01,   4.11226883e+01,   3.98840752e+01,
         3.86636314e+01,   3.74613953e+01,   3.62774239e+01,
         3.51117554e+01,   3.39644432e+01,   3.28355293e+01,
         3.17250557e+01,   3.06330719e+01,   2.95596161e+01,
         2.85047321e+01,   2.74684620e+01,   2.64508476e+01,
         2.54519272e+01,   2.44717426e+01,   2.35103283e+01,
         2.25677280e+01,   2.16439743e+01,   2.07391052e+01,
         1.98531570e+01,   1.89861641e+01,   1.81381607e+01,
         1.73091812e+01,   1.64992561e+01,   1.57084198e+01,
         1.49367018e+01,   1.41841335e+01,   1.34507446e+01,
         1.27365637e+01,   1.20416193e+01,   1.13659382e+01,
         1.07095480e+01,   1.00724735e+01,   9.45474148e+00,
         8.85637474e+00,   8.27739716e+00,   7.71783257e+00,
         7.17770243e+00,   6.65702772e+00,   6.15582991e+00,
         5.67412758e+00,   5.21194077e+00,   4.76928711e+00,
         4.34618425e+00,   3.94264936e+00,   3.55869770e+00,
         3.19434476e+00,   2.84960485e+00,   2.52449155e+00,
         2.21901774e+00,   1.93319547e+00,   1.66703594e+00,
         1.42054987e+00,   1.19374681e+00,   9.86635804e-01,
         7.99224913e-01,   6.31521702e-01,   4.83532667e-01,
         3.55263680e-01,   2.46719822e-01,   1.57905355e-01,
         8.88238102e-02,   3.94778959e-02,   9.86957178e-03,
         0.00000000e+00,   9.86957271e-03,   3.94778997e-02,
         8.88238102e-02,   1.57905355e-01,   2.46719822e-01,
         3.55263680e-01,   4.83532667e-01,   6.31521702e-01,
         7.99224973e-01,   9.86635804e-01,   1.19374681e+00,
         1.42054987e+00,   1.66703594e+00,   1.93319547e+00,
         2.21901774e+00,   2.52449155e+00,   2.84960485e+00,
         3.19434476e+00,   3.55869770e+00,   3.94264936e+00,
         4.34618425e+00,   4.76928711e+00,   5.21194077e+00,
         5.67412758e+00,   6.15582991e+00,   6.65702772e+00,
         7.17770243e+00,   7.71783257e+00,   8.27739716e+00,
         8.85637474e+00,   9.45474148e+00,   1.00724735e+01,
         1.07095480e+01,   1.13659382e+01,   1.20416193e+01,
         1.27365637e+01,   1.34507446e+01,   1.41841335e+01,
         1.49367018e+01,   1.57084198e+01,   1.64992561e+01,
         1.73091812e+01,   1.81381607e+01,   1.89861641e+01,
         1.98531570e+01,   2.07391052e+01,   2.16439743e+01,
         2.25677280e+01,   2.35103302e+01,   2.44717426e+01,
         2.54519272e+01,   2.64508476e+01,   2.74684620e+01,
         2.85047321e+01,   2.95596161e+01,   3.06330719e+01,
         3.17250576e+01,   3.28355293e+01,   3.39644432e+01,
         3.51117554e+01,   3.62774239e+01,   3.74613953e+01,
         3.86636314e+01,   3.98840752e+01,   4.11226883e+01,
         4.23794136e+01,   4.36542053e+01,   4.49470139e+01,
         4.62577896e+01,   4.75864754e+01,   4.89330215e+01,
         5.02973747e+01,   5.16794815e+01,   5.30792885e+01,
         5.44967384e+01,   5.59317741e+01,   5.73843460e+01,
         5.88543854e+01,   6.03418465e+01,   6.18466606e+01,
         6.33687744e+01,   6.49081192e+01,   6.64646530e+01,
         6.80382919e+01,   6.96289902e+01,   7.12366714e+01,
         7.28612823e+01,   7.45027618e+01,   7.61610336e+01,
         7.78360367e+01,   7.95277100e+01,   8.12359772e+01,
         8.29607849e+01,   8.47020493e+01,   8.64597092e+01,
         8.82337036e+01,   9.00239487e+01,   9.18303757e+01,
         9.36529160e+01,   9.54915009e+01,   9.73460541e+01,
         9.92165070e+01,   1.01102783e+02,   1.03004799e+02,
         1.04922493e+02,   1.06855782e+02,   1.08804596e+02,
         1.10768852e+02,   1.12748466e+02,   1.14743378e+02,
         1.16753494e+02,   1.18778748e+02,   1.20819046e+02,
         1.22874313e+02,   1.24944466e+02,   1.27029427e+02,
         1.29129120e+02,   1.31243439e+02,   1.33372330e+02,
         1.35515686e+02,   1.37673431e+02,   1.39845490e+02,
         1.42031754e+02,   1.44232162e+02,   1.46446609e+02,
         1.48675018e+02,   1.50917297e+02,   1.53173340e+02,
         1.55443100e+02,   1.57726440e+02,   1.60023315e+02,
         1.62333603e+02,   1.64657211e+02,   1.66994064e+02,
         1.69344070e+02,   1.71707123e+02,   1.74083130e+02,
         1.76472015e+02,   1.78873672e+02,   1.81288010e+02,
         1.83714920e+02,   1.86154312e+02,   1.88606110e+02,
         1.91070190e+02,   1.93546478e+02,   1.96034851e+02,
         1.98535233e+02,   2.01047516e+02,   2.03571594e+02,
         2.06107376e+02,   2.08654755e+02,   2.11213654e+02,
         2.13783936e+02,   2.16365524e+02,   2.18958313e+02,
         2.21562195e+02,   2.24177063e+02,   2.26802826e+02,
         2.29439377e+02,   2.32086609e+02,   2.34744415e+02,
         2.37412689e+02,   2.40091324e+02,   2.42780228e+02,
         2.45479294e+02,   2.48188400e+02,   2.50907440e+02,
         2.53636322e+02,   2.56374939e+02,   2.59123169e+02,
         2.61880890e+02,   2.64648041e+02,   2.67424469e+02,
         2.70210083e+02,   2.73004761e+02,   2.75808380e+02,
         2.78620880e+02,   2.81442108e+02,   2.84271973e+02,
         2.87110352e+02,   2.89957123e+02,   2.92812195e+02,
         2.95675476e+02,   2.98546783e+02,   3.01426056e+02,
         3.04313171e+02,   3.07208008e+02,   3.10110443e+02,
         3.13020386e+02,   3.15937714e+02,   3.18862305e+02,
         3.21794067e+02,   3.24732849e+02,   3.27678528e+02,
         3.30631042e+02,   3.33590240e+02,   3.36556000e+02,
         3.39528198e+02,   3.42506744e+02,   3.45491516e+02,
         3.48482361e+02,   3.51479218e+02,   3.54481903e+02,
         3.57490356e+02,   3.60504456e+02,   3.63524017e+02,
         3.66549011e+02,   3.69579254e+02,   3.72614624e+02,
         3.75655060e+02,   3.78700378e+02,   3.81750488e+02,
         3.84805298e+02,   3.87864624e+02,   3.90928375e+02,
         3.93996460e+02,   3.97068695e+02,   4.00145020e+02,
         4.03225281e+02,   4.06309357e+02,   4.09397125e+02,
         4.12488464e+02,   4.15583282e+02,   4.18681427e+02,
         4.21782776e+02,   4.24887207e+02,   4.27994598e+02,
         4.31104858e+02,   4.34217834e+02,   4.37333374e+02,
         4.40451416e+02,   4.43571808e+02,   4.46694427e+02,
         4.49819153e+02,   4.52945831e+02,   4.56074402e+02,
         4.59204681e+02,   4.62336609e+02,   4.65470001e+02,
         4.68604736e+02,   4.71740723e+02,   4.74877838e+02,
         4.78015930e+02,   4.81154907e+02,   4.84294617e+02,
         4.87434967e+02,   4.90575775e+02,   4.93716980e+02,
         4.96858429e+02,   5.00000000e+02,   5.03141571e+02,
         5.06283020e+02,   5.09424225e+02], dtype=np.float32),
'ASAM.M.SCALAR.UWORD.IDENTICAL': np.array([  32,   33,   35,   36,   37,   38,   39,   41,   42,   43,   44,
         46,   47,   48,   50,   51,   53,   54,   55,   57,   58,   60,
         61,   63,   64,   66,   68,   69,   71,   72,   74,   76,   77,
         79,   81,   82,   84,   86,   88,   90,   91,   93,   95,   97,
         99,  101,  103,  104,  106,  108,  110,  112,  114,  116,  118,
        120,  122,  124,  127,  129,  131,  133,  135,  137,  139,  142,
        144,  146,  148,  150,  153,  155,  157,  160,  162,  164,  166,
        169,  171,  174,  176,  178,  181,  183,  186,  188,  191,  193,
        196,  198,  201,  203,  206,  208,  211,  213,  216,  218,  221,
        224,  226,  229,  232,  234,  237,  240,  242,  245,  248,  250,
        253,  256,  259,  261,  264,  267,  270,  273,  275,  278,  281,
        284,  287,  289,  292,  295,  298,  301,  304,  307,  310,  313,
        315,  318,  321,  324,  327,  330,  333,  336,  339,  342,  345,
        348,  351,  354,  357,  360,  363,  366,  369,  372,  375,  378,
        381,  384,  387,  390,  393,  397,  400,  403,  406,  409,  412,
        415,  418,  421,  424,  427,  431,  434,  437,  440,  443,  446,
        449,  452,  456,  459,  462,  465,  468,  471,  474,  478,  481,
        484,  487,  490,  493,  496,  500,  503,  506,  509,  512,  515,
        518,  521,  525,  528,  531,  534,  537,  540,  543,  547,  550,
        553,  556,  559,  562,  565,  568,  572,  575,  578,  581,  584,
        587,  590,  593,  596,  599,  602,  606,  609,  612,  615,  618,
        621,  624,  627,  630,  633,  636,  639,  642,  645,  648,  651,
        654,  657,  660,  663,  666,  669,  672,  675,  678,  681,  684,
        686,  689,  692,  695,  698,  701,  704,  707,  710,  712,  715,
        718,  721,  724,  726,  729,  732,  735,  738,  740,  743,  746,
        749,  751,  754,  757,  759,  762,  765,  767,  770,  773,  775,
        778,  781,  783,  786,  788,  791,  793,  796,  798,  801,  803,
        806,  808,  811,  813,  816,  818,  821,  823,  825,  828,  830,
        833,  835,  837,  839,  842,  844,  846,  849,  851,  853,  855,
        857,  860,  862,  864,  866,  868,  870,  872,  875,  877,  879,
        881,  883,  885,  887,  889,  891,  893,  895,  896,  898,  900,
        902,  904,  906,  908,  909,  911,  913,  915,  917,  918,  920,
        922,  923,  925,  927,  928,  930,  931,  933,  935,  936,  938,
        939,  941,  942,  944,  945,  946,  948,  949,  951,  952,  953,
        955,  956,  957,  958,  960,  961,  962,  963,  964,  966,  967,
        968,  969,  970,  971,  972,  973,  974,  975,  976,  977,  978,
        979,  980,  981,  981,  982,  983,  984,  985,  985,  986,  987,
        987,  988,  989,  989,  990,  991,  991,  992,  992,  993,  993,
        994,  994,  995,  995,  996,  996,  996,  997,  997,  997,  998,
        998,  998,  998,  999,  999,  999,  999,  999,  999,  999,  999,
        999,  999, 1000,  999,  999,  999,  999,  999,  999,  999,  999,
        999,  999,  998,  998,  998,  998,  997,  997,  997,  996,  996,
        996,  995,  995,  994,  994,  993,  993,  992,  992,  991,  991,
        990,  989,  989,  988,  987,  987,  986,  985,  985,  984,  983,
        982,  981,  981,  980,  979,  978,  977,  976,  975,  974,  973,
        972,  971,  970,  969,  968,  967,  966,  964,  963,  962,  961,
        960,  958,  957,  956,  955,  953,  952,  951,  949,  948,  946,
        945,  944,  942,  941,  939,  938,  936,  935,  933,  931,  930,
        928,  927,  925,  923,  922,  920,  918,  917,  915,  913,  911,
        909,  908,  906,  904,  902,  900,  898,  896,  895,  893,  891,
        889,  887,  885,  883,  881,  879,  877,  875,  872,  870,  868,
        866,  864,  862,  860,  857,  855,  853,  851,  849,  846,  844,
        842,  839,  837,  835,  833,  830,  828,  825,  823,  821,  818,
        816,  813,  811,  808,  806,  803,  801,  798,  796,  793,  791,
        788,  786,  783,  781,  778,  775,  773,  770,  767,  765,  762,
        759,  757,  754,  751,  749,  746,  743,  740,  738,  735,  732,
        729,  726,  724,  721,  718,  715,  712,  710,  707,  704,  701,
        698,  695,  692,  689,  686,  684,  681,  678,  675,  672,  669,
        666,  663,  660,  657,  654,  651,  648,  645,  642,  639,  636,
        633,  630,  627,  624,  621,  618,  615,  612,  609,  606,  602,
        599,  596,  593,  590,  587,  584,  581,  578,  575,  572,  568,
        565,  562,  559,  556,  553,  550,  547,  543,  540,  537,  534,
        531,  528,  525,  521,  518,  515,  512,  509,  506,  503,  499,
        496,  493,  490,  487,  484,  481,  478,  474,  471,  468,  465,
        462,  459,  456,  452,  449,  446,  443,  440,  437,  434,  431,
        427,  424,  421,  418,  415,  412,  409,  406,  403,  400,  397,
        393,  390,  387,  384,  381,  378,  375,  372,  369,  366,  363,
        360,  357,  354,  351,  348,  345,  342,  339,  336,  333,  330,
        327,  324,  321,  318,  315,  313,  310,  307,  304,  301,  298,
        295,  292,  289,  287,  284,  281,  278,  275,  273,  270,  267,
        264,  261,  259,  256,  253,  250,  248,  245,  242,  240,  237,
        234,  232,  229,  226,  224,  221,  218,  216,  213,  211,  208,
        206,  203,  201,  198,  196,  193,  191,  188,  186,  183,  181,
        178,  176,  174,  171,  169,  166,  164,  162,  160,  157,  155,
        153,  150,  148,  146,  144,  142,  139,  137,  135,  133,  131,
        129,  127,  124,  122,  120,  118,  116,  114,  112,  110,  108,
        106,  104,  103,  101,   99,   97,   95,   93,   91,   90,   88,
         86,   84,   82,   81,   79,   77,   76,   74,   72,   71,   69,
         68,   66,   64,   63,   61,   60,   58,   57,   55,   54,   53,
         51,   50,   48,   47,   46,   44,   43,   42,   41,   39,   38,
         37,   36,   35,   33,   32,   31,   30,   29,   28,   27,   26,
         25,   24,   23,   22,   21], dtype=np.uint16),
'ASAM.M.SCALAR.UBYTE.TAB_VERB_NO_DEFAULT_VALUE': np.array([ 17,  16,  15,  14,  14,  13,  12,  12,  11,  10,  10,   9,   8,
         8,   7,   7,   6,   6,   5,   5,   4,   4,   3,   3,   3,   2,
         2,   2,   1,   1,   1,   1,   0,   0,   0,   0,   0,   0,   0,
         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
         0,   1,   1,   1,   1,   2,   2,   2,   3,   3,   3,   4,   4,
         5,   5,   6,   6,   7,   7,   8,   8,   9,  10,  10,  11,  12,
        12,  13,  14,  14,  15,  16,  17,  18,  18,  19,  20,  21,  22,
        23,  24,  25,  26,  27,  28,  29,  30,  31,  32,  33,  35,  36,
        37,  38,  39,  41,  42,  43,  44,  46,  47,  48,  50,  51,  53,
        54,  55,  57,  58,  60,  61,  63,  64,  66,  68,  69,  71,  72,
        74,  76,  77,  79,  81,  82,  84,  86,  88,  90,  91,  93,  95,
        97,  99, 101, 103, 104, 106, 108, 110, 112, 114, 116, 118, 120,
       122, 124, 127, 129, 131, 133, 135, 137, 139, 142, 144, 146, 148,
       150, 153, 155, 157, 160, 162, 164, 166, 169, 171, 174, 176, 178,
       181, 183, 186, 188, 191, 193, 196, 198, 201, 203, 206, 208, 211,
       213, 216, 218, 221, 224, 226, 229, 232, 234, 237, 240, 242, 245,
       248, 250, 253,   0,   3,   5,   8,  11,  14,  17,  19,  22,  25,
        28,  31,  33,  36,  39,  42,  45,  48,  51,  54,  57,  59,  62,
        65,  68,  71,  74,  77,  80,  83,  86,  89,  92,  95,  98, 101,
       104, 107, 110, 113, 116, 119, 122, 125, 128, 131, 134, 137, 141,
       144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 175, 178, 181,
       184, 187, 190, 193, 196, 200, 203, 206, 209, 212, 215, 218, 222,
       225, 228, 231, 234, 237, 240, 244, 247, 250, 253,   0,   3,   6,
         9,  13,  16,  19,  22,  25,  28,  31,  35,  38,  41,  44,  47,
        50,  53,  56,  60,  63,  66,  69,  72,  75,  78,  81,  84,  87,
        90,  94,  97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 127,
       130, 133, 136, 139, 142, 145, 148, 151, 154, 157, 160, 163, 166,
       169, 172, 174, 177, 180, 183, 186, 189, 192, 195, 198, 200, 203,
       206, 209, 212, 214, 217, 220, 223, 226, 228, 231, 234, 237, 239,
       242, 245, 247, 250, 253, 255,   2,   5,   7,  10,  13,  15,  18,
        20,  23,  25,  28,  30,  33,  35,  38,  40,  43,  45,  48,  50,
        53,  55,  57,  60,  62,  65,  67,  69,  71,  74,  76,  78,  81,
        83,  85,  87,  89,  92,  94,  96,  98, 100, 102, 104, 107, 109,
       111, 113, 115, 117, 119, 121, 123, 125, 127, 128, 130, 132, 134,
       136, 138, 140, 141, 143, 145, 147, 149, 150, 152, 154, 155, 157,
       159, 160, 162, 163, 165, 167, 168, 170, 171, 173, 174, 176, 177,
       178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194,
       195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
       209, 210, 211, 212, 213, 213, 214, 215, 216, 217, 217, 218, 219,
       219, 220, 221, 221, 222, 223, 223, 224, 224, 225, 225, 226, 226,
       227, 227, 228, 228, 228, 229, 229, 229, 230, 230, 230, 230, 231,
       231, 231, 231, 231, 231, 231, 231, 231, 231, 232, 231, 231, 231,
       231, 231, 231, 231, 231, 231, 231, 230, 230, 230, 230, 229, 229,
       229, 228, 228, 228, 227, 227, 226, 226, 225, 225, 224, 224, 223,
       223, 222, 221, 221, 220, 219, 219, 218, 217, 217, 216, 215, 214,
       213, 213, 212, 211, 210, 209, 208, 207, 206, 205, 204, 203, 202,
       201, 200, 199, 198, 196, 195, 194, 193, 192, 190, 189, 188, 187,
       185, 184, 183, 181, 180, 178, 177, 176, 174, 173, 171, 170, 168,
       167, 165, 163, 162, 160, 159, 157, 155, 154, 152, 150, 149, 147,
       145, 143, 141, 140, 138, 136, 134, 132, 130, 128, 127, 125, 123,
       121, 119, 117, 115, 113, 111, 109, 107, 104, 102, 100,  98,  96,
        94,  92,  89,  87,  85,  83,  81,  78,  76,  74,  71,  69,  67,
        65,  62,  60,  57,  55,  53,  50,  48,  45,  43,  40,  38,  35,
        33,  30,  28,  25,  23,  20,  18,  15,  13,  10,   7,   5,   2,
       255, 253, 250, 247, 245, 242, 239, 237, 234, 231, 228, 226, 223,
       220, 217, 214, 212, 209, 206, 203, 200, 198, 195, 192, 189, 186,
       183, 180, 177, 174, 172, 169, 166, 163, 160, 157, 154, 151, 148,
       145, 142, 139, 136, 133, 130, 127, 124, 121, 118, 115, 112, 109,
       106, 103, 100,  97,  94,  90,  87,  84,  81,  78,  75,  72,  69,
        66,  63,  60,  56,  53,  50,  47,  44,  41,  38,  35,  31,  28,
        25,  22,  19,  16,  13,   9,   6,   3,   0, 253, 250, 247, 243,
       240, 237, 234, 231, 228, 225, 222, 218, 215, 212, 209, 206, 203,
       200, 196, 193, 190, 187, 184, 181, 178, 175, 171, 168, 165, 162,
       159, 156, 153, 150, 147, 144, 141, 137, 134, 131, 128, 125, 122,
       119, 116, 113, 110, 107, 104, 101,  98,  95,  92,  89,  86,  83,
        80,  77,  74,  71,  68,  65,  62,  59,  57,  54,  51,  48,  45,
        42,  39,  36,  33,  31,  28,  25,  22,  19,  17,  14,  11,   8,
         5,   3,   0, 253, 250, 248, 245, 242, 240, 237, 234, 232, 229,
       226, 224, 221, 218, 216, 213, 211, 208, 206, 203, 201, 198], dtype=np.uint8),
'ASAM.M.SCALAR.UBYTE.TAB_NOINTP_NO_DEFAULT_VALUE': np.array([ 105.        ,  102.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  109.        ,  106.        ,  103.        ,
        100.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  110.33333588,  108.        ,  105.        ,
        103.        ,  100.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  110.66666412,  110.66666412,
        110.33333588,  110.        ,  110.        ,  109.        ,
        108.        ,  108.        ,  107.        ,  107.        ,
        106.        ,  106.        ,  105.        ,  105.        ,
        104.        ,  104.        ,  103.        ,  103.        ,
        103.        ,  102.        ,  102.        ,  102.        ,
        101.        ,  101.        ,  101.        ,  101.        ,
        100.        ,  100.        ,  100.        ,  100.        ,
        100.        ,  100.        ,  100.        ,  100.        ,
        100.        ,  100.        ,  100.        ,  100.        ,
        100.        ,  100.        ,  100.        ,  100.        ,
        100.        ,  100.        ,  100.        ,  100.        ,
        100.        ,  101.        ,  101.        ,  101.        ,
        101.        ,  102.        ,  102.        ,  102.        ,
        103.        ,  103.        ,  103.        ,  104.        ,
        104.        ,  105.        ,  105.        ,  106.        ,
        106.        ,  107.        ,  107.        ,  108.        ,
        108.        ,  109.        ,  110.        ,  110.        ,
        110.33333588,  110.66666412,  110.66666412,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  100.        ,
        103.        ,  105.        ,  108.        ,  110.33333588,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        100.        ,  103.        ,  106.        ,  109.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  102.        ,
        105.        ,  107.        ,  110.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ,
        111.        ,  111.        ,  111.        ,  111.        ], dtype=np.float32),
'ASAM.M.SCALAR.UBYTE.TAB_VERB_DEFAULT_VALUE': np.array([218, 215, 212, 209, 206, 203, 200, 196, 193, 190, 187, 184, 181,
       178, 175, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141,
       137, 134, 131, 128, 125, 122, 119, 116, 113, 110, 107, 104, 101,
        98,  95,  92,  89,  86,  83,  80,  77,  74,  71,  68,  65,  62,
        59,  57,  54,  51,  48,  45,  42,  39,  36,  33,  31,  28,  25,
        22,  19,  17,  14,  11,   8,   5,   3,   0, 253, 250, 248, 245,
       242, 240, 237, 234, 232, 229, 226, 224, 221, 218, 216, 213, 211,
       208, 206, 203, 201, 198, 196, 193, 191, 188, 186, 183, 181, 178,
       176, 174, 171, 169, 166, 164, 162, 160, 157, 155, 153, 150, 148,
       146, 144, 142, 139, 137, 135, 133, 131, 129, 127, 124, 122, 120,
       118, 116, 114, 112, 110, 108, 106, 104, 103, 101,  99,  97,  95,
        93,  91,  90,  88,  86,  84,  82,  81,  79,  77,  76,  74,  72,
        71,  69,  68,  66,  64,  63,  61,  60,  58,  57,  55,  54,  53,
        51,  50,  48,  47,  46,  44,  43,  42,  41,  39,  38,  37,  36,
        35,  33,  32,  31,  30,  29,  28,  27,  26,  25,  24,  23,  22,
        21,  20,  19,  18,  18,  17,  16,  15,  14,  14,  13,  12,  12,
        11,  10,  10,   9,   8,   8,   7,   7,   6,   6,   5,   5,   4,
         4,   3,   3,   3,   2,   2,   2,   1,   1,   1,   1,   0,   0,
         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
         0,   0,   0,   0,   0,   0,   1,   1,   1,   1,   2,   2,   2,
         3,   3,   3,   4,   4,   5,   5,   6,   6,   7,   7,   8,   8,
         9,  10,  10,  11,  12,  12,  13,  14,  14,  15,  16,  17,  18,
        18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,
        31,  32,  33,  35,  36,  37,  38,  39,  41,  42,  43,  44,  46,
        47,  48,  50,  51,  53,  54,  55,  57,  58,  60,  61,  63,  64,
        66,  68,  69,  71,  72,  74,  76,  77,  79,  81,  82,  84,  86,
        88,  90,  91,  93,  95,  97,  99, 101, 103, 104, 106, 108, 110,
       112, 114, 116, 118, 120, 122, 124, 127, 129, 131, 133, 135, 137,
       139, 142, 144, 146, 148, 150, 153, 155, 157, 160, 162, 164, 166,
       169, 171, 174, 176, 178, 181, 183, 186, 188, 191, 193, 196, 198,
       201, 203, 206, 208, 211, 213, 216, 218, 221, 224, 226, 229, 232,
       234, 237, 240, 242, 245, 248, 250, 253,   0,   3,   5,   8,  11,
        14,  17,  19,  22,  25,  28,  31,  33,  36,  39,  42,  45,  48,
        51,  54,  57,  59,  62,  65,  68,  71,  74,  77,  80,  83,  86,
        89,  92,  95,  98, 101, 104, 107, 110, 113, 116, 119, 122, 125,
       128, 131, 134, 137, 141, 144, 147, 150, 153, 156, 159, 162, 165,
       168, 171, 175, 178, 181, 184, 187, 190, 193, 196, 200, 203, 206,
       209, 212, 215, 218, 222, 225, 228, 231, 234, 237, 240, 244, 247,
       250, 253,   0,   3,   6,   9,  13,  16,  19,  22,  25,  28,  31,
        35,  38,  41,  44,  47,  50,  53,  56,  60,  63,  66,  69,  72,
        75,  78,  81,  84,  87,  90,  94,  97, 100, 103, 106, 109, 112,
       115, 118, 121, 124, 127, 130, 133, 136, 139, 142, 145, 148, 151,
       154, 157, 160, 163, 166, 169, 172, 174, 177, 180, 183, 186, 189,
       192, 195, 198, 200, 203, 206, 209, 212, 214, 217, 220, 223, 226,
       228, 231, 234, 237, 239, 242, 245, 247, 250, 253, 255,   2,   5,
         7,  10,  13,  15,  18,  20,  23,  25,  28,  30,  33,  35,  38,
        40,  43,  45,  48,  50,  53,  55,  57,  60,  62,  65,  67,  69,
        71,  74,  76,  78,  81,  83,  85,  87,  89,  92,  94,  96,  98,
       100, 102, 104, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125,
       127, 128, 130, 132, 134, 136, 138, 140, 141, 143, 145, 147, 149,
       150, 152, 154, 155, 157, 159, 160, 162, 163, 165, 167, 168, 170,
       171, 173, 174, 176, 177, 178, 180, 181, 183, 184, 185, 187, 188,
       189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203,
       204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 213, 214, 215,
       216, 217, 217, 218, 219, 219, 220, 221, 221, 222, 223, 223, 224,
       224, 225, 225, 226, 226, 227, 227, 228, 228, 228, 229, 229, 229,
       230, 230, 230, 230, 231, 231, 231, 231, 231, 231, 231, 231, 231,
       231, 232, 231, 231, 231, 231, 231, 231, 231, 231, 231, 231, 230,
       230, 230, 230, 229, 229, 229, 228, 228, 228, 227, 227, 226, 226,
       225, 225, 224, 224, 223, 223, 222, 221, 221, 220, 219, 219, 218,
       217, 217, 216, 215, 214, 213, 213, 212, 211, 210, 209, 208, 207,
       206, 205, 204, 203, 202, 201, 200, 199, 198, 196, 195, 194, 193,
       192, 190, 189, 188, 187, 185, 184, 183, 181, 180, 178, 177, 176,
       174, 173, 171, 170, 168, 167, 165, 163, 162, 160, 159, 157, 155,
       154, 152, 150, 149, 147, 145, 143, 141, 140, 138, 136, 134, 132,
       130, 128, 127, 125, 123, 121, 119, 117, 115, 113, 111, 109, 107,
       104, 102, 100,  98,  96,  94,  92,  89,  87,  85,  83,  81,  78,
        76,  74,  71,  69,  67,  65,  62,  60,  57,  55,  53,  50,  48,
        45,  43,  40,  38,  35,  33,  30,  28,  25,  23,  20,  18], dtype=np.uint8),
'ASAM.M.SCALAR.ULONG.IDENTICAL': np.array([ 186,  183,  181,  178,  176,  174,  171,  169,  166,  164,  162,
        160,  157,  155,  153,  150,  148,  146,  144,  142,  139,  137,
        135,  133,  131,  129,  127,  124,  122,  120,  118,  116,  114,
        112,  110,  108,  106,  104,  103,  101,   99,   97,   95,   93,
         91,   90,   88,   86,   84,   82,   81,   79,   77,   76,   74,
         72,   71,   69,   68,   66,   64,   63,   61,   60,   58,   57,
         55,   54,   53,   51,   50,   48,   47,   46,   44,   43,   42,
         41,   39,   38,   37,   36,   35,   33,   32,   31,   30,   29,
         28,   27,   26,   25,   24,   23,   22,   21,   20,   19,   18,
         18,   17,   16,   15,   14,   14,   13,   12,   12,   11,   10,
         10,    9,    8,    8,    7,    7,    6,    6,    5,    5,    4,
          4,    3,    3,    3,    2,    2,    2,    1,    1,    1,    1,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
          0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    1,
          1,    1,    1,    2,    2,    2,    3,    3,    3,    4,    4,
          5,    5,    6,    6,    7,    7,    8,    8,    9,   10,   10,
         11,   12,   12,   13,   14,   14,   15,   16,   17,   18,   18,
         19,   20,   21,   22,   23,   24,   25,   26,   27,   28,   29,
         30,   31,   32,   33,   35,   36,   37,   38,   39,   41,   42,
         43,   44,   46,   47,   48,   50,   51,   53,   54,   55,   57,
         58,   60,   61,   63,   64,   66,   68,   69,   71,   72,   74,
         76,   77,   79,   81,   82,   84,   86,   88,   90,   91,   93,
         95,   97,   99,  101,  103,  104,  106,  108,  110,  112,  114,
        116,  118,  120,  122,  124,  127,  129,  131,  133,  135,  137,
        139,  142,  144,  146,  148,  150,  153,  155,  157,  160,  162,
        164,  166,  169,  171,  174,  176,  178,  181,  183,  186,  188,
        191,  193,  196,  198,  201,  203,  206,  208,  211,  213,  216,
        218,  221,  224,  226,  229,  232,  234,  237,  240,  242,  245,
        248,  250,  253,  256,  259,  261,  264,  267,  270,  273,  275,
        278,  281,  284,  287,  289,  292,  295,  298,  301,  304,  307,
        310,  313,  315,  318,  321,  324,  327,  330,  333,  336,  339,
        342,  345,  348,  351,  354,  357,  360,  363,  366,  369,  372,
        375,  378,  381,  384,  387,  390,  393,  397,  400,  403,  406,
        409,  412,  415,  418,  421,  424,  427,  431,  434,  437,  440,
        443,  446,  449,  452,  456,  459,  462,  465,  468,  471,  474,
        478,  481,  484,  487,  490,  493,  496,  500,  503,  506,  509,
        512,  515,  518,  521,  525,  528,  531,  534,  537,  540,  543,
        547,  550,  553,  556,  559,  562,  565,  568,  572,  575,  578,
        581,  584,  587,  590,  593,  596,  599,  602,  606,  609,  612,
        615,  618,  621,  624,  627,  630,  633,  636,  639,  642,  645,
        648,  651,  654,  657,  660,  663,  666,  669,  672,  675,  678,
        681,  684,  686,  689,  692,  695,  698,  701,  704,  707,  710,
        712,  715,  718,  721,  724,  726,  729,  732,  735,  738,  740,
        743,  746,  749,  751,  754,  757,  759,  762,  765,  767,  770,
        773,  775,  778,  781,  783,  786,  788,  791,  793,  796,  798,
        801,  803,  806,  808,  811,  813,  816,  818,  821,  823,  825,
        828,  830,  833,  835,  837,  839,  842,  844,  846,  849,  851,
        853,  855,  857,  860,  862,  864,  866,  868,  870,  872,  875,
        877,  879,  881,  883,  885,  887,  889,  891,  893,  895,  896,
        898,  900,  902,  904,  906,  908,  909,  911,  913,  915,  917,
        918,  920,  922,  923,  925,  927,  928,  930,  931,  933,  935,
        936,  938,  939,  941,  942,  944,  945,  946,  948,  949,  951,
        952,  953,  955,  956,  957,  958,  960,  961,  962,  963,  964,
        966,  967,  968,  969,  970,  971,  972,  973,  974,  975,  976,
        977,  978,  979,  980,  981,  981,  982,  983,  984,  985,  985,
        986,  987,  987,  988,  989,  989,  990,  991,  991,  992,  992,
        993,  993,  994,  994,  995,  995,  996,  996,  996,  997,  997,
        997,  998,  998,  998,  998,  999,  999,  999,  999,  999,  999,
        999,  999,  999,  999, 1000,  999,  999,  999,  999,  999,  999,
        999,  999,  999,  999,  998,  998,  998,  998,  997,  997,  997,
        996,  996,  996,  995,  995,  994,  994,  993,  993,  992,  992,
        991,  991,  990,  989,  989,  988,  987,  987,  986,  985,  985,
        984,  983,  982,  981,  981,  980,  979,  978,  977,  976,  975,
        974,  973,  972,  971,  970,  969,  968,  967,  966,  964,  963,
        962,  961,  960,  958,  957,  956,  955,  953,  952,  951,  949,
        948,  946,  945,  944,  942,  941,  939,  938,  936,  935,  933,
        931,  930,  928,  927,  925,  923,  922,  920,  918,  917,  915,
        913,  911,  909,  908,  906,  904,  902,  900,  898,  896,  895,
        893,  891,  889,  887,  885,  883,  881,  879,  877,  875,  872,
        870,  868,  866,  864,  862,  860,  857,  855,  853,  851,  849,
        846,  844,  842,  839,  837,  835,  833,  830,  828,  825,  823,
        821,  818,  816,  813,  811,  808,  806,  803,  801,  798,  796,
        793,  791,  788,  786,  783,  781,  778,  775,  773,  770,  767,
        765,  762,  759,  757,  754,  751,  749,  746,  743,  740,  738,
        735,  732,  729,  726,  724,  721,  718,  715,  712,  710,  707,
        704,  701,  698,  695,  692,  689,  686,  684,  681,  678,  675,
        672,  669,  666,  663,  660,  657,  654,  651,  648,  645,  642,
        639,  636,  633,  630,  627,  624,  621,  618,  615,  612,  609,
        606,  602,  599,  596,  593,  590,  587,  584,  581,  578,  575,
        572,  568,  565,  562,  559,  556,  553,  550,  547,  543,  540,
        537,  534,  531,  528,  525,  521,  518,  515,  512,  509,  506,
        503,  499,  496,  493,  490], dtype=np.uint32),
'ASAM.M.SCALAR.UBYTE.VTAB_RANGE_NO_DEFAULT_VALUE': np.array([199, 198, 196, 195, 194, 193, 192, 190, 189, 188, 187, 185, 184,
       183, 181, 180, 178, 177, 176, 174, 173, 171, 170, 168, 167, 165,
       163, 162, 160, 159, 157, 155, 154, 152, 150, 149, 147, 145, 143,
       141, 140, 138, 136, 134, 132, 130, 128, 127, 125, 123, 121, 119,
       117, 115, 113, 111, 109, 107, 104, 102, 100,  98,  96,  94,  92,
        89,  87,  85,  83,  81,  78,  76,  74,  71,  69,  67,  65,  62,
        60,  57,  55,  53,  50,  48,  45,  43,  40,  38,  35,  33,  30,
        28,  25,  23,  20,  18,  15,  13,  10,   7,   5,   2, 255, 253,
       250, 247, 245, 242, 239, 237, 234, 231, 228, 226, 223, 220, 217,
       214, 212, 209, 206, 203, 200, 198, 195, 192, 189, 186, 183, 180,
       177, 174, 172, 169, 166, 163, 160, 157, 154, 151, 148, 145, 142,
       139, 136, 133, 130, 127, 124, 121, 118, 115, 112, 109, 106, 103,
       100,  97,  94,  90,  87,  84,  81,  78,  75,  72,  69,  66,  63,
        60,  56,  53,  50,  47,  44,  41,  38,  35,  31,  28,  25,  22,
        19,  16,  13,   9,   6,   3,   0, 253, 250, 247, 243, 240, 237,
       234, 231, 228, 225, 222, 218, 215, 212, 209, 206, 203, 200, 196,
       193, 190, 187, 184, 181, 178, 175, 171, 168, 165, 162, 159, 156,
       153, 150, 147, 144, 141, 137, 134, 131, 128, 125, 122, 119, 116,
       113, 110, 107, 104, 101,  98,  95,  92,  89,  86,  83,  80,  77,
        74,  71,  68,  65,  62,  59,  57,  54,  51,  48,  45,  42,  39,
        36,  33,  31,  28,  25,  22,  19,  17,  14,  11,   8,   5,   3,
         0, 253, 250, 248, 245, 242, 240, 237, 234, 232, 229, 226, 224,
       221, 218, 216, 213, 211, 208, 206, 203, 201, 198, 196, 193, 191,
       188, 186, 183, 181, 178, 176, 174, 171, 169, 166, 164, 162, 160,
       157, 155, 153, 150, 148, 146, 144, 142, 139, 137, 135, 133, 131,
       129, 127, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104,
       103, 101,  99,  97,  95,  93,  91,  90,  88,  86,  84,  82,  81,
        79,  77,  76,  74,  72,  71,  69,  68,  66,  64,  63,  61,  60,
        58,  57,  55,  54,  53,  51,  50,  48,  47,  46,  44,  43,  42,
        41,  39,  38,  37,  36,  35,  33,  32,  31,  30,  29,  28,  27,
        26,  25,  24,  23,  22,  21,  20,  19,  18,  18,  17,  16,  15,
        14,  14,  13,  12,  12,  11,  10,  10,   9,   8,   8,   7,   7,
         6,   6,   5,   5,   4,   4,   3,   3,   3,   2,   2,   2,   1,
         1,   1,   1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   1,
         1,   1,   2,   2,   2,   3,   3,   3,   4,   4,   5,   5,   6,
         6,   7,   7,   8,   8,   9,  10,  10,  11,  12,  12,  13,  14,
        14,  15,  16,  17,  18,  18,  19,  20,  21,  22,  23,  24,  25,
        26,  27,  28,  29,  30,  31,  32,  33,  35,  36,  37,  38,  39,
        41,  42,  43,  44,  46,  47,  48,  50,  51,  53,  54,  55,  57,
        58,  60,  61,  63,  64,  66,  68,  69,  71,  72,  74,  76,  77,
        79,  81,  82,  84,  86,  88,  90,  91,  93,  95,  97,  99, 101,
       103, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 127,
       129, 131, 133, 135, 137, 139, 142, 144, 146, 148, 150, 153, 155,
       157, 160, 162, 164, 166, 169, 171, 174, 176, 178, 181, 183, 186,
       188, 191, 193, 196, 198, 201, 203, 206, 208, 211, 213, 216, 218,
       221, 224, 226, 229, 232, 234, 237, 240, 242, 245, 248, 250, 253,
         0,   3,   5,   8,  11,  14,  17,  19,  22,  25,  28,  31,  33,
        36,  39,  42,  45,  48,  51,  54,  57,  59,  62,  65,  68,  71,
        74,  77,  80,  83,  86,  89,  92,  95,  98, 101, 104, 107, 110,
       113, 116, 119, 122, 125, 128, 131, 134, 137, 141, 144, 147, 150,
       153, 156, 159, 162, 165, 168, 171, 175, 178, 181, 184, 187, 190,
       193, 196, 200, 203, 206, 209, 212, 215, 218, 222, 225, 228, 231,
       234, 237, 240, 244, 247, 250, 253,   0,   3,   6,   9,  13,  16,
        19,  22,  25,  28,  31,  35,  38,  41,  44,  47,  50,  53,  56,
        60,  63,  66,  69,  72,  75,  78,  81,  84,  87,  90,  94,  97,
       100, 103, 106, 109, 112, 115, 118, 121, 124, 127, 130, 133, 136,
       139, 142, 145, 148, 151, 154, 157, 160, 163, 166, 169, 172, 174,
       177, 180, 183, 186, 189, 192, 195, 198, 200, 203, 206, 209, 212,
       214, 217, 220, 223, 226, 228, 231, 234, 237, 239, 242, 245, 247,
       250, 253, 255,   2,   5,   7,  10,  13,  15,  18,  20,  23,  25,
        28,  30,  33,  35,  38,  40,  43,  45,  48,  50,  53,  55,  57,
        60,  62,  65,  67,  69,  71,  74,  76,  78,  81,  83,  85,  87,
        89,  92,  94,  96,  98, 100, 102, 104, 107, 109, 111, 113, 115,
       117, 119, 121, 123, 125, 127, 128, 130, 132, 134, 136, 138, 140,
       141, 143, 145, 147, 149, 150, 152, 154, 155, 157, 159, 160, 162,
       163, 165, 167, 168, 170, 171, 173, 174, 176, 177, 178, 180, 181,
       183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198,
       199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], dtype=np.uint8),
'ASAM.M.SCALAR.FLOAT64.IDENTICAL': np.array([  1.73091812e+01,   1.64992561e+01,   1.57084198e+01,
         1.49367018e+01,   1.41841335e+01,   1.34507446e+01,
         1.27365637e+01,   1.20416193e+01,   1.13659382e+01,
         1.07095480e+01,   1.00724735e+01,   9.45474148e+00,
         8.85637474e+00,   8.27739716e+00,   7.71783257e+00,
         7.17770243e+00,   6.65702772e+00,   6.15582991e+00,
         5.67412758e+00,   5.21194077e+00,   4.76928711e+00,
         4.34618425e+00,   3.94264936e+00,   3.55869770e+00,
         3.19434476e+00,   2.84960485e+00,   2.52449155e+00,
         2.21901774e+00,   1.93319547e+00,   1.66703594e+00,
         1.42054987e+00,   1.19374681e+00,   9.86635804e-01,
         7.99224973e-01,   6.31521702e-01,   4.83532667e-01,
         3.55263680e-01,   2.46719822e-01,   1.57905355e-01,
         8.88238102e-02,   3.94778997e-02,   9.86957178e-03,
         0.00000000e+00,   9.86957178e-03,   3.94778959e-02,
         8.88238102e-02,   1.57905355e-01,   2.46719822e-01,
         3.55263680e-01,   4.83532667e-01,   6.31521702e-01,
         7.99224973e-01,   9.86635804e-01,   1.19374681e+00,
         1.42054987e+00,   1.66703594e+00,   1.93319547e+00,
         2.21901774e+00,   2.52449155e+00,   2.84960485e+00,
         3.19434476e+00,   3.55869770e+00,   3.94264936e+00,
         4.34618425e+00,   4.76928711e+00,   5.21194077e+00,
         5.67412758e+00,   6.15582991e+00,   6.65702772e+00,
         7.17770243e+00,   7.71783257e+00,   8.27739716e+00,
         8.85637474e+00,   9.45474148e+00,   1.00724735e+01,
         1.07095480e+01,   1.13659382e+01,   1.20416193e+01,
         1.27365637e+01,   1.34507446e+01,   1.41841335e+01,
         1.49367018e+01,   1.57084198e+01,   1.64992561e+01,
         1.73091812e+01,   1.81381607e+01,   1.89861641e+01,
         1.98531570e+01,   2.07391052e+01,   2.16439743e+01,
         2.25677280e+01,   2.35103283e+01,   2.44717426e+01,
         2.54519272e+01,   2.64508476e+01,   2.74684620e+01,
         2.85047321e+01,   2.95596161e+01,   3.06330719e+01,
         3.17250557e+01,   3.28355293e+01,   3.39644432e+01,
         3.51117554e+01,   3.62774239e+01,   3.74613953e+01,
         3.86636314e+01,   3.98840752e+01,   4.11226883e+01,
         4.23794136e+01,   4.36542053e+01,   4.49470139e+01,
         4.62577896e+01,   4.75864754e+01,   4.89330215e+01,
         5.02973747e+01,   5.16794815e+01,   5.30792885e+01,
         5.44967384e+01,   5.59317741e+01,   5.73843460e+01,
         5.88543854e+01,   6.03418465e+01,   6.18466606e+01,
         6.33687744e+01,   6.49081192e+01,   6.64646530e+01,
         6.80382919e+01,   6.96289902e+01,   7.12366714e+01,
         7.28612823e+01,   7.45027618e+01,   7.61610336e+01,
         7.78360367e+01,   7.95277100e+01,   8.12359772e+01,
         8.29607849e+01,   8.47020493e+01,   8.64597092e+01,
         8.82337036e+01,   9.00239487e+01,   9.18303757e+01,
         9.36529160e+01,   9.54915009e+01,   9.73460541e+01,
         9.92165070e+01,   1.01102783e+02,   1.03004799e+02,
         1.04922493e+02,   1.06855782e+02,   1.08804596e+02,
         1.10768852e+02,   1.12748466e+02,   1.14743378e+02,
         1.16753494e+02,   1.18778748e+02,   1.20819046e+02,
         1.22874313e+02,   1.24944466e+02,   1.27029427e+02,
         1.29129120e+02,   1.31243439e+02,   1.33372330e+02,
         1.35515686e+02,   1.37673431e+02,   1.39845490e+02,
         1.42031754e+02,   1.44232162e+02,   1.46446609e+02,
         1.48675018e+02,   1.50917297e+02,   1.53173340e+02,
         1.55443100e+02,   1.57726440e+02,   1.60023315e+02,
         1.62333603e+02,   1.64657211e+02,   1.66994064e+02,
         1.69344070e+02,   1.71707123e+02,   1.74083130e+02,
         1.76472015e+02,   1.78873672e+02,   1.81288010e+02,
         1.83714920e+02,   1.86154312e+02,   1.88606110e+02,
         1.91070190e+02,   1.93546478e+02,   1.96034851e+02,
         1.98535233e+02,   2.01047516e+02,   2.03571594e+02,
         2.06107376e+02,   2.08654755e+02,   2.11213654e+02,
         2.13783936e+02,   2.16365524e+02,   2.18958313e+02,
         2.21562195e+02,   2.24177063e+02,   2.26802826e+02,
         2.29439377e+02,   2.32086609e+02,   2.34744415e+02,
         2.37412689e+02,   2.40091324e+02,   2.42780228e+02,
         2.45479294e+02,   2.48188400e+02,   2.50907440e+02,
         2.53636322e+02,   2.56374939e+02,   2.59123169e+02,
         2.61880890e+02,   2.64648041e+02,   2.67424469e+02,
         2.70210083e+02,   2.73004761e+02,   2.75808380e+02,
         2.78620880e+02,   2.81442108e+02,   2.84271973e+02,
         2.87110352e+02,   2.89957123e+02,   2.92812195e+02,
         2.95675476e+02,   2.98546783e+02,   3.01426056e+02,
         3.04313171e+02,   3.07208008e+02,   3.10110443e+02,
         3.13020386e+02,   3.15937714e+02,   3.18862305e+02,
         3.21794067e+02,   3.24732849e+02,   3.27678528e+02,
         3.30631042e+02,   3.33590240e+02,   3.36556000e+02,
         3.39528198e+02,   3.42506744e+02,   3.45491516e+02,
         3.48482361e+02,   3.51479218e+02,   3.54481903e+02,
         3.57490356e+02,   3.60504456e+02,   3.63524017e+02,
         3.66549011e+02,   3.69579254e+02,   3.72614624e+02,
         3.75655060e+02,   3.78700378e+02,   3.81750488e+02,
         3.84805298e+02,   3.87864624e+02,   3.90928375e+02,
         3.93996460e+02,   3.97068695e+02,   4.00145020e+02,
         4.03225281e+02,   4.06309357e+02,   4.09397125e+02,
         4.12488464e+02,   4.15583282e+02,   4.18681427e+02,
         4.21782776e+02,   4.24887207e+02,   4.27994598e+02,
         4.31104858e+02,   4.34217834e+02,   4.37333374e+02,
         4.40451416e+02,   4.43571808e+02,   4.46694427e+02,
         4.49819153e+02,   4.52945831e+02,   4.56074402e+02,
         4.59204681e+02,   4.62336609e+02,   4.65470001e+02,
         4.68604736e+02,   4.71740723e+02,   4.74877838e+02,
         4.78015930e+02,   4.81154907e+02,   4.84294617e+02,
         4.87434967e+02,   4.90575775e+02,   4.93716980e+02,
         4.96858429e+02,   5.00000000e+02,   5.03141571e+02,
         5.06283020e+02,   5.09424225e+02,   5.12565063e+02,
         5.15705383e+02,   5.18845093e+02,   5.21984070e+02,
         5.25122131e+02,   5.28259277e+02,   5.31395264e+02,
         5.34530029e+02,   5.37663391e+02,   5.40795288e+02,
         5.43925598e+02,   5.47054138e+02,   5.50180847e+02,
         5.53305603e+02,   5.56428223e+02,   5.59548584e+02,
         5.62666626e+02,   5.65782166e+02,   5.68895142e+02,
         5.72005371e+02,   5.75112793e+02,   5.78217224e+02,
         5.81318604e+02,   5.84416748e+02,   5.87511536e+02,
         5.90602905e+02,   5.93690674e+02,   5.96774719e+02,
         5.99854980e+02,   6.02931274e+02,   6.06003540e+02,
         6.09071594e+02,   6.12135376e+02,   6.15194702e+02,
         6.18249512e+02,   6.21299622e+02,   6.24344971e+02,
         6.27385376e+02,   6.30420776e+02,   6.33450989e+02,
         6.36475952e+02,   6.39495544e+02,   6.42509644e+02,
         6.45518066e+02,   6.48520813e+02,   6.51517639e+02,
         6.54508484e+02,   6.57493286e+02,   6.60471802e+02,
         6.63444031e+02,   6.66409790e+02,   6.69368958e+02,
         6.72321472e+02,   6.75267151e+02,   6.78205933e+02,
         6.81137695e+02,   6.84062256e+02,   6.86979614e+02,
         6.89889526e+02,   6.92791992e+02,   6.95686829e+02,
         6.98573975e+02,   7.01453247e+02,   7.04324524e+02,
         7.07187805e+02,   7.10042847e+02,   7.12889648e+02,
         7.15728027e+02,   7.18557861e+02,   7.21379089e+02,
         7.24191589e+02,   7.26995239e+02,   7.29789917e+02,
         7.32575562e+02,   7.35351990e+02,   7.38119080e+02,
         7.40876831e+02,   7.43625061e+02,   7.46363647e+02,
         7.49092529e+02,   7.51811584e+02,   7.54520691e+02,
         7.57219788e+02,   7.59908691e+02,   7.62587341e+02,
         7.65255615e+02,   7.67913391e+02,   7.70560608e+02,
         7.73197144e+02,   7.75822937e+02,   7.78437805e+02,
         7.81041687e+02,   7.83634460e+02,   7.86216064e+02,
         7.88786377e+02,   7.91345215e+02,   7.93892639e+02,
         7.96428406e+02,   7.98952515e+02,   8.01464783e+02,
         8.03965149e+02,   8.06453552e+02,   8.08929810e+02,
         8.11393860e+02,   8.13845703e+02,   8.16285095e+02,
         8.18711975e+02,   8.21126343e+02,   8.23527954e+02,
         8.25916870e+02,   8.28292908e+02,   8.30655945e+02,
         8.33005920e+02,   8.35342773e+02,   8.37666382e+02,
         8.39976685e+02,   8.42273560e+02,   8.44556885e+02,
         8.46826660e+02,   8.49082703e+02,   8.51325012e+02,
         8.53553406e+02,   8.55767822e+02,   8.57968262e+02,
         8.60154541e+02,   8.62326538e+02,   8.64484314e+02,
         8.66627686e+02,   8.68756531e+02,   8.70870911e+02,
         8.72970581e+02,   8.75055542e+02,   8.77125671e+02,
         8.79180969e+02,   8.81221252e+02,   8.83246521e+02,
         8.85256592e+02,   8.87251526e+02,   8.89231140e+02,
         8.91195435e+02,   8.93144226e+02,   8.95077515e+02,
         8.96995178e+02,   8.98897217e+02,   9.00783508e+02,
         9.02653931e+02,   9.04508484e+02,   9.06347107e+02,
         9.08169617e+02,   9.09976074e+02,   9.11766296e+02,
         9.13540283e+02,   9.15297974e+02,   9.17039246e+02,
         9.18764038e+02,   9.20472290e+02,   9.22163940e+02,
         9.23838989e+02,   9.25497253e+02,   9.27138733e+02,
         9.28763306e+02,   9.30371033e+02,   9.31961731e+02,
         9.33535339e+02,   9.35091858e+02,   9.36631226e+02,
         9.38153320e+02,   9.39658142e+02,   9.41145630e+02,
         9.42615662e+02,   9.44068237e+02,   9.45503235e+02,
         9.46920715e+02,   9.48320496e+02,   9.49702637e+02,
         9.51066956e+02,   9.52413513e+02,   9.53742188e+02,
         9.55052979e+02,   9.56345764e+02,   9.57620605e+02,
         9.58877319e+02,   9.60115906e+02,   9.61336365e+02,
         9.62538574e+02,   9.63722595e+02,   9.64888245e+02,
         9.66035583e+02,   9.67164490e+02,   9.68274963e+02,
         9.69366943e+02,   9.70440369e+02,   9.71495239e+02,
         9.72531555e+02,   9.73549133e+02,   9.74548096e+02,
         9.75528259e+02,   9.76489685e+02,   9.77432251e+02,
         9.78356018e+02,   9.79260864e+02,   9.80146851e+02,
         9.81013855e+02,   9.81861816e+02,   9.82690796e+02,
         9.83500732e+02,   9.84291565e+02,   9.85063293e+02,
         9.85815857e+02,   9.86549255e+02,   9.87263428e+02,
         9.87958374e+02,   9.88634033e+02,   9.89290466e+02,
         9.89927551e+02,   9.90545288e+02,   9.91143616e+02,
         9.91722595e+02,   9.92282166e+02,   9.92822327e+02,
         9.93342957e+02,   9.93844177e+02,   9.94325867e+02,
         9.94788086e+02,   9.95230713e+02,   9.95653809e+02,
         9.96057373e+02,   9.96441284e+02,   9.96805664e+02,
         9.97150391e+02,   9.97475525e+02,   9.97781006e+02,
         9.98066833e+02,   9.98332947e+02,   9.98579468e+02,
         9.98806274e+02,   9.99013367e+02,   9.99200745e+02,
         9.99368469e+02,   9.99516479e+02,   9.99644714e+02,
         9.99753296e+02,   9.99842102e+02,   9.99911194e+02,
         9.99960510e+02,   9.99990112e+02,   1.00000000e+03,
         9.99990112e+02,   9.99960510e+02,   9.99911194e+02,
         9.99842102e+02,   9.99753296e+02,   9.99644714e+02,
         9.99516479e+02,   9.99368469e+02,   9.99200745e+02,
         9.99013367e+02,   9.98806274e+02,   9.98579468e+02,
         9.98332947e+02,   9.98066833e+02,   9.97781006e+02,
         9.97475525e+02,   9.97150391e+02,   9.96805664e+02,
         9.96441284e+02,   9.96057373e+02,   9.95653809e+02,
         9.95230713e+02,   9.94788086e+02,   9.94325867e+02,
         9.93844177e+02,   9.93342957e+02,   9.92822327e+02,
         9.92282166e+02,   9.91722595e+02,   9.91143616e+02,
         9.90545288e+02,   9.89927551e+02,   9.89290466e+02,
         9.88634033e+02,   9.87958374e+02,   9.87263428e+02,
         9.86549255e+02,   9.85815857e+02,   9.85063293e+02,
         9.84291565e+02,   9.83500732e+02,   9.82690796e+02,
         9.81861816e+02,   9.81013855e+02,   9.80146851e+02,
         9.79260864e+02,   9.78356018e+02,   9.77432251e+02,
         9.76489685e+02,   9.75528259e+02,   9.74548096e+02,
         9.73549133e+02,   9.72531555e+02,   9.71495239e+02,
         9.70440369e+02,   9.69366943e+02,   9.68274963e+02,
         9.67164490e+02,   9.66035583e+02,   9.64888245e+02,
         9.63722595e+02,   9.62538574e+02,   9.61336365e+02,
         9.60115906e+02,   9.58877319e+02,   9.57620605e+02,
         9.56345764e+02,   9.55052979e+02,   9.53742188e+02,
         9.52413513e+02,   9.51066956e+02,   9.49702637e+02,
         9.48320496e+02,   9.46920715e+02,   9.45503235e+02,
         9.44068237e+02,   9.42615662e+02,   9.41145630e+02,
         9.39658142e+02,   9.38153320e+02,   9.36631226e+02,
         9.35091858e+02,   9.33535339e+02,   9.31961731e+02,
         9.30371033e+02,   9.28763306e+02,   9.27138733e+02,
         9.25497253e+02,   9.23838989e+02,   9.22163940e+02,
         9.20472290e+02,   9.18764038e+02,   9.17039246e+02,
         9.15297974e+02,   9.13540283e+02,   9.11766296e+02,
         9.09976074e+02,   9.08169617e+02,   9.06347107e+02,
         9.04508484e+02,   9.02653931e+02,   9.00783508e+02,
         8.98897217e+02,   8.96995178e+02,   8.95077515e+02,
         8.93144226e+02,   8.91195435e+02,   8.89231140e+02,
         8.87251526e+02,   8.85256592e+02,   8.83246521e+02,
         8.81221252e+02,   8.79180969e+02,   8.77125671e+02,
         8.75055542e+02,   8.72970581e+02,   8.70870911e+02,
         8.68756531e+02,   8.66627686e+02,   8.64484314e+02,
         8.62326538e+02,   8.60154541e+02,   8.57968262e+02,
         8.55767822e+02,   8.53553406e+02,   8.51325012e+02,
         8.49082703e+02,   8.46826660e+02,   8.44556885e+02,
         8.42273560e+02,   8.39976685e+02,   8.37666382e+02,
         8.35342773e+02,   8.33005920e+02,   8.30655945e+02,
         8.28292908e+02,   8.25916870e+02,   8.23527954e+02,
         8.21126343e+02,   8.18711975e+02,   8.16285095e+02,
         8.13845703e+02,   8.11393860e+02,   8.08929810e+02,
         8.06453552e+02,   8.03965149e+02,   8.01464783e+02,
         7.98952515e+02,   7.96428406e+02,   7.93892639e+02,
         7.91345215e+02,   7.88786377e+02,   7.86216064e+02,
         7.83634460e+02,   7.81041687e+02,   7.78437805e+02,
         7.75822937e+02,   7.73197144e+02,   7.70560608e+02,
         7.67913391e+02,   7.65255615e+02,   7.62587341e+02,
         7.59908691e+02,   7.57219788e+02,   7.54520691e+02,
         7.51811584e+02,   7.49092529e+02,   7.46363647e+02,
         7.43625061e+02,   7.40876831e+02,   7.38119080e+02,
         7.35351990e+02,   7.32575562e+02,   7.29789917e+02,
         7.26995239e+02,   7.24191589e+02,   7.21379089e+02,
         7.18557861e+02,   7.15728027e+02,   7.12889648e+02,
         7.10042847e+02,   7.07187805e+02,   7.04324524e+02,
         7.01453247e+02,   6.98573975e+02,   6.95686829e+02,
         6.92791992e+02,   6.89889526e+02,   6.86979614e+02,
         6.84062256e+02,   6.81137695e+02,   6.78205933e+02,
         6.75267151e+02,   6.72321472e+02,   6.69368958e+02,
         6.66409790e+02,   6.63444031e+02,   6.60471802e+02,
         6.57493286e+02,   6.54508484e+02,   6.51517639e+02,
         6.48520813e+02,   6.45518066e+02,   6.42509644e+02,
         6.39495544e+02,   6.36475952e+02,   6.33450989e+02,
         6.30420776e+02,   6.27385376e+02,   6.24344971e+02,
         6.21299622e+02,   6.18249512e+02,   6.15194702e+02,
         6.12135376e+02,   6.09071594e+02,   6.06003540e+02,
         6.02931274e+02,   5.99854980e+02,   5.96774719e+02,
         5.93690674e+02,   5.90602905e+02,   5.87511536e+02,
         5.84416748e+02,   5.81318604e+02,   5.78217224e+02,
         5.75112793e+02,   5.72005371e+02,   5.68895142e+02,
         5.65782166e+02,   5.62666626e+02,   5.59548584e+02,
         5.56428223e+02,   5.53305603e+02,   5.50180847e+02,
         5.47054138e+02,   5.43925598e+02,   5.40795288e+02,
         5.37663391e+02,   5.34530029e+02,   5.31395264e+02,
         5.28259277e+02,   5.25122131e+02,   5.21984070e+02,
         5.18845093e+02,   5.15705383e+02,   5.12565063e+02,
         5.09424225e+02,   5.06283020e+02,   5.03141571e+02,
         5.00000000e+02,   4.96858429e+02,   4.93716980e+02,
         4.90575775e+02,   4.87434967e+02,   4.84294617e+02,
         4.81154907e+02,   4.78015930e+02,   4.74877838e+02,
         4.71740723e+02,   4.68604736e+02,   4.65470001e+02,
         4.62336609e+02,   4.59204681e+02,   4.56074402e+02,
         4.52945831e+02,   4.49819153e+02,   4.46694427e+02,
         4.43571808e+02,   4.40451416e+02,   4.37333374e+02,
         4.34217834e+02,   4.31104858e+02,   4.27994598e+02,
         4.24887207e+02,   4.21782776e+02,   4.18681427e+02,
         4.15583282e+02,   4.12488464e+02,   4.09397125e+02,
         4.06309357e+02,   4.03225281e+02,   4.00145020e+02,
         3.97068695e+02,   3.93996460e+02,   3.90928375e+02,
         3.87864624e+02,   3.84805298e+02,   3.81750488e+02,
         3.78700378e+02,   3.75655060e+02,   3.72614624e+02,
         3.69579254e+02,   3.66549011e+02,   3.63524017e+02,
         3.60504456e+02,   3.57490356e+02,   3.54481903e+02,
         3.51479218e+02,   3.48482361e+02,   3.45491516e+02,
         3.42506744e+02,   3.39528198e+02,   3.36556000e+02,
         3.33590240e+02,   3.30631042e+02,   3.27678528e+02,
         3.24732849e+02,   3.21794067e+02,   3.18862305e+02,
         3.15937714e+02,   3.13020386e+02,   3.10110443e+02,
         3.07208008e+02,   3.04313171e+02,   3.01426056e+02,
         2.98546783e+02,   2.95675476e+02,   2.92812195e+02,
         2.89957123e+02,   2.87110352e+02,   2.84271973e+02,
         2.81442108e+02,   2.78620880e+02,   2.75808380e+02,
         2.73004761e+02,   2.70210083e+02,   2.67424469e+02,
         2.64648041e+02,   2.61880890e+02,   2.59123169e+02,
         2.56374939e+02,   2.53636322e+02,   2.50907440e+02,
         2.48188400e+02,   2.45479294e+02,   2.42780228e+02,
         2.40091324e+02,   2.37412689e+02,   2.34744415e+02,
         2.32086609e+02,   2.29439377e+02,   2.26802826e+02,
         2.24177063e+02,   2.21562195e+02,   2.18958313e+02,
         2.16365524e+02,   2.13783936e+02,   2.11213654e+02,
         2.08654755e+02,   2.06107376e+02,   2.03571594e+02,
         2.01047516e+02,   1.98535233e+02], dtype=np.float32),
'ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0008': np.array([0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1,
       0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0,
       0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1,
       1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0,
       0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1,
       1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1,
       0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0,
       0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,
       0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1,
       1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1,
       0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1,
       1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
       1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0,
       0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,
       0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0,
       0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0,
       0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,
       0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0,
       0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0,
       0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1,
       1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0,
       0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1,
       1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0,
       0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0,
       0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0,
       0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1,
       1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1,
       1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0,
       0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
       0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
       1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1], dtype=np.uint8),
'ASAM.M.VIRTUAL.SCALAR.SWORD.PHYSICAL': np.array([ -544,  -464,  -384,  -304,  -224,  -144,   -64,    16,    96,
         176,   256,   336,   416,   496,   576,   656,   736,   816,
         896,   976,  -992,  -912,  -832,  -752,  -672,  -592,  -512,
        -432,  -352,  -272,     0,    80,   160,   240,   320,   400,
         480,   560,   640,   720,   800,   880,   960, -1008,  -928,
        -848,  -768,  -688,  -608,  -528,  -448,  -368,  -288,  -208,
        -128,   -48,    32,   112,   192,   272,   352,   432,   512,
         592,   672,   752,   832,   912,   992,  -976,  -896,  -816,
        -736,  -656,  -576,  -496,  -416,  -336,  -256,  -176,   -96,
         -16,    64,   144,   224,   304,   384,   464,   544,   624], dtype=np.int16),
                        }

CHANNELS_ARRAY = {
    'Int32': np.array(range(-20, 20), dtype=np.int32),
    'Float64': np.array(range(-20, 20), dtype=np.float64) * 0.25,
    'Uint8': np.array(range(0, 80, 2), dtype=np.uint8),
    'Uint64': np.ones(40, dtype=np.uint64) * 2**40,
    'XAxis': np.array([0, 1, 2] * 40, np.uint8).reshape(40,3,),
    'YAxis': np.array([0, 1, 2, 3] * 40, np.uint8).reshape(40,4),
    'Saw': np.arange(0, 1200, 10, dtype=np.uint16) % 0xFF,
    'Ones': np.ones(120, dtype=np.int8),
    'Cos': np.cos(np.arange(0, 360, 3, dtype=np.float32)/360*2*np.pi, dtype=np.float32).astype(np.float64),
    'Sin': np.sin(np.arange(0, 360, 3, dtype=np.float32)/360*2*np.pi, dtype=np.float32).astype(np.float64),
    'Zeros': np.zeros(120, dtype=np.int32),
}

CHANNELS_ARRAY['Sin'][70] = -0.5

l = []
for i in range(40):
    l.append([i,] * 12)
arrays = [
    np.array(l, np.int16).reshape(40,3,4),
    CHANNELS_ARRAY['XAxis'],
    CHANNELS_ARRAY['YAxis'],
]
types = [
    ('Int16Array', np.int16, (3,4)),
    ('XAxis', np.uint8, (3,)),
    ('YAxis', np.uint8, (4,)),
]
CHANNELS_ARRAY['Int16Array'] = np.core.records.fromarrays(
    arrays,
    dtype=np.dtype(types),
)

arrays = [CHANNELS_ARRAY['XAxis'], ]
types = [('XAxis', np.uint8, (3,)),]
CHANNELS_ARRAY['XAxis'] = np.core.records.fromarrays(
    arrays,
    dtype=np.dtype(types),
)

arrays = [CHANNELS_ARRAY['YAxis'], ]
types = [('YAxis', np.uint8, (4,)),]
CHANNELS_ARRAY['YAxis'] = np.core.records.fromarrays(
    arrays,
    dtype=np.dtype(types),
)

l = []
for i in range(-60, 60):
    l.append([0.1*i,] * 9)
arrays = [np.array(l, np.float32).reshape(120,3,3),]
types = [('Matrix', np.float32, (3,3)),]
CHANNELS_ARRAY['Matrix'] = np.core.records.fromarrays(
    arrays,
    dtype=np.dtype(types),
)

arrays = [
    CHANNELS_ARRAY['Saw'],
    CHANNELS_ARRAY['Ones'],
    CHANNELS_ARRAY['Cos'],
    CHANNELS_ARRAY['Sin'],
    CHANNELS_ARRAY['Zeros'],
]
types = [
    ('Saw', np.uint16),
    ('Ones', np.int8),
    ('Cos', np.float64),
    ('Sin', np.float64),
    ('Zeros', np.int32),
]
CHANNELS_ARRAY['Maths'] = np.core.records.fromarrays(
    arrays,
    dtype=np.dtype(types),
)

arrays = [
    CHANNELS_ARRAY['Int32'],
    CHANNELS_ARRAY['Float64'],
    CHANNELS_ARRAY['Uint8'],
    CHANNELS_ARRAY['Uint64'],
]
types = [
    ('Int32', np.int32),
    ('Float64', np.float64),
    ('Uint8', np.uint8),
    ('Uint64', np.uint64),
]
CHANNELS_ARRAY['Composed'] = np.core.records.fromarrays(
    arrays,
    dtype=np.dtype(types),
)

COMMENTS = {
    "ASAM.M.VIRTUAL.SCALAR.SWORD.PHYSICAL": "Virtual measurement with 2 * ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2 as input (based on the phys value of ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2",
    "ASAM_[0][0].M.MATRIX_DIM_8_2_1.UBYTE.IDENTICAL": "Scalar measurement",
    "ASAM_[0].M.MATRIX_DIM_16_1_1.UBYTE.IDENTICAL": "Scalar measurement",
    "ASAM_[0].M.ARRAY_SIZE_16.UBYTE.IDENTICAL": "Scalar measurement",
    "ASAM.M.SCALAR.UBYTE.TAB_NOINTP_DEFAULT_VALUE": "Scalar measurement with verbal conversion and default value",
    "ASAM.M.SCALAR.UBYTE.TAB_INTP_NO_DEFAULT_VALUE": "Scalar measurement with verbal conversion and default value",
    "ASAM.M.SCALAR.UBYTE.TAB_INTP_DEFAULT_VALUE": "Scalar measurement with verbal conversion and default value",
    "ASAM.M.SCALAR.UBYTE.IDENTICAL": "Scalar measurement",
    "ASAM.M.SCALAR.UBYTE.FORM_X_PLUS_4": "Scalar measurement",
    "ASAM.M.SCALAR.SWORD.IDENTICAL": "Scalar measurement",
    "ASAM.M.SCALAR.SLONG.IDENTICAL": "Scalar measurement",
    "ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2": "Scalar measurement",
    "ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0": "Scalar measurement with Bitmask for a bit-area",
    "ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0008": "Scalar measurement with Bitmask for a single bit",
    "ASAM.M.SCALAR.UWORD.IDENTICAL": "Scalar measurement",
    "ASAM.M.SCALAR.ULONG.IDENTICAL": "Scalar measurement",
    "ASAM.M.SCALAR.UBYTE.VTAB_RANGE_NO_DEFAULT_VALUE": "Scalar measurement with verbal conversion and default value",
    "ASAM.M.SCALAR.UBYTE.VTAB_RANGE_DEFAULT_VALUE": "Scalar measurement with verbal conversion and default value",
    "ASAM.M.SCALAR.UBYTE.TAB_VERB_NO_DEFAULT_VALUE": "Scalar measurement with verbal conversion",
    "ASAM.M.SCALAR.UBYTE.TAB_VERB_DEFAULT_VALUE": "Scalar measurement with verbal conversion and default value",
    "ASAM.M.SCALAR.UBYTE.TAB_NOINTP_NO_DEFAULT_VALUE": "Scalar measurement with verbal conversion and default value",
    "ASAM.M.SCALAR.FLOAT64.IDENTICAL": "Scalar measurement",
    "ASAM.M.SCALAR.FLOAT32.IDENTICAL": "Scalar measurement",
    "$CalibrationLog": "",
    "$ActiveCalibrationPage": "",
}

UNITS = {
    "ASAM.M.VIRTUAL.SCALAR.SWORD.PHYSICAL": "",
    "ASAM_[0][0].M.MATRIX_DIM_8_2_1.UBYTE.IDENTICAL": "hours",
    "ASAM_[0].M.MATRIX_DIM_16_1_1.UBYTE.IDENTICAL": "hours",
    "ASAM_[0].M.ARRAY_SIZE_16.UBYTE.IDENTICAL": "hours",
    "ASAM.M.SCALAR.UBYTE.TAB_NOINTP_DEFAULT_VALUE": "U/  min",
    "ASAM.M.SCALAR.UBYTE.TAB_INTP_NO_DEFAULT_VALUE": "U/  min",
    "ASAM.M.SCALAR.UBYTE.TAB_INTP_DEFAULT_VALUE": "U/  min",
    "ASAM.M.SCALAR.UBYTE.IDENTICAL": "hours",
    "ASAM.M.SCALAR.UBYTE.FORM_X_PLUS_4": "rpm",
    "ASAM.M.SCALAR.SWORD.IDENTICAL": "hours",
    "ASAM.M.SCALAR.SLONG.IDENTICAL": "hours",
    "ASAM.M.SCALAR.SBYTE.LINEAR_MUL_2": "m/s",
    "ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0FF0": "hours",
    "ASAM.M.SCALAR.UWORD.IDENTICAL.BITMASK_0008": "hours",
    "ASAM.M.SCALAR.UWORD.IDENTICAL": "hours",
    "ASAM.M.SCALAR.ULONG.IDENTICAL": "hours",
    "ASAM.M.SCALAR.UBYTE.VTAB_RANGE_NO_DEFAULT_VALUE": "",
    "ASAM.M.SCALAR.UBYTE.VTAB_RANGE_DEFAULT_VALUE": "",
    "ASAM.M.SCALAR.UBYTE.TAB_VERB_NO_DEFAULT_VALUE": "",
    "ASAM.M.SCALAR.UBYTE.TAB_VERB_DEFAULT_VALUE": "",
    "ASAM.M.SCALAR.UBYTE.TAB_NOINTP_NO_DEFAULT_VALUE": "U/  min",
    "ASAM.M.SCALAR.FLOAT64.IDENTICAL": "hours",
    "ASAM.M.SCALAR.FLOAT32.IDENTICAL": "hours",
    "$CalibrationLog": "",
    "$ActiveCalibrationPage": "",
}


def get_test_data(filename=""):
    """
    Utility functions needed by all test scripts.
    """
    return os.path.dirname(__file__) + "/data/" + filename


def generate_test_file(version='4.10'):
    mdf = MDF(version=version, memory='minimum')

    if version <= '3.30':
        filename = r'tmpdir/big_test_{}.mdf'.format(version)
    else:
        filename = r'tmpdir/big_test_{}.mf4'.format(version)

    if os.path.exists(filename):
        return filename

    t = np.arange(cycles, dtype=np.float64)

    cls = v4b.ChannelConversion if version >= '4.00' else v3b.ChannelConversion

    # no conversion
    sigs = []
    for i in range(channels_count):
        sig = Signal(
            np.ones(cycles, dtype=np.uint64) * i,
            t,
            name='Channel_{}'.format(i),
            unit='unit_{}'.format(i),
            conversion=None,
            comment='Unsigned int 16bit channel {}'.format(i),
            raw=True,
        )
        sigs.append(sig)
    mdf.append(sigs, common_timebase=True)

    # linear
    sigs = []
    for i in range(channels_count):
        conversion = {
            'conversion_type': v4c.CONVERSION_TYPE_LIN if version >= '4.00' else v3c.CONVERSION_TYPE_LINEAR,
            'a': float(i),
            'b': -0.5,
        }
        sig = Signal(
            np.ones(cycles, dtype=np.int64),
            t,
            name='Channel_{}'.format(i),
            unit='unit_{}'.format(i),
            conversion=cls(**conversion),
            comment='Signed 16bit channel {} with linear conversion'.format(i),
            raw=True,
        )
        sigs.append(sig)
    mdf.append(sigs, common_timebase=True)

    # algebraic
    sigs = []
    for i in range(channels_count):
        conversion = {
            'conversion_type': v4c.CONVERSION_TYPE_ALG if version >= '4.00' else v3c.CONVERSION_TYPE_FORMULA,
            'formula': '{} * sin(X)'.format(i),
        }
        sig = Signal(
            np.arange(cycles, dtype=np.int32) / 100.0,
            t,
            name='Channel_{}'.format(i),
            unit='unit_{}'.format(i),
            conversion=cls(**conversion),
            comment='Sinus channel {} with algebraic conversion'.format(i),
            raw=True,
        )
        sigs.append(sig)
    mdf.append(sigs, common_timebase=True)

    # rational
    sigs = []
    for i in range(channels_count):
        conversion = {
            'conversion_type': v4c.CONVERSION_TYPE_RAT if version >= '4.00' else v3c.CONVERSION_TYPE_RAT,
            'P1': 0,
            'P2': i,
            'P3': -0.5,
            'P4': 0,
            'P5': 0,
            'P6': 1,
        }
        sig = Signal(
            np.ones(cycles, dtype=np.int64),
            t,
            name='Channel_{}'.format(i),
            unit='unit_{}'.format(i),
            conversion=cls(**conversion),
            comment='Channel {} with rational conversion'.format(i),
            raw=True,
        )
        sigs.append(sig)
    mdf.append(sigs, common_timebase=True)

    # string
    sigs = []
    for i in range(channels_count):
        sig = [
            'Channel {} sample {}'.format(i, j).encode('ascii')
            for j in range(cycles)
        ]
        sig = Signal(
            np.array(sig),
            t,
            name='Channel_{}'.format(i),
            unit='unit_{}'.format(i),
            comment='String channel {}'.format(i),
            raw=True,
        )
        sigs.append(sig)
    mdf.append(sigs, common_timebase=True)

    # byte array
    sigs = []
    ones = np.ones(cycles, dtype=np.dtype('(8,)u1'))
    for i in range(channels_count):
        sig = Signal(
            ones*i,
            t,
            name='Channel_{}'.format(i),
            unit='unit_{}'.format(i),
            comment='Byte array channel {}'.format(i),
            raw=True,
        )
        sigs.append(sig)
    mdf.append(sigs, common_timebase=True)

    # value to text
    sigs = []
    ones = np.ones(cycles, dtype=np.uint64)
    conversion = {
        'raw': np.arange(255, dtype=np.float64),
        'phys': np.array([
            'Value {}'.format(i).encode('ascii')
            for i in range(255)
        ]),
        'conversion_type': v4c.CONVERSION_TYPE_TABX if version >= '4.00' else v3c.CONVERSION_TYPE_TABX,
        'links_nr': 260,
        'ref_param_nr': 255,
    }

    for i in range(255):
        conversion['val_{}'.format(i)] = conversion['param_val_{}'.format(i)] = conversion['raw'][i]
        conversion['text_{}'.format(i)] = conversion['phys'][i]
    conversion['text_{}'.format(255)] = 'Default'

    for i in range(channels_count):
        sig = Signal(
            ones * i,
            t,
            name='Channel_{}'.format(i),
            unit='unit_{}'.format(i),
            comment='Value to text channel {}'.format(i),
            conversion=cls(**conversion),
            raw=True,
        )
        sigs.append(sig)
    mdf.append(sigs, common_timebase=True)

    mdf.save(filename, overwrite=True)


def generate_arrays_test_file():
    version = '4.10'
    mdf = MDF(version=version, memory='minimum')
    filename = r'tmpdir_array/arrays_test_{}.mf4'.format(version)

    if os.path.exists(filename):
        return filename

    t = np.arange(cycles, dtype=np.float64)

    # lookup tabel with axis
    sigs = []
    for i in range(array_channels_count):
        samples = [
            np.ones((cycles, 2, 3), dtype=np.uint64) * i,
            np.ones((cycles, 2), dtype=np.uint64) * i,
            np.ones((cycles, 3), dtype=np.uint64) * i,
        ]

        types = [
            ('Channel_{}'.format(i), '(2, 3)<u8'),
            ('channel_{}_axis_1'.format(i), '(2, )<u8'),
            ('channel_{}_axis_2'.format(i), '(3, )<u8'),
        ]

        sig = Signal(
            np.core.records.fromarrays(samples, dtype=np.dtype(types)),
            t,
            name='Channel_{}'.format(i),
            unit='unit_{}'.format(i),
            conversion=None,
            comment='Array channel {}'.format(i),
            raw=True,
        )
        sigs.append(sig)
    mdf.append(sigs, common_timebase=True)

    # lookup tabel with default axis
    sigs = []
    for i in range(array_channels_count):
        samples = [
            np.ones((cycles, 2, 3), dtype=np.uint64) * i,
        ]

        types = [
            ('Channel_{}'.format(i), '(2, 3)<u8'),
        ]

        sig = Signal(
            np.core.records.fromarrays(samples, dtype=np.dtype(types)),
            t,
            name='Channel_{}'.format(i),
            unit='unit_{}'.format(i),
            conversion=None,
            comment='Array channel {} with default axis'.format(i),
            raw=True,
        )
        sigs.append(sig)
    mdf.append(sigs, common_timebase=True)

    # structure channel composition
    sigs = []
    for i in range(array_channels_count):
        samples = [
            np.ones(cycles, dtype=np.uint8) * i,
            np.ones(cycles, dtype=np.uint16) * i,
            np.ones(cycles, dtype=np.uint32) * i,
            np.ones(cycles, dtype=np.uint64) * i,
            np.ones(cycles, dtype=np.int8) * i,
            np.ones(cycles, dtype=np.int16) * i,
            np.ones(cycles, dtype=np.int32) * i,
            np.ones(cycles, dtype=np.int64) * i,
        ]

        types = [
            ('struct_{}_channel_0'.format(i), np.uint8),
            ('struct_{}_channel_1'.format(i), np.uint16),
            ('struct_{}_channel_2'.format(i), np.uint32),
            ('struct_{}_channel_3'.format(i), np.uint64),
            ('struct_{}_channel_4'.format(i), np.int8),
            ('struct_{}_channel_5'.format(i), np.int16),
            ('struct_{}_channel_6'.format(i), np.int32),
            ('struct_{}_channel_7'.format(i), np.int64),
        ]

        sig = Signal(
            np.core.records.fromarrays(samples, dtype=np.dtype(types)),
            t,
            name='Channel_{}'.format(i),
            unit='unit_{}'.format(i),
            conversion=None,
            comment='Structure channel composition {}'.format(i),
            raw=True,
        )
        sigs.append(sig)

    mdf.append(sigs, common_timebase=True)

    mdf.save(filename, overwrite=True)

def cleanup_files():
    for filename in os.listdir(os.getcwd()):
        if os.path.isfile(filename) and filename.startswith('tmp'):
            os.remove(filename)

if __name__ == '__main__':
    generate_test_file('3.30')
    generate_test_file('4.10')
    generate_arrays_test_file()
