# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dropsonde/pb/metric.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from dropsonde.pb import uuid_pb2 as dropsonde_dot_pb_dot_uuid__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='dropsonde/pb/metric.proto',
  package='events',
  syntax='proto2',
  serialized_pb=_b('\n\x19\x64ropsonde/pb/metric.proto\x12\x06\x65vents\x1a\x17\x64ropsonde/pb/uuid.proto\"8\n\x0bValueMetric\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05value\x18\x02 \x02(\x01\x12\x0c\n\x04unit\x18\x03 \x02(\t\":\n\x0c\x43ounterEvent\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\r\n\x05\x64\x65lta\x18\x02 \x02(\x04\x12\r\n\x05total\x18\x03 \x01(\x04\"\xb0\x01\n\x0f\x43ontainerMetric\x12\x15\n\rapplicationId\x18\x01 \x02(\t\x12\x15\n\rinstanceIndex\x18\x02 \x02(\x05\x12\x15\n\rcpuPercentage\x18\x03 \x02(\x01\x12\x13\n\x0bmemoryBytes\x18\x04 \x02(\x04\x12\x11\n\tdiskBytes\x18\x05 \x02(\x04\x12\x18\n\x10memoryBytesQuota\x18\x06 \x01(\x04\x12\x16\n\x0e\x64iskBytesQuota\x18\x07 \x01(\x04\x42\x32\n!org.cloudfoundry.dropsonde.eventsB\rMetricFactory')
  ,
  dependencies=[dropsonde_dot_pb_dot_uuid__pb2.DESCRIPTOR,])




_VALUEMETRIC = _descriptor.Descriptor(
  name='ValueMetric',
  full_name='events.ValueMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='events.ValueMetric.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='events.ValueMetric.value', index=1,
      number=2, type=1, cpp_type=5, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='unit', full_name='events.ValueMetric.unit', index=2,
      number=3, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=62,
  serialized_end=118,
)


_COUNTEREVENT = _descriptor.Descriptor(
  name='CounterEvent',
  full_name='events.CounterEvent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='events.CounterEvent.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='delta', full_name='events.CounterEvent.delta', index=1,
      number=2, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='total', full_name='events.CounterEvent.total', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=120,
  serialized_end=178,
)


_CONTAINERMETRIC = _descriptor.Descriptor(
  name='ContainerMetric',
  full_name='events.ContainerMetric',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='applicationId', full_name='events.ContainerMetric.applicationId', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='instanceIndex', full_name='events.ContainerMetric.instanceIndex', index=1,
      number=2, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cpuPercentage', full_name='events.ContainerMetric.cpuPercentage', index=2,
      number=3, type=1, cpp_type=5, label=2,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='memoryBytes', full_name='events.ContainerMetric.memoryBytes', index=3,
      number=4, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='diskBytes', full_name='events.ContainerMetric.diskBytes', index=4,
      number=5, type=4, cpp_type=4, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='memoryBytesQuota', full_name='events.ContainerMetric.memoryBytesQuota', index=5,
      number=6, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='diskBytesQuota', full_name='events.ContainerMetric.diskBytesQuota', index=6,
      number=7, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=181,
  serialized_end=357,
)

DESCRIPTOR.message_types_by_name['ValueMetric'] = _VALUEMETRIC
DESCRIPTOR.message_types_by_name['CounterEvent'] = _COUNTEREVENT
DESCRIPTOR.message_types_by_name['ContainerMetric'] = _CONTAINERMETRIC
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ValueMetric = _reflection.GeneratedProtocolMessageType('ValueMetric', (_message.Message,), dict(
  DESCRIPTOR = _VALUEMETRIC,
  __module__ = 'dropsonde.pb.metric_pb2'
  # @@protoc_insertion_point(class_scope:events.ValueMetric)
  ))
_sym_db.RegisterMessage(ValueMetric)

CounterEvent = _reflection.GeneratedProtocolMessageType('CounterEvent', (_message.Message,), dict(
  DESCRIPTOR = _COUNTEREVENT,
  __module__ = 'dropsonde.pb.metric_pb2'
  # @@protoc_insertion_point(class_scope:events.CounterEvent)
  ))
_sym_db.RegisterMessage(CounterEvent)

ContainerMetric = _reflection.GeneratedProtocolMessageType('ContainerMetric', (_message.Message,), dict(
  DESCRIPTOR = _CONTAINERMETRIC,
  __module__ = 'dropsonde.pb.metric_pb2'
  # @@protoc_insertion_point(class_scope:events.ContainerMetric)
  ))
_sym_db.RegisterMessage(ContainerMetric)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n!org.cloudfoundry.dropsonde.eventsB\rMetricFactory'))
# @@protoc_insertion_point(module_scope)
