Metadata-Version: 2.1
Name: flake8-filename
Version: 1.0.0
Summary: A flake8 linter plug-in for validating that certain Python files comply with a user defined pattern.
Home-page: https://github.com/rcbops/flake8-filename
Author: rpc-automation
Author-email: rpc-automation@rackspace.com
License: Apache Software License 2.0
Keywords: flake8 flake8-filename
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Framework :: Flake8
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*
Requires-Dist: flake8 (>=3.5.0)

===============
flake8-filename
===============

.. image:: https://img.shields.io/travis/rcbops/flake8-filename.svg
        :target: https://travis-ci.org/rcbops/flake8-filename

A flake8 linter plug-in for validating that certain Python files comply with a user defined pattern.

Quick Start Guide
-----------------

1. Install ``flake8-filename`` from PyPI with pip::

    $ pip install flake8-filename

2. Configure a mark that you would like to validate::

    $ cd project_root/
    $ vi .flake8

.. code-block:: ini

    [flake8]
    filename_check1 = filter_regex=test_.+
                      filename_regex=test_[\w-]+$

3. Run flake8::

    $ flake8 tests/

Gotchas
-------

1. It is highly recommended to use this plugin inside of a virtualenv
2. A configuration is required by this plugin, if none is found the plugin will throw a N401 validation error for every file

Violation Codes
---------------

All possible violation codes are documented in violation_codes_


Example Configurations
----------------------

More example configurations can be found in configuration_

Credits
-------

This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.

.. _CONTRIBUTING.rst: CONTRIBUTING.rst
.. _configuration: docs/configuration.rst
.. _violation_codes: docs/violation_codes.rst
.. _Cookiecutter: https://github.com/audreyr/cookiecutter
.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage


=======
History
=======


