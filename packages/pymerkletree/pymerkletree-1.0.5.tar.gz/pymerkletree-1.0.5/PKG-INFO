Metadata-Version: 1.1
Name: pymerkletree
Version: 1.0.5
Summary: Simple Merkle Tree
Home-page: https://github.com/aliciawyy/pymerkletools
Author: Alice Wang, Eder Santana
Author-email: rainingilove@gmail.com
License: MIT
Description: # pymerkletools
        [![PyPI version](https://badge.fury.io/py/merkletools.svg)](https://badge.fury.io/py/merkletools)
        [![Build Status](https://travis-ci.org/aliciawyy/pymerkletools.svg?branch=master)](https://travis-ci.org/aliciawyy/pymerkletools)
        [![codecov](https://codecov.io/gh/aliciawyy/pymerkletools/branch/master/graph/badge.svg)](https://codecov.io/gh/aliciawyy/pymerkletools)
        [![Maintainability](https://api.codeclimate.com/v1/badges/cfa9766c9537f10f72f1/maintainability)](https://codeclimate.com/github/aliciawyy/pymerkletools/maintainability)
        
        This project is adapted from the [pymerkletools](https://github.com/aliciawyy/pymerkletools) of Tierion.
        
        It includes a `MerkleTree` class for creating Merkle trees, generating merkle proofs, and verification of merkle proofs.
        
        ## Installation
        
        ```
        pip install pymerkletree
        ```
        
        ## Examples
        
        The source code is simple by itself and examples can be found in the folder `demo`.
        
        ## Notes
        
        ### About tree generation
        
        1. Internally, leaves are stored as `bytearray`. When the tree is built, it is
        generated by hashing together the `bytearray` values.
        2. Lonely leaf nodes are promoted to the next level up, as depicted below.
        
                                 ROOT=Hash(H+E)
                                 /        \
                                /          \
                         H=Hash(F+G)        E
                         /       \           \
                        /         \           \
                 F=Hash(A+B)    G=Hash(C+D)    E
                  /     \        /     \        \
                 /       \      /       \        \
                A         B    C         D        E
        
Keywords: merkle tree,blockchain
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
