(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["plotly"],{

/***/ "../../../packages/transform-plotly/src/index.js":
/*!***************************************************************************************************!*\
  !*** /Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-plotly/src/index.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PlotlyNullTransform = exports.PlotlyTransform = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"../../../node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _lodash = __webpack_require__(/*! lodash */ \"../../../packages/transform-plotly/node_modules/lodash/lodash.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function () {\n  var enterModule = __webpack_require__(/*! react-hot-loader */ \"../../../node_modules/react-hot-loader/index.js\").enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n/* eslint class-methods-use-this: 0 */\n\n\nvar NULL_MIMETYPE = \"text/vnd.plotly.v1+html\";\nvar MIMETYPE = \"application/vnd.plotly.v1+json\";\n\n/*\n * As part of the init notebook mode, Plotly sneaks a <script> tag in to load\n * the plotlyjs lib. We have already loaded this though, so we \"handle\" the\n * transform by doing nothing and returning null.\n */\nvar PlotlyNullTransform = function PlotlyNullTransform() {\n  return null;\n};\nPlotlyNullTransform.MIMETYPE = NULL_MIMETYPE;\n\nvar PlotlyTransform = exports.PlotlyTransform = function (_React$Component) {\n  _inherits(PlotlyTransform, _React$Component);\n\n  function PlotlyTransform() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PlotlyTransform);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PlotlyTransform.__proto__ || Object.getPrototypeOf(PlotlyTransform)).call.apply(_ref, [this].concat(args))), _this), _this.plotDivRef = function (plotDiv) {\n      _this.plotDiv = plotDiv;\n    }, _this.getFigure = function () {\n      var figure = _this.props.data;\n      if (typeof figure === \"string\") {\n        return JSON.parse(figure);\n      }\n\n      // The Plotly API *mutates* the figure to include a UID, which means\n      // they won't take our frozen objects\n      if (Object.isFrozen(figure)) {\n        return (0, _lodash.cloneDeep)(figure);\n      }\n      return figure;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(PlotlyTransform, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Handle case of either string to be `JSON.parse`d or pure object\n      var figure = this.getFigure();\n      this.Plotly = __webpack_require__(/*! @nteract/plotly */ \"../../../node_modules/@nteract/plotly/plotly.min.js\");\n      this.Plotly.newPlot(this.plotDiv, figure.data, figure.layout);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return this.props.data !== nextProps.data;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var figure = this.getFigure();\n      if (!this.plotDiv) return;\n      this.plotDiv.data = figure.data;\n      this.plotDiv.layout = figure.layout;\n      this.Plotly.redraw(this.plotDiv);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _getFigure = this.getFigure(),\n          layout = _getFigure.layout;\n\n      var style = {};\n      if (layout && layout.height && !layout.autosize) {\n        style.height = layout.height;\n      }\n      // $FlowFixMe: a normal div doesn't have the properties that plotly puts on it\n      return _react2.default.createElement(\"div\", { ref: this.plotDivRef, style: style });\n    }\n  }, {\n    key: \"__reactstandin__regenerateByEval\",\n    // @ts-ignore\n    value: function __reactstandin__regenerateByEval(key, code) {\n      // @ts-ignore\n      this[key] = eval(code);\n    }\n  }]);\n\n  return PlotlyTransform;\n}(_react2.default.Component);\n\nPlotlyTransform.MIMETYPE = MIMETYPE;\nexports.PlotlyNullTransform = PlotlyNullTransform;\nvar _default = PlotlyTransform;\nexports.default = _default;\n;\n\n(function () {\n  var reactHotLoader = __webpack_require__(/*! react-hot-loader */ \"../../../node_modules/react-hot-loader/index.js\").default;\n\n  var leaveModule = __webpack_require__(/*! react-hot-loader */ \"../../../node_modules/react-hot-loader/index.js\").leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(NULL_MIMETYPE, \"NULL_MIMETYPE\", \"/Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-plotly/src/index.js\");\n  reactHotLoader.register(MIMETYPE, \"MIMETYPE\", \"/Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-plotly/src/index.js\");\n  reactHotLoader.register(PlotlyNullTransform, \"PlotlyNullTransform\", \"/Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-plotly/src/index.js\");\n  reactHotLoader.register(PlotlyTransform, \"PlotlyTransform\", \"/Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-plotly/src/index.js\");\n  reactHotLoader.register(_default, \"default\", \"/Users/kylek/code/src/github.com/nteract/nteract-ext/packages/transform-plotly/src/index.js\");\n  leaveModule(module);\n})();\n\n;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/module.js */ \"../../../node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../packages/transform-plotly/src/index.js\n");

/***/ })

}]);