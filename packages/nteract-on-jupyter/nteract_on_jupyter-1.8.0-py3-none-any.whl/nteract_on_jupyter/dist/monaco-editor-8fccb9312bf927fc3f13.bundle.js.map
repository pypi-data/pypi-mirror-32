{"version":3,"sources":["webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/richest-mime.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/output.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/index.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/display-area/src/display.js","webpack:////Users/kylek/code/src/github.com/nteract/nteract-ext/packages/monaco-editor/src/index.js"],"names":["_react","__webpack_require__","_transforms","Fallback","_ref","componentStack","error","_react2","default","createElement","style","backgroundColor","color","fontWeight","display","padding","marginBottom","toString","RichestMime","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","state","info","React","Component","setState","nextProps","theme","mimetype","richestMimetype","bundle","displayOrder","transforms","Transform","data","metadata","expanded","models","defaultProps","Output","classPrefix","output","output_type","_richestMime2","text","name","_ansiToReact2","className","traceback","join","ename","evalue","Display","Immutable","DEFAULT_SCROLL_HEIGHT","PureComponent","_props","isHidden","outputs","_objectWithoutProperties","maxHeight","overflowY","map","index","_output2","_extends","key","Map","_reactDom","_lodash","monaco","MonacoEditor","componentWillReceiveProps","debounce","e","onChange","getValue","editor","create","monacoContainer","value","language","mode","minimap","enabled","autoIndent","editorFocused","focus","onDidChangeModelContent","bind","prevProps","setValue","updateOptions","dispose","_this2","ref","container"],"mappings":"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","file":"monaco-editor-8fccb9312bf927fc3f13.bundle.js","sourcesContent":["// @flow\nimport React from \"react\";\n\nimport { richestMimetype, transforms, displayOrder } from \"@nteract/transforms\";\n\ntype Props = {\n  expanded: boolean,\n  displayOrder: Array<string>,\n  transforms: Object,\n  bundle: Object,\n  metadata: Object,\n  theme: string,\n  models?: Object\n};\n\ntype ErrorInfo = {\n  componentStack: string\n};\n\ntype State = {\n  error: ?Error,\n  info: ?ErrorInfo\n};\n\ntype FallbackProps = {\n  componentStack: string,\n  error: Error\n};\n\nconst Fallback = ({ componentStack, error }: FallbackProps) => (\n  <div\n    style={{\n      backgroundColor: \"ghostwhite\",\n      color: \"black\",\n      fontWeight: \"600\",\n      display: \"block\",\n      padding: \"10px\",\n      marginBottom: \"20px\"\n    }}\n  >\n    <h3> Error: {error.toString()}</h3>\n    <details>\n      <summary>stack trace</summary>\n      <pre>{componentStack}</pre>\n    </details>\n  </div>\n);\n\nexport default class RichestMime extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      error: null,\n      info: null\n    };\n  }\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    this.setState({ error, info });\n  }\n\n  static defaultProps = {\n    transforms,\n    displayOrder,\n    expanded: false,\n    theme: \"light\",\n    metadata: {},\n    bundle: {},\n    models: {}\n  };\n\n  shouldComponentUpdate(nextProps: Props): boolean {\n    // eslint-disable-line class-methods-use-this\n    if (\n      nextProps &&\n      nextProps.theme &&\n      this.props &&\n      nextProps.theme !== this.props.theme\n    ) {\n      return true;\n    }\n    // return false;\n    return true;\n  }\n\n  render(): ?React$Element<any> | null {\n    if (this.state.error) {\n      return (\n        <Fallback\n          componentStack={this.state.info ? this.state.info.componentStack : \"\"}\n          error={this.state.error}\n        />\n      );\n    }\n\n    const mimetype = richestMimetype(\n      this.props.bundle,\n      this.props.displayOrder,\n      this.props.transforms\n    );\n\n    if (!mimetype) {\n      // If no mimetype is supported, don't return an element\n      return null;\n    }\n\n    const Transform = this.props.transforms[mimetype];\n    const data = this.props.bundle[mimetype];\n    const metadata = this.props.metadata[mimetype];\n    return (\n      <Transform\n        expanded={this.props.expanded}\n        data={data}\n        metadata={metadata}\n        theme={this.props.theme}\n        models={this.props.models}\n      />\n    );\n  }\n}\n","// @flow\nimport React from \"react\";\nimport Ansi from \"ansi-to-react\";\n\nimport { transforms, displayOrder } from \"@nteract/transforms\";\n\nimport RichestMime from \"./richest-mime\";\n\ntype Props = {\n  expanded: boolean,\n  displayOrder: Array<string>,\n  output: any,\n  transforms: Object,\n  theme: string,\n  models: Object\n};\n\nconst classPrefix = \"nteract-display-area-\";\n\nexport default function Output(props: Props): ?React$Element<any> | null {\n  const output = props.output;\n  const outputType = output.output_type;\n  switch (outputType) {\n    case \"execute_result\":\n    // We can defer to display data here, the cell number will be handled\n    // separately. For reference, it is output.execution_count\n    // The execution_count belongs in the component above if\n    // this is a code cell\n\n    // falls through\n    case \"display_data\": {\n      const bundle = output.data;\n      const metadata = output.metadata;\n      return (\n        <RichestMime\n          expanded={props.expanded}\n          bundle={bundle}\n          metadata={metadata}\n          displayOrder={props.displayOrder}\n          transforms={props.transforms}\n          theme={props.theme}\n          models={props.models}\n        />\n      );\n    }\n    case \"stream\": {\n      const text = output.text;\n      const name = output.name;\n      switch (name) {\n        case \"stdout\":\n        case \"stderr\":\n          return <Ansi className={classPrefix + name}>{text}</Ansi>;\n        default:\n          return null;\n      }\n    }\n    case \"error\": {\n      const traceback = output.traceback;\n      if (!traceback) {\n        return (\n          <Ansi className={classPrefix + \"traceback\"}>{`${output.ename}: ${\n            output.evalue\n          }`}</Ansi>\n        );\n      }\n      return (\n        <Ansi className={classPrefix + \"traceback\"}>\n          {traceback.join(\"\\n\")}\n        </Ansi>\n      );\n    }\n    default:\n      return null;\n  }\n}\n\nOutput.defaultProps = {\n  transforms,\n  displayOrder\n};\n","// @flow\nimport Display from \"./display\";\nimport RichestMime from \"./richest-mime\";\nimport Output from \"./output\";\n\nexport { Display, RichestMime, Output };\n","// @flow\nimport React from \"react\";\n\nimport { transforms, displayOrder } from \"@nteract/transforms\";\n\nimport * as Immutable from \"immutable\";\n\nimport Output from \"./output\";\n\ntype Props = {\n  displayOrder: Array<string>,\n  outputs: Array<any>,\n  transforms: Object,\n  theme: string,\n  expanded: boolean,\n  isHidden: boolean,\n  models: Object\n};\n\nexport const DEFAULT_SCROLL_HEIGHT = 600;\n\nexport default class Display extends React.PureComponent<Props> {\n  static defaultProps = {\n    transforms,\n    displayOrder,\n    isHidden: false,\n    expanded: false,\n    theme: \"light\",\n    models: Immutable.Map()\n  };\n\n  render() {\n    const { isHidden, outputs, ...props } = this.props;\n\n    if (!isHidden) {\n      return (\n        <div\n          className=\"cell_display\"\n          style={{\n            maxHeight: props.expanded ? \"100%\" : `${DEFAULT_SCROLL_HEIGHT}px`,\n            overflowY: \"auto\"\n          }}\n        >\n          {outputs\n            ? outputs.map((output, index) => (\n                <Output key={index} output={output} {...props} />\n              ))\n            : null}\n        </div>\n      );\n    }\n    return null;\n  }\n}\n","// @flow\n/* eslint-disable class-methods-use-this */\nimport * as React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { of } from \"rxjs/observable/of\";\nimport { fromEvent } from \"rxjs/observable/fromEvent\";\nimport type { Subscription } from \"rxjs/Subscription\";\nimport { switchMap } from \"rxjs/operators\";\n\nimport { Map as ImmutableMap } from \"immutable\";\n\nimport { RichestMime } from \"@nteract/display-area\";\n\nimport { debounce, merge } from \"lodash\";\n\nimport * as monaco from \"monaco-editor\";\n\nfunction normalizeLineEndings(str) {\n  if (!str) return str;\n  return str.replace(/\\r\\n|\\r/g, \"\\n\");\n}\n\nexport type MonacoEditorProps = {\n  theme: string,\n  mode: ?string,\n  onChange: (value: string) => void,\n  value: string,\n  editorFocused: boolean\n};\n\nclass MonacoEditor extends React.Component<MonacoEditorProps> {\n  monaco: ?monaco.IStandaloneCodeEditor;\n  monacoContainer: ?HTMLElement;\n\n  static defaultProps = {\n    onChange: (value: string) => {},\n    editorFocused: false,\n    mode: \"text/plain\"\n  };\n\n  constructor(props: MonacoEditorProps): void {\n    super(props);\n  }\n\n  componentWillMount() {\n    (this: any).componentWillReceiveProps = debounce(\n      this.componentWillReceiveProps,\n      0\n    );\n  }\n\n  onDidChangeModelContent(e: any): void {\n    if (this.monaco && this.props.onChange) {\n      this.props.onChange(this.monaco.getValue());\n    }\n  }\n\n  componentDidMount(): void {\n    this.monaco = monaco.editor.create(this.monacoContainer, {\n      value: this.props.value,\n      language: this.props.mode,\n      theme: this.props.theme,\n      minimap: {\n        enabled: false\n      },\n      autoIndent: true\n    });\n\n    if (this.props.editorFocused) {\n      this.monaco.focus();\n    }\n\n    this.monaco.onDidChangeModelContent(\n      this.onDidChangeModelContent.bind(this)\n    );\n  }\n\n  componentDidUpdate(prevProps: MonacoEditorProps): void {\n    if (!this.monaco) {\n      return;\n    }\n\n    if (this.monaco.getValue() !== this.props.value) {\n      // FIXME: calling setValue resets cursor position in monaco. It shouldn't!\n      // $FlowFixMe: We should be detecting monaco above\n      this.monaco.setValue(this.props.value);\n    }\n\n    // $FlowFixMe: We should be detecting monaco above\n    this.monaco.updateOptions({\n      language: this.props.mode,\n      theme: this.props.theme\n    });\n  }\n\n  componentWillReceiveProps(nextProps: MonacoEditorProps) {\n    if (this.monaco && this.monaco.getValue() !== nextProps.value) {\n      // FIXME: calling setValue resets cursor position in monaco. It shouldn't!\n      this.monaco.setValue(nextProps.value);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.monaco) {\n      this.monaco.dispose();\n    }\n  }\n\n  render(): React$Element<any> {\n    return (\n      <div\n        className=\"monaco cm-s-composition\"\n        ref={container => {\n          this.monacoContainer = container;\n        }}\n      />\n    );\n  }\n}\n\nexport default MonacoEditor;\n"],"sourceRoot":""}